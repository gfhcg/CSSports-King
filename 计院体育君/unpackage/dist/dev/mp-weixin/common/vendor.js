(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createApp = createApp;
exports.createComponent = createComponent;
exports.createPage = createPage;
exports.createPlugin = createPlugin;
exports.createSubpackageApp = createSubpackageApp;
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 4));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 10));
var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/construct */ 14));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 17));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 12));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 21);
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 24));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var realAtob;
var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
if (typeof atob !== 'function') {
  realAtob = function realAtob(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, '');
    if (!b64re.test(str)) {
      throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
    }

    // Adding the padding if missing, for semplicity
    str += '=='.slice(2 - (str.length & 3));
    var bitmap;
    var result = '';
    var r1;
    var r2;
    var i = 0;
    for (; i < str.length;) {
      bitmap = b64.indexOf(str.charAt(i++)) << 18 | b64.indexOf(str.charAt(i++)) << 12 | (r1 = b64.indexOf(str.charAt(i++))) << 6 | (r2 = b64.indexOf(str.charAt(i++)));
      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  // 注意atob只能在全局对象上调用，例如：`const Base64 = {atob};Base64.atob('xxxx')`是错误的用法
  realAtob = atob;
}
function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}
function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0
    };
  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}
function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {
    var _getCurrentUserInfo = getCurrentUserInfo(),
      role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {
    var _getCurrentUserInfo2 = getCurrentUserInfo(),
      permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {
    var _getCurrentUserInfo3 = getCurrentUserInfo(),
      tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}
var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;
function isFn(fn) {
  return typeof fn === 'function';
}
function isStr(str) {
  return typeof str === 'string';
}
function isObject(obj) {
  return obj !== null && (0, _typeof2.default)(obj) === 'object';
}
function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
function noop() {}

/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
function sortObject(obj) {
  var sortObj = {};
  if (isPlainObject(obj)) {
    Object.keys(obj).sort().forEach(function (key) {
      sortObj[key] = obj[key];
    });
  }
  return !Object.keys(sortObj) ? obj : sortObj;
}
var HOOKS = ['invoke', 'success', 'fail', 'complete', 'returnValue'];
var globalInterceptors = {};
var scopedInterceptors = {};
function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}
function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}
function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}
function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}
function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}
function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}
function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}
function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}
function isPromise(obj) {
  return !!obj && ((0, _typeof2.default)(obj) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}
function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {}
        };
      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    }
  };
}
function wrapperOptions(interceptor) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}
function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}
function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}
function invokeApi(method, api, options) {
  for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    params[_key - 3] = arguments[_key];
  }
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}
var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        if (res[0]) {
          reject(res[0]);
        } else {
          resolve(res[1]);
        }
      });
    });
  }
};
var SYNC_API_RE = /^\$|Window$|WindowStyle$|sendHostEvent|sendNativeEvent|restoreGlobal|requireGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getLocale|setLocale|invokePushCallback|getWindowInfo|getDeviceInfo|getAppBaseInfo|getSystemSetting|getAppAuthorizeSetting/;
var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection', 'createPushMessage'];
var CALLBACK_API_RE = /^on|^off/;
function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}
function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}
function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).catch(function (err) {
    return [err];
  });
}
function shouldPromise(name) {
  if (isContextApi(name) || isSyncApi(name) || isCallbackApi(name)) {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(function (value) {
      return promise.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return promise.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };
}
function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      params[_key2 - 1] = arguments[_key2];
    }
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject
      })].concat(params));
    })));
  };
}
var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;
function checkDeviceWidth() {
  var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
    platform = _wx$getSystemInfoSync.platform,
    pixelRatio = _wx$getSystemInfoSync.pixelRatio,
    windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}
function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }
  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}
var LOCALE_ZH_HANS = 'zh-Hans';
var LOCALE_ZH_HANT = 'zh-Hant';
var LOCALE_EN = 'en';
var LOCALE_FR = 'fr';
var LOCALE_ES = 'es';
var messages = {};
var locale;
{
  locale = normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN;
}
function initI18nMessages() {
  if (!isEnableLocale()) {
    return;
  }
  var localeKeys = Object.keys(__uniConfig.locales);
  if (localeKeys.length) {
    localeKeys.forEach(function (locale) {
      var curMessages = messages[locale];
      var userMessages = __uniConfig.locales[locale];
      if (curMessages) {
        Object.assign(curMessages, userMessages);
      } else {
        messages[locale] = userMessages;
      }
    });
  }
}
initI18nMessages();
var i18n = (0, _uniI18n.initVueI18n)(locale, {});
var t = i18n.t;
var i18nMixin = i18n.mixin = {
  beforeCreate: function beforeCreate() {
    var _this = this;
    var unwatch = i18n.i18n.watchLocale(function () {
      _this.$forceUpdate();
    });
    this.$once('hook:beforeDestroy', function () {
      unwatch();
    });
  },
  methods: {
    $$t: function $$t(key, values) {
      return t(key, values);
    }
  }
};
var setLocale = i18n.setLocale;
var getLocale = i18n.getLocale;
function initAppLocale(Vue, appVm, locale) {
  var state = Vue.observable({
    locale: locale || i18n.getLocale()
  });
  var localeWatchers = [];
  appVm.$watchLocale = function (fn) {
    localeWatchers.push(fn);
  };
  Object.defineProperty(appVm, '$locale', {
    get: function get() {
      return state.locale;
    },
    set: function set(v) {
      state.locale = v;
      localeWatchers.forEach(function (watch) {
        return watch(v);
      });
    }
  });
}
function isEnableLocale() {
  return typeof __uniConfig !== 'undefined' && __uniConfig.locales && !!Object.keys(__uniConfig.locales).length;
}
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}
// export function initI18n() {
//   const localeKeys = Object.keys(__uniConfig.locales || {})
//   if (localeKeys.length) {
//     localeKeys.forEach((locale) =>
//       i18n.add(locale, __uniConfig.locales[locale])
//     )
//   }
// }

function getLocale$1() {
  // 优先使用 $locale
  var app = getApp({
    allowDefault: true
  });
  if (app && app.$vm) {
    return app.$vm.$locale;
  }
  return normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN;
}
function setLocale$1(locale) {
  var app = getApp();
  if (!app) {
    return false;
  }
  var oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach(function (fn) {
      return fn({
        locale: locale
      });
    });
    return true;
  }
  return false;
}
var onLocaleChangeCallbacks = [];
function onLocaleChange(fn) {
  if (onLocaleChangeCallbacks.indexOf(fn) === -1) {
    onLocaleChangeCallbacks.push(fn);
  }
}
if (typeof global !== 'undefined') {
  global.getLocale = getLocale$1;
}
var interceptors = {
  promiseInterceptor: promiseInterceptor
};
var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  getLocale: getLocale$1,
  setLocale: setLocale$1,
  onLocaleChange: onLocaleChange,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors
});
function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}
var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  }
};
var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(function (item, index) {
        return index < currentIndex ? item !== urls[currentIndex] : true;
      });
    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false
    };
  }
};
var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function useDeviceId(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId
    });
  }
  result.deviceId = deviceId;
}
function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.screenHeight - safeArea.bottom
    };
  }
}
function populateParameters(result) {
  var _result$brand = result.brand,
    brand = _result$brand === void 0 ? '' : _result$brand,
    _result$model = result.model,
    model = _result$model === void 0 ? '' : _result$model,
    _result$system = result.system,
    system = _result$system === void 0 ? '' : _result$system,
    _result$language = result.language,
    language = _result$language === void 0 ? '' : _result$language,
    theme = result.theme,
    version = result.version,
    platform = result.platform,
    fontSizeSetting = result.fontSizeSetting,
    SDKVersion = result.SDKVersion,
    pixelRatio = result.pixelRatio,
    deviceOrientation = result.deviceOrientation;
  // const isQuickApp = "mp-weixin".indexOf('quickapp-webview') !== -1

  // osName osVersion
  var osName = '';
  var osVersion = '';
  {
    osName = system.split(' ')[0] || '';
    osVersion = system.split(' ')[1] || '';
  }
  var hostVersion = version;

  // deviceType
  var deviceType = getGetDeviceType(result, model);

  // deviceModel
  var deviceBrand = getDeviceBrand(brand);

  // hostName
  var _hostName = getHostName(result);

  // deviceOrientation
  var _deviceOrientation = deviceOrientation; // 仅 微信 百度 支持

  // devicePixelRatio
  var _devicePixelRatio = pixelRatio;

  // SDKVersion
  var _SDKVersion = SDKVersion;

  // hostLanguage
  var hostLanguage = language.replace(/_/g, '-');

  // wx.getAccountInfoSync

  var parameters = {
    appId: "__UNI__CA70BCD",
    appName: "计院体育君",
    appVersion: "1.0.0",
    appVersionCode: "100",
    appLanguage: getAppLanguage(hostLanguage),
    uniCompileVersion: "3.6.15",
    uniRuntimeVersion: "3.6.15",
    uniPlatform: undefined || "mp-weixin",
    deviceBrand: deviceBrand,
    deviceModel: model,
    deviceType: deviceType,
    devicePixelRatio: _devicePixelRatio,
    deviceOrientation: _deviceOrientation,
    osName: osName.toLocaleLowerCase(),
    osVersion: osVersion,
    hostTheme: theme,
    hostVersion: hostVersion,
    hostLanguage: hostLanguage,
    hostName: _hostName,
    hostSDKVersion: _SDKVersion,
    hostFontSizeSetting: fontSizeSetting,
    windowTop: 0,
    windowBottom: 0,
    // TODO
    osLanguage: undefined,
    osTheme: undefined,
    ua: undefined,
    hostPackageName: undefined,
    browserName: undefined,
    browserVersion: undefined
  };
  Object.assign(result, parameters);
}
function getGetDeviceType(result, model) {
  var deviceType = result.deviceType || 'phone';
  {
    var deviceTypeMaps = {
      ipad: 'pad',
      windows: 'pc',
      mac: 'pc'
    };
    var deviceTypeMapsKeys = Object.keys(deviceTypeMaps);
    var _model = model.toLocaleLowerCase();
    for (var index = 0; index < deviceTypeMapsKeys.length; index++) {
      var _m = deviceTypeMapsKeys[index];
      if (_model.indexOf(_m) !== -1) {
        deviceType = deviceTypeMaps[_m];
        break;
      }
    }
  }
  return deviceType;
}
function getDeviceBrand(brand) {
  var deviceBrand = brand;
  if (deviceBrand) {
    deviceBrand = brand.toLocaleLowerCase();
  }
  return deviceBrand;
}
function getAppLanguage(defaultLanguage) {
  return getLocale$1 ? getLocale$1() : defaultLanguage;
}
function getHostName(result) {
  var _platform = 'WeChat';
  var _hostName = result.hostName || _platform; // mp-jd
  {
    if (result.environment) {
      _hostName = result.environment;
    } else if (result.host && result.host.env) {
      _hostName = result.host.env;
    }
  }
  return _hostName;
}
var getSystemInfo = {
  returnValue: function returnValue(result) {
    useDeviceId(result);
    addSafeAreaInsets(result);
    populateParameters(result);
  }
};
var showActionSheet = {
  args: function args(fromArgs) {
    if ((0, _typeof2.default)(fromArgs) === 'object') {
      fromArgs.alertText = fromArgs.title;
    }
  }
};
var getAppBaseInfo = {
  returnValue: function returnValue(result) {
    var _result = result,
      version = _result.version,
      language = _result.language,
      SDKVersion = _result.SDKVersion,
      theme = _result.theme;
    var _hostName = getHostName(result);
    var hostLanguage = language.replace('_', '-');
    result = sortObject(Object.assign(result, {
      appId: "__UNI__CA70BCD",
      appName: "计院体育君",
      appVersion: "1.0.0",
      appVersionCode: "100",
      appLanguage: getAppLanguage(hostLanguage),
      hostVersion: version,
      hostLanguage: hostLanguage,
      hostName: _hostName,
      hostSDKVersion: SDKVersion,
      hostTheme: theme
    }));
  }
};
var getDeviceInfo = {
  returnValue: function returnValue(result) {
    var _result2 = result,
      brand = _result2.brand,
      model = _result2.model;
    var deviceType = getGetDeviceType(result, model);
    var deviceBrand = getDeviceBrand(brand);
    useDeviceId(result);
    result = sortObject(Object.assign(result, {
      deviceType: deviceType,
      deviceBrand: deviceBrand,
      deviceModel: model
    }));
  }
};
var getWindowInfo = {
  returnValue: function returnValue(result) {
    addSafeAreaInsets(result);
    result = sortObject(Object.assign(result, {
      windowTop: 0,
      windowBottom: 0
    }));
  }
};
var getAppAuthorizeSetting = {
  returnValue: function returnValue(result) {
    var locationReducedAccuracy = result.locationReducedAccuracy;
    result.locationAccuracy = 'unsupported';
    if (locationReducedAccuracy === true) {
      result.locationAccuracy = 'reduced';
    } else if (locationReducedAccuracy === false) {
      result.locationAccuracy = 'full';
    }
  }
};

// import navigateTo from 'uni-helpers/navigate-to'

var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo,
  showActionSheet: showActionSheet,
  getAppBaseInfo: getAppBaseInfo,
  getDeviceInfo: getDeviceInfo,
  getWindowInfo: getWindowInfo,
  getAppAuthorizeSetting: getAppAuthorizeSetting
};
var todos = ['vibrate', 'preloadPage', 'unPreloadPage', 'loadSubPackage'];
var canIUses = [];
var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];
function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}
function processArgs(methodName, fromArgs) {
  var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {
    // 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {
          // 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {
          // 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {
          // {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}
function processReturnValue(methodName, res, returnValue) {
  var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {
    // 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}
function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {
      // 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {
      // 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }
      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);
      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {
        // 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}
var todoApis = Object.create(null);
var TODOS = ['onTabBarMidButtonTap', 'subscribePush', 'unsubscribePush', 'onPush', 'offPush', 'share'];
function createTodoApi(name) {
  return function todoApi(_ref) {
    var fail = _ref.fail,
      complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported")
    };
    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}
TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});
var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin']
};
function getProvider(_ref2) {
  var service = _ref2.service,
    success = _ref2.success,
    fail = _ref2.fail,
    complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service]
    };
    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found'
    };
    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}
var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider
});
var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();
function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}
function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}
var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit
});

/**
 * 框架内 try-catch
 */
/**
 * 开发者 try-catch
 */
function tryCatch(fn) {
  return function () {
    try {
      return fn.apply(fn, arguments);
    } catch (e) {
      // TODO
      console.error(e);
    }
  };
}
function getApiCallbacks(params) {
  var apiCallbacks = {};
  for (var name in params) {
    var param = params[name];
    if (isFn(param)) {
      apiCallbacks[name] = tryCatch(param);
      delete params[name];
    }
  }
  return apiCallbacks;
}
var cid;
var cidErrMsg;
var enabled;
function normalizePushMessage(message) {
  try {
    return JSON.parse(message);
  } catch (e) {}
  return message;
}
function invokePushCallback(args) {
  if (args.type === 'enabled') {
    enabled = true;
  } else if (args.type === 'clientId') {
    cid = args.cid;
    cidErrMsg = args.errMsg;
    invokeGetPushCidCallbacks(cid, args.errMsg);
  } else if (args.type === 'pushMsg') {
    var message = {
      type: 'receive',
      data: normalizePushMessage(args.message)
    };
    for (var i = 0; i < onPushMessageCallbacks.length; i++) {
      var callback = onPushMessageCallbacks[i];
      callback(message);
      // 该消息已被阻止
      if (message.stopped) {
        break;
      }
    }
  } else if (args.type === 'click') {
    onPushMessageCallbacks.forEach(function (callback) {
      callback({
        type: 'click',
        data: normalizePushMessage(args.message)
      });
    });
  }
}
var getPushCidCallbacks = [];
function invokeGetPushCidCallbacks(cid, errMsg) {
  getPushCidCallbacks.forEach(function (callback) {
    callback(cid, errMsg);
  });
  getPushCidCallbacks.length = 0;
}
function getPushClientId(args) {
  if (!isPlainObject(args)) {
    args = {};
  }
  var _getApiCallbacks = getApiCallbacks(args),
    success = _getApiCallbacks.success,
    fail = _getApiCallbacks.fail,
    complete = _getApiCallbacks.complete;
  var hasSuccess = isFn(success);
  var hasFail = isFn(fail);
  var hasComplete = isFn(complete);
  Promise.resolve().then(function () {
    if (typeof enabled === 'undefined') {
      enabled = false;
      cid = '';
      cidErrMsg = 'uniPush is not enabled';
    }
    getPushCidCallbacks.push(function (cid, errMsg) {
      var res;
      if (cid) {
        res = {
          errMsg: 'getPushClientId:ok',
          cid: cid
        };
        hasSuccess && success(res);
      } else {
        res = {
          errMsg: 'getPushClientId:fail' + (errMsg ? ' ' + errMsg : '')
        };
        hasFail && fail(res);
      }
      hasComplete && complete(res);
    });
    if (typeof cid !== 'undefined') {
      invokeGetPushCidCallbacks(cid, cidErrMsg);
    }
  });
}
var onPushMessageCallbacks = [];
// 不使用 defineOnApi 实现，是因为 defineOnApi 依赖 UniServiceJSBridge ，该对象目前在小程序上未提供，故简单实现
var onPushMessage = function onPushMessage(fn) {
  if (onPushMessageCallbacks.indexOf(fn) === -1) {
    onPushMessageCallbacks.push(fn);
  }
};
var offPushMessage = function offPushMessage(fn) {
  if (!fn) {
    onPushMessageCallbacks.length = 0;
  } else {
    var index = onPushMessageCallbacks.indexOf(fn);
    if (index > -1) {
      onPushMessageCallbacks.splice(index, 1);
    }
  }
};
var api = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getPushClientId: getPushClientId,
  onPushMessage: onPushMessage,
  offPushMessage: offPushMessage,
  invokePushCallback: invokePushCallback
});
var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];
function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}
function initBehavior(options) {
  return Behavior(options);
}
function isPage() {
  return !!this.route;
}
function initRelation(detail) {
  this.triggerEvent('__l', detail);
}
function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector) || [];
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || toSkip(component);
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}
function syncRefs(refs, newRefs) {
  var oldKeys = (0, _construct2.default)(Set, (0, _toConsumableArray2.default)(Object.keys(refs)));
  var newKeys = Object.keys(newRefs);
  newKeys.forEach(function (key) {
    var oldValue = refs[key];
    var newValue = newRefs[key];
    if (Array.isArray(oldValue) && Array.isArray(newValue) && oldValue.length === newValue.length && newValue.every(function (value) {
      return oldValue.includes(value);
    })) {
      return;
    }
    refs[key] = newValue;
    oldKeys.delete(key);
  });
  oldKeys.forEach(function (key) {
    delete refs[key];
  });
  return refs;
}
function initRefs(vm) {
  var mpInstance = vm.$scope;
  var refs = {};
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for') || [];
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || toSkip(component));
      });
      return syncRefs(refs, $refs);
    }
  });
}
function handleLink(event) {
  var _ref3 = event.detail || event.value,
    vuePid = _ref3.vuePid,
    vueOptions = _ref3.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;
  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }
  if (!parentVm) {
    parentVm = this.$vm;
  }
  vueOptions.parent = parentVm;
}
function markMPComponent(component) {
  // 在 Vue 中标记为小程序组件
  var IS_MP = '__v_isMPComponent';
  Object.defineProperty(component, IS_MP, {
    configurable: true,
    enumerable: false,
    value: true
  });
  return component;
}
function toSkip(obj) {
  var OB = '__ob__';
  var SKIP = '__v_skip';
  if (isObject(obj) && Object.isExtensible(obj)) {
    // 避免被 @vue/composition-api 观测
    Object.defineProperty(obj, OB, {
      configurable: true,
      enumerable: false,
      value: (0, _defineProperty2.default)({}, SKIP, true)
    });
  }
  return obj;
}
var MPPage = Page;
var MPComponent = Component;
var customizeRE = /:/g;
var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});
function initTriggerEvent(mpInstance) {
  var oldTriggerEvent = mpInstance.triggerEvent;
  var newTriggerEvent = function newTriggerEvent(event) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }
    // 事件名统一转驼峰格式，仅处理：当前组件为 vue 组件、当前组件为 vue 组件子组件
    if (this.$vm || this.dataset && this.dataset.comType) {
      event = customize(event);
    } else {
      // 针对微信/QQ小程序单独补充驼峰格式事件，以兼容历史项目
      var newEvent = customize(event);
      if (newEvent !== event) {
        oldTriggerEvent.apply(this, [newEvent].concat(args));
      }
    }
    return oldTriggerEvent.apply(this, [event].concat(args));
  };
  try {
    // 京东小程序 triggerEvent 为只读
    mpInstance.triggerEvent = newTriggerEvent;
  } catch (error) {
    mpInstance._triggerEvent = newTriggerEvent;
  }
}
function initHook(name, options, isComponent) {
  var oldHook = options[name];
  options[name] = function () {
    markMPComponent(this);
    initTriggerEvent(this);
    if (oldHook) {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }
      return oldHook.apply(this, args);
    }
  };
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;
  Component = function Component() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}
var PAGE_EVENT_HOOKS = ['onPullDownRefresh', 'onReachBottom', 'onAddToFavorites', 'onShareTimeline', 'onShareAppMessage', 'onPageScroll', 'onResize', 'onTabItemTap'];
function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}
function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }
  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }
  vueOptions = vueOptions.default || vueOptions;
  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super && vueOptions.super.options && Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }
  if (isFn(vueOptions[hook]) || Array.isArray(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {
      return hasHook(hook, mixin);
    });
  }
}
function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}
function initUnknownHooks(mpOptions, vueOptions) {
  var excludes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  findHooks(vueOptions).forEach(function (hook) {
    return initHook$1(mpOptions, hook, excludes);
  });
}
function findHooks(vueOptions) {
  var hooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (vueOptions) {
    Object.keys(vueOptions).forEach(function (name) {
      if (name.indexOf('on') === 0 && isFn(vueOptions[name])) {
        hooks.push(name);
      }
    });
  }
  return hooks;
}
function initHook$1(mpOptions, hook, excludes) {
  if (excludes.indexOf(hook) === -1 && !hasOwn(mpOptions, hook)) {
    mpOptions[hook] = function (args) {
      return this.$vm && this.$vm.__call_hook(hook, args);
    };
  }
}
function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}
function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}
function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;
  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}
function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};
  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"计院体育君","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }
  if (!isPlainObject(data)) {
    data = {};
  }
  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });
  return data;
}
var PROP_TYPES = [String, Number, Boolean, Object, Array, null];
function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;
  var vueProps = vueOptions.props;
  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }
  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: ''
          };
          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: ''
          };
        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(initBehavior({
      properties: initProperties(vueExtends.props, true)
    }));
  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(initBehavior({
          properties: initProperties(vueMixin.props, true)
        }));
      }
    });
  }
  return behaviors;
}
function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}
function initProperties(props) {
  var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var options = arguments.length > 3 ? arguments[3] : undefined;
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: ''
    };
    {
      if (options.virtualHost) {
        properties.virtualHostStyle = {
          type: null,
          value: ''
        };
        properties.virtualHostClass = {
          type: null,
          value: ''
        };
      }
    }
    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: ''
    };
    properties.vueSlots = {
      // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots
        });
      }
    };
  }
  if (Array.isArray(props)) {
    // ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key)
      };
    });
  } else if (isPlainObject(props)) {
    // {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {
        // title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }
        opts.type = parsePropType(key, opts.type);
        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key)
        };
      } else {
        // content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key)
        };
      }
    });
  }
  return properties;
}
function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}
  event.stopPropagation = noop;
  event.preventDefault = noop;
  event.target = event.target || {};
  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }
  if (hasOwn(event, 'markerId')) {
    event.detail = (0, _typeof2.default)(event.detail) === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }
  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }
  return event;
}
function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {
      // ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];
      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }
      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }
      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}
function processEventExtra(vm, extra, event, __args__) {
  var extraObj = {};
  if (Array.isArray(extra) && extra.length) {
    /**
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *'test'
     */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {
          // model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {
            // $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            extraObj['$' + index] = event.detail ? event.detail.__args__ || __args__ : __args__;
          } else if (dataPath.indexOf('$event.') === 0) {
            // $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }
  return extraObj;
}
function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}
function processEventArgs(vm, event) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var isCustom = arguments.length > 4 ? arguments[4] : undefined;
  var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象

  // fixed 用户直接触发 mpInstance.triggerEvent
  var __args__ = isPlainObject(event.detail) ? event.detail.__args__ || [event.detail] : [event.detail];
  if (isCustom) {
    // 自定义事件
    isCustomMPEvent = event.currentTarget && event.currentTarget.dataset && event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {
      // 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return __args__;
    }
  }
  var extraObj = processEventExtra(vm, extra, event, __args__);
  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {
        // input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(__args__[0]);
        } else {
          // wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });
  return ret;
}
var ONCE = '~';
var CUSTOM = '^';
function isMatchEventType(eventType, optType) {
  return eventType === optType || optType === 'regionchange' && (eventType === 'begin' || eventType === 'end');
}
function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}
function handleEvent(event) {
  var _this2 = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;
  var ret = [];
  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];
    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;
    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this2.$vm;
          if (handlerCtx.$options.generic) {
            // mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx, processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName));
            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            var _type = _this2.$vm.mpType === 'page' ? 'Page' : 'Component';
            var path = _this2.route || _this2.is;
            throw new Error("".concat(_type, " \"").concat(path, "\" does not have a method \"").concat(methodName, "\""));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName);
          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });
  if (eventType === 'input' && ret.length === 1 && typeof ret[0] !== 'undefined') {
    return ret[0];
  }
}
var eventChannels = {};
var eventChannelStack = [];
function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}
var hooks = ['onShow', 'onHide', 'onError', 'onPageNotFound', 'onThemeChange', 'onUnhandledRejection'];
function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}
function initScopedSlotsParams() {
  var center = {};
  var parents = {};
  _vue.default.prototype.$hasScopedSlotsParams = function (vueId) {
    var has = center[vueId];
    if (!has) {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
    return has;
  };
  _vue.default.prototype.$getScopedSlotsParams = function (vueId, name, key) {
    var data = center[vueId];
    if (data) {
      var object = data[name] || {};
      return key ? object[key] : object;
    } else {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
  };
  _vue.default.prototype.$setScopedSlotsParams = function (name, value) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      var object = center[vueId] = center[vueId] || {};
      object[name] = value;
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    }
  };
  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    }
  });
}
function parseBaseApp(vm, _ref4) {
  var mocks = _ref4.mocks,
    initRefs = _ref4.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);
  _vue.default.prototype.mpHost = "mp-weixin";
  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }
      this.mpType = this.$options.mpType;
      this.$mp = (0, _defineProperty2.default)({
        data: {}
      }, this.mpType, this.$options.mpInstance);
      this.$scope = this.$options.mpInstance;
      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {
        // hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    }
  });
  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {
        // 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {
          // 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }
      this.$vm = vm;
      this.$vm.$mp = {
        app: this
      };
      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;
      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);
      this.$vm.__call_hook('onLaunch', args);
    }
  };

  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }
  initAppLocale(_vue.default, vm, normalizeLocale(wx.getSystemInfoSync().language) || LOCALE_EN);
  initHooks(appOptions, hooks);
  initUnknownHooks(appOptions, vm.$options);
  return appOptions;
}
function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs
  });
}
function createApp(vm) {
  App(parseApp(vm));
  return vm;
}
var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {
  return '%' + c.charCodeAt(0).toString(16);
};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {
  return encodeURIComponent(str).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');
};
function stringifyQuery(obj) {
  var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];
    if (val === undefined) {
      return '';
    }
    if (val === null) {
      return encodeStr(key);
    }
    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }
    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {
    return x.length > 0;
  }).join('&') : null;
  return res ? "?".concat(res) : '';
}
function parseBaseComponent(vueComponentOptions) {
  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    isPage = _ref5.isPage,
    initRelation = _ref5.initRelation;
  var needVueOptions = arguments.length > 2 ? arguments[2] : undefined;
  var _initVueComponent = initVueComponent(_vue.default, vueComponentOptions),
    _initVueComponent2 = (0, _slicedToArray2.default)(_initVueComponent, 2),
    VueComponent = _initVueComponent2[0],
    vueOptions = _initVueComponent2[1];
  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true
  }, vueOptions.options || {});
  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }
  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file, options),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;
        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties
        };
        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options
        });

        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      }
    },
    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      }
    },
    methods: {
      __l: handleLink,
      __e: handleEvent
    }
  };
  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }
  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }
  if (needVueOptions) {
    return [componentOptions, vueOptions, VueComponent];
  }
  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}
function parseComponent(vueComponentOptions, needVueOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation
  }, needVueOptions);
}
var hooks$1 = ['onShow', 'onHide', 'onUnload'];
hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);
function parseBasePage(vuePageOptions) {
  var _parseComponent = parseComponent(vuePageOptions, true),
    _parseComponent2 = (0, _slicedToArray2.default)(_parseComponent, 2),
    pageOptions = _parseComponent2[0],
    vueOptions = _parseComponent2[1];
  initHooks(pageOptions.methods, hooks$1, vueOptions);
  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery)
    };
    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };
  {
    initUnknownHooks(pageOptions.methods, vuePageOptions, ['onReady']);
  }
  return pageOptions;
}
function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions);
}
function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}
function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}
function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true
  });
  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});
canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name : canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});
var uni = {};
if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (typeof wx[name] !== 'function' && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    }
  });
} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });
  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }
  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });
  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });
  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}
wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;
var uni$1 = uni;
var _default = uni$1;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))

/***/ }),

/***/ 10:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 11);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 11:
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 12)["default"];
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ 13);
function _toPropertyKey(arg) {
  var key = toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}
module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 12:
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 13:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 12)["default"];
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null) return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== undefined) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object") return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 14:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 15);
var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ 16);
function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports["default"] = module.exports;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
  return _construct.apply(null, arguments);
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 15:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 158:
/*!************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ 159));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 4));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 12));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 17));
var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 161));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 10));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 22));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 23));
var _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ 162));
var _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ 163));
var _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ 165));
var _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ 166));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 21);
var _pages = _interopRequireDefault(__webpack_require__(/*! @/pages.json */ 168));
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e33) { throw _e33; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e34) { didErr = true; err = _e34; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
"undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self;
function n(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function s(e, t, n) {
  return e(n = {
    path: t,
    exports: {},
    require: function require(e, t) {
      return function () {
        throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
      }(null == t && n.path);
    }
  }, n.exports), n.exports;
}
var r = s(function (e, t) {
    var n;
    e.exports = (n = n || function (e, t) {
      var n = Object.create || function () {
          function e() {}
          return function (t) {
            var n;
            return e.prototype = t, n = new e(), e.prototype = null, n;
          };
        }(),
        s = {},
        r = s.lib = {},
        i = r.Base = {
          extend: function extend(e) {
            var t = n(this);
            return e && t.mixIn(e), t.hasOwnProperty("init") && this.init !== t.init || (t.init = function () {
              t.$super.init.apply(this, arguments);
            }), t.init.prototype = t, t.$super = this, t;
          },
          create: function create() {
            var e = this.extend();
            return e.init.apply(e, arguments), e;
          },
          init: function init() {},
          mixIn: function mixIn(e) {
            for (var t in e) {
              e.hasOwnProperty(t) && (this[t] = e[t]);
            }
            e.hasOwnProperty("toString") && (this.toString = e.toString);
          },
          clone: function clone() {
            return this.init.prototype.extend(this);
          }
        },
        o = r.WordArray = i.extend({
          init: function init(e, n) {
            e = this.words = e || [], this.sigBytes = n != t ? n : 4 * e.length;
          },
          toString: function toString(e) {
            return (e || c).stringify(this);
          },
          concat: function concat(e) {
            var t = this.words,
              n = e.words,
              s = this.sigBytes,
              r = e.sigBytes;
            if (this.clamp(), s % 4) for (var i = 0; i < r; i++) {
              var o = n[i >>> 2] >>> 24 - i % 4 * 8 & 255;
              t[s + i >>> 2] |= o << 24 - (s + i) % 4 * 8;
            } else for (i = 0; i < r; i += 4) {
              t[s + i >>> 2] = n[i >>> 2];
            }
            return this.sigBytes += r, this;
          },
          clamp: function clamp() {
            var t = this.words,
              n = this.sigBytes;
            t[n >>> 2] &= 4294967295 << 32 - n % 4 * 8, t.length = e.ceil(n / 4);
          },
          clone: function clone() {
            var e = i.clone.call(this);
            return e.words = this.words.slice(0), e;
          },
          random: function random(t) {
            for (var n, s = [], r = function r(t) {
                t = t;
                var n = 987654321,
                  s = 4294967295;
                return function () {
                  var r = ((n = 36969 * (65535 & n) + (n >> 16) & s) << 16) + (t = 18e3 * (65535 & t) + (t >> 16) & s) & s;
                  return r /= 4294967296, (r += .5) * (e.random() > .5 ? 1 : -1);
                };
              }, i = 0; i < t; i += 4) {
              var a = r(4294967296 * (n || e.random()));
              n = 987654071 * a(), s.push(4294967296 * a() | 0);
            }
            return new o.init(s, t);
          }
        }),
        a = s.enc = {},
        c = a.Hex = {
          stringify: function stringify(e) {
            for (var t = e.words, n = e.sigBytes, s = [], r = 0; r < n; r++) {
              var i = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;
              s.push((i >>> 4).toString(16)), s.push((15 & i).toString(16));
            }
            return s.join("");
          },
          parse: function parse(e) {
            for (var t = e.length, n = [], s = 0; s < t; s += 2) {
              n[s >>> 3] |= parseInt(e.substr(s, 2), 16) << 24 - s % 8 * 4;
            }
            return new o.init(n, t / 2);
          }
        },
        u = a.Latin1 = {
          stringify: function stringify(e) {
            for (var t = e.words, n = e.sigBytes, s = [], r = 0; r < n; r++) {
              var i = t[r >>> 2] >>> 24 - r % 4 * 8 & 255;
              s.push(String.fromCharCode(i));
            }
            return s.join("");
          },
          parse: function parse(e) {
            for (var t = e.length, n = [], s = 0; s < t; s++) {
              n[s >>> 2] |= (255 & e.charCodeAt(s)) << 24 - s % 4 * 8;
            }
            return new o.init(n, t);
          }
        },
        l = a.Utf8 = {
          stringify: function stringify(e) {
            try {
              return decodeURIComponent(escape(u.stringify(e)));
            } catch (e) {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function parse(e) {
            return u.parse(unescape(encodeURIComponent(e)));
          }
        },
        h = r.BufferedBlockAlgorithm = i.extend({
          reset: function reset() {
            this._data = new o.init(), this._nDataBytes = 0;
          },
          _append: function _append(e) {
            "string" == typeof e && (e = l.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes;
          },
          _process: function _process(t) {
            var n = this._data,
              s = n.words,
              r = n.sigBytes,
              i = this.blockSize,
              a = r / (4 * i),
              c = (a = t ? e.ceil(a) : e.max((0 | a) - this._minBufferSize, 0)) * i,
              u = e.min(4 * c, r);
            if (c) {
              for (var l = 0; l < c; l += i) {
                this._doProcessBlock(s, l);
              }
              var h = s.splice(0, c);
              n.sigBytes -= u;
            }
            return new o.init(h, u);
          },
          clone: function clone() {
            var e = i.clone.call(this);
            return e._data = this._data.clone(), e;
          },
          _minBufferSize: 0
        });
      r.Hasher = h.extend({
        cfg: i.extend(),
        init: function init(e) {
          this.cfg = this.cfg.extend(e), this.reset();
        },
        reset: function reset() {
          h.reset.call(this), this._doReset();
        },
        update: function update(e) {
          return this._append(e), this._process(), this;
        },
        finalize: function finalize(e) {
          return e && this._append(e), this._doFinalize();
        },
        blockSize: 16,
        _createHelper: function _createHelper(e) {
          return function (t, n) {
            return new e.init(n).finalize(t);
          };
        },
        _createHmacHelper: function _createHmacHelper(e) {
          return function (t, n) {
            return new d.HMAC.init(e, n).finalize(t);
          };
        }
      });
      var d = s.algo = {};
      return s;
    }(Math), n);
  }),
  i = r,
  o = (s(function (e, t) {
    var n;
    e.exports = (n = i, function (e) {
      var t = n,
        s = t.lib,
        r = s.WordArray,
        i = s.Hasher,
        o = t.algo,
        a = [];
      !function () {
        for (var t = 0; t < 64; t++) {
          a[t] = 4294967296 * e.abs(e.sin(t + 1)) | 0;
        }
      }();
      var c = o.MD5 = i.extend({
        _doReset: function _doReset() {
          this._hash = new r.init([1732584193, 4023233417, 2562383102, 271733878]);
        },
        _doProcessBlock: function _doProcessBlock(e, t) {
          for (var n = 0; n < 16; n++) {
            var s = t + n,
              r = e[s];
            e[s] = 16711935 & (r << 8 | r >>> 24) | 4278255360 & (r << 24 | r >>> 8);
          }
          var i = this._hash.words,
            o = e[t + 0],
            c = e[t + 1],
            f = e[t + 2],
            p = e[t + 3],
            g = e[t + 4],
            m = e[t + 5],
            y = e[t + 6],
            _ = e[t + 7],
            w = e[t + 8],
            v = e[t + 9],
            S = e[t + 10],
            k = e[t + 11],
            I = e[t + 12],
            b = e[t + 13],
            T = e[t + 14],
            A = e[t + 15],
            C = i[0],
            P = i[1],
            E = i[2],
            O = i[3];
          C = u(C, P, E, O, o, 7, a[0]), O = u(O, C, P, E, c, 12, a[1]), E = u(E, O, C, P, f, 17, a[2]), P = u(P, E, O, C, p, 22, a[3]), C = u(C, P, E, O, g, 7, a[4]), O = u(O, C, P, E, m, 12, a[5]), E = u(E, O, C, P, y, 17, a[6]), P = u(P, E, O, C, _, 22, a[7]), C = u(C, P, E, O, w, 7, a[8]), O = u(O, C, P, E, v, 12, a[9]), E = u(E, O, C, P, S, 17, a[10]), P = u(P, E, O, C, k, 22, a[11]), C = u(C, P, E, O, I, 7, a[12]), O = u(O, C, P, E, b, 12, a[13]), E = u(E, O, C, P, T, 17, a[14]), C = l(C, P = u(P, E, O, C, A, 22, a[15]), E, O, c, 5, a[16]), O = l(O, C, P, E, y, 9, a[17]), E = l(E, O, C, P, k, 14, a[18]), P = l(P, E, O, C, o, 20, a[19]), C = l(C, P, E, O, m, 5, a[20]), O = l(O, C, P, E, S, 9, a[21]), E = l(E, O, C, P, A, 14, a[22]), P = l(P, E, O, C, g, 20, a[23]), C = l(C, P, E, O, v, 5, a[24]), O = l(O, C, P, E, T, 9, a[25]), E = l(E, O, C, P, p, 14, a[26]), P = l(P, E, O, C, w, 20, a[27]), C = l(C, P, E, O, b, 5, a[28]), O = l(O, C, P, E, f, 9, a[29]), E = l(E, O, C, P, _, 14, a[30]), C = h(C, P = l(P, E, O, C, I, 20, a[31]), E, O, m, 4, a[32]), O = h(O, C, P, E, w, 11, a[33]), E = h(E, O, C, P, k, 16, a[34]), P = h(P, E, O, C, T, 23, a[35]), C = h(C, P, E, O, c, 4, a[36]), O = h(O, C, P, E, g, 11, a[37]), E = h(E, O, C, P, _, 16, a[38]), P = h(P, E, O, C, S, 23, a[39]), C = h(C, P, E, O, b, 4, a[40]), O = h(O, C, P, E, o, 11, a[41]), E = h(E, O, C, P, p, 16, a[42]), P = h(P, E, O, C, y, 23, a[43]), C = h(C, P, E, O, v, 4, a[44]), O = h(O, C, P, E, I, 11, a[45]), E = h(E, O, C, P, A, 16, a[46]), C = d(C, P = h(P, E, O, C, f, 23, a[47]), E, O, o, 6, a[48]), O = d(O, C, P, E, _, 10, a[49]), E = d(E, O, C, P, T, 15, a[50]), P = d(P, E, O, C, m, 21, a[51]), C = d(C, P, E, O, I, 6, a[52]), O = d(O, C, P, E, p, 10, a[53]), E = d(E, O, C, P, S, 15, a[54]), P = d(P, E, O, C, c, 21, a[55]), C = d(C, P, E, O, w, 6, a[56]), O = d(O, C, P, E, A, 10, a[57]), E = d(E, O, C, P, y, 15, a[58]), P = d(P, E, O, C, b, 21, a[59]), C = d(C, P, E, O, g, 6, a[60]), O = d(O, C, P, E, k, 10, a[61]), E = d(E, O, C, P, f, 15, a[62]), P = d(P, E, O, C, v, 21, a[63]), i[0] = i[0] + C | 0, i[1] = i[1] + P | 0, i[2] = i[2] + E | 0, i[3] = i[3] + O | 0;
        },
        _doFinalize: function _doFinalize() {
          var t = this._data,
            n = t.words,
            s = 8 * this._nDataBytes,
            r = 8 * t.sigBytes;
          n[r >>> 5] |= 128 << 24 - r % 32;
          var i = e.floor(s / 4294967296),
            o = s;
          n[15 + (r + 64 >>> 9 << 4)] = 16711935 & (i << 8 | i >>> 24) | 4278255360 & (i << 24 | i >>> 8), n[14 + (r + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), t.sigBytes = 4 * (n.length + 1), this._process();
          for (var a = this._hash, c = a.words, u = 0; u < 4; u++) {
            var l = c[u];
            c[u] = 16711935 & (l << 8 | l >>> 24) | 4278255360 & (l << 24 | l >>> 8);
          }
          return a;
        },
        clone: function clone() {
          var e = i.clone.call(this);
          return e._hash = this._hash.clone(), e;
        }
      });
      function u(e, t, n, s, r, i, o) {
        var a = e + (t & n | ~t & s) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      function l(e, t, n, s, r, i, o) {
        var a = e + (t & s | n & ~s) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      function h(e, t, n, s, r, i, o) {
        var a = e + (t ^ n ^ s) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      function d(e, t, n, s, r, i, o) {
        var a = e + (n ^ (t | ~s)) + r + o;
        return (a << i | a >>> 32 - i) + t;
      }
      t.MD5 = i._createHelper(c), t.HmacMD5 = i._createHmacHelper(c);
    }(Math), n.MD5);
  }), s(function (e, t) {
    var n;
    e.exports = (n = i, void function () {
      var e = n,
        t = e.lib.Base,
        s = e.enc.Utf8;
      e.algo.HMAC = t.extend({
        init: function init(e, t) {
          e = this._hasher = new e.init(), "string" == typeof t && (t = s.parse(t));
          var n = e.blockSize,
            r = 4 * n;
          t.sigBytes > r && (t = e.finalize(t)), t.clamp();
          for (var i = this._oKey = t.clone(), o = this._iKey = t.clone(), a = i.words, c = o.words, u = 0; u < n; u++) {
            a[u] ^= 1549556828, c[u] ^= 909522486;
          }
          i.sigBytes = o.sigBytes = r, this.reset();
        },
        reset: function reset() {
          var e = this._hasher;
          e.reset(), e.update(this._iKey);
        },
        update: function update(e) {
          return this._hasher.update(e), this;
        },
        finalize: function finalize(e) {
          var t = this._hasher,
            n = t.finalize(e);
          return t.reset(), t.finalize(this._oKey.clone().concat(n));
        }
      });
    }());
  }), s(function (e, t) {
    e.exports = i.HmacMD5;
  })),
  a = s(function (e, t) {
    e.exports = i.enc.Utf8;
  }),
  c = s(function (e, t) {
    var n;
    e.exports = (n = i, function () {
      var e = n,
        t = e.lib.WordArray;
      function s(e, n, s) {
        for (var r = [], i = 0, o = 0; o < n; o++) {
          if (o % 4) {
            var a = s[e.charCodeAt(o - 1)] << o % 4 * 2,
              c = s[e.charCodeAt(o)] >>> 6 - o % 4 * 2;
            r[i >>> 2] |= (a | c) << 24 - i % 4 * 8, i++;
          }
        }
        return t.create(r, i);
      }
      e.enc.Base64 = {
        stringify: function stringify(e) {
          var t = e.words,
            n = e.sigBytes,
            s = this._map;
          e.clamp();
          for (var r = [], i = 0; i < n; i += 3) {
            for (var o = (t[i >>> 2] >>> 24 - i % 4 * 8 & 255) << 16 | (t[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 255) << 8 | t[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 255, a = 0; a < 4 && i + .75 * a < n; a++) {
              r.push(s.charAt(o >>> 6 * (3 - a) & 63));
            }
          }
          var c = s.charAt(64);
          if (c) for (; r.length % 4;) {
            r.push(c);
          }
          return r.join("");
        },
        parse: function parse(e) {
          var t = e.length,
            n = this._map,
            r = this._reverseMap;
          if (!r) {
            r = this._reverseMap = [];
            for (var i = 0; i < n.length; i++) {
              r[n.charCodeAt(i)] = i;
            }
          }
          var o = n.charAt(64);
          if (o) {
            var a = e.indexOf(o);
            -1 !== a && (t = a);
          }
          return s(e, t, r);
        },
        _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
      };
    }(), n.enc.Base64);
  });
var u = "FUNCTION",
  l = "OBJECT",
  h = "CLIENT_DB";
function d(e) {
  return Object.prototype.toString.call(e).slice(8, -1).toLowerCase();
}
function f(e) {
  return "object" === d(e);
}
function p(e) {
  return "function" == typeof e;
}
function g(e) {
  return function () {
    try {
      return e.apply(e, arguments);
    } catch (e) {
      console.error(e);
    }
  };
}
function m(e) {
  return e && "string" == typeof e ? JSON.parse(e) : e;
}
var y = "development" === "development",
  _ = "mp-weixin",
  w = "true" === undefined || !0 === undefined,
  v = m([]);
var S;
S = "h5" === _ ? "web" : "app-plus" === _ ? "app" : _;
var k = m(undefined),
  I = m([]) || [],
  b = true;
var T = "";
try {
  {
    var _e2 = __webpack_require__(/*! uni-stat-config */ 169).default || __webpack_require__(/*! uni-stat-config */ 169);
    T = _e2.appid;
  }
} catch (e) {}
var A = {};
function C(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var n, s;
  return n = A, s = e, Object.prototype.hasOwnProperty.call(n, s) || (A[e] = t), A[e];
}
"app" === S && (A = uni._globalUniCloudObj ? uni._globalUniCloudObj : uni._globalUniCloudObj = {});
var P = ["invoke", "success", "fail", "complete"],
  E = C("_globalUniCloudInterceptor");
function O(e, t) {
  E[e] || (E[e] = {}), f(t) && Object.keys(t).forEach(function (n) {
    P.indexOf(n) > -1 && function (e, t, n) {
      var s = E[e][t];
      s || (s = E[e][t] = []), -1 === s.indexOf(n) && p(n) && s.push(n);
    }(e, n, t[n]);
  });
}
function x(e, t) {
  E[e] || (E[e] = {}), f(t) ? Object.keys(t).forEach(function (n) {
    P.indexOf(n) > -1 && function (e, t, n) {
      var s = E[e][t];
      if (!s) return;
      var r = s.indexOf(n);
      r > -1 && s.splice(r, 1);
    }(e, n, t[n]);
  }) : delete E[e];
}
function U(e, t) {
  return e && 0 !== e.length ? e.reduce(function (e, n) {
    return e.then(function () {
      return n(t);
    });
  }, Promise.resolve()) : Promise.resolve();
}
function R(e, t) {
  return E[e] && E[e][t] || [];
}
function L(e) {
  O("callObject", e);
}
var N = C("_globalUniCloudListener"),
  D = "response",
  F = "needLogin",
  q = "refreshToken",
  K = "clientdb",
  M = "cloudfunction",
  j = "cloudobject";
function B(e) {
  return N[e] || (N[e] = []), N[e];
}
function $(e, t) {
  var n = B(e);
  n.includes(t) || n.push(t);
}
function W(e, t) {
  var n = B(e),
    s = n.indexOf(t);
  -1 !== s && n.splice(s, 1);
}
function z(e, t) {
  var n = B(e);
  for (var _e3 = 0; _e3 < n.length; _e3++) {
    (0, n[_e3])(t);
  }
}
var J,
  H = !1;
function G() {
  return J || (J = new Promise(function (e) {
    H && e(), function t() {
      if ("function" == typeof getCurrentPages) {
        var _t2 = getCurrentPages();
        _t2 && _t2[0] && (H = !0, e());
      }
      H || setTimeout(function () {
        t();
      }, 30);
    }();
  }), J);
}
function V(e) {
  var t = {};
  for (var _n2 in e) {
    var _s2 = e[_n2];
    p(_s2) && (t[_n2] = g(_s2));
  }
  return t;
}
function Y(e, t) {
  return t ? function (n) {
    var _this = this;
    var s = !1;
    if ("callFunction" === t) {
      var _e4 = n && n.type || u;
      s = _e4 !== u;
    }
    var r = "callFunction" === t && !s;
    var i;
    i = this.isReady ? Promise.resolve() : this.initUniCloud, n = n || {};
    var _V = V(n),
      o = _V.success,
      a = _V.fail,
      c = _V.complete,
      l = i.then(function () {
        return s ? Promise.resolve() : U(R(t, "invoke"), n);
      }).then(function () {
        return e.call(_this, n);
      }).then(function (e) {
        return s ? Promise.resolve(e) : U(R(t, "success"), e).then(function () {
          return U(R(t, "complete"), e);
        }).then(function () {
          return r && z(D, {
            type: M,
            content: e
          }), Promise.resolve(e);
        });
      }, function (e) {
        return s ? Promise.reject(e) : U(R(t, "fail"), e).then(function () {
          return U(R(t, "complete"), e);
        }).then(function () {
          return z(D, {
            type: M,
            content: e
          }), Promise.reject(e);
        });
      });
    if (!(o || a || c)) return l;
    l.then(function (e) {
      o && o(e), c && c(e), r && z(D, {
        type: M,
        content: e
      });
    }, function (e) {
      a && a(e), c && c(e), r && z(D, {
        type: M,
        content: e
      });
    });
  } : function (t) {
    t = t || {};
    var _V2 = V(t),
      n = _V2.success,
      s = _V2.fail,
      r = _V2.complete;
    if (!(n || s || r)) return e.call(this, t);
    e.call(this, t).then(function (e) {
      n && n(e), r && r(e);
    }, function (e) {
      s && s(e), r && r(e);
    });
  };
}
var Q = /*#__PURE__*/function (_Error) {
  (0, _inherits2.default)(Q, _Error);
  var _super = _createSuper(Q);
  function Q(e) {
    var _this2;
    (0, _classCallCheck2.default)(this, Q);
    _this2 = _super.call(this, e.message), _this2.errMsg = e.message || e.errMsg || "unknown system error", _this2.code = _this2.errCode = e.code || e.errCode || "SYSTEM_ERROR", _this2.errSubject = _this2.subject = e.subject || e.errSubject, _this2.cause = e.cause, _this2.requestId = e.requestId;
    return _this2;
  }
  (0, _createClass2.default)(Q, [{
    key: "toJson",
    value: function toJson() {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      if (!(e >= 10)) return e++, {
        errCode: this.errCode,
        errMsg: this.errMsg,
        errSubject: this.errSubject,
        cause: this.cause && this.cause.toJson ? this.cause.toJson(e) : this.cause
      };
    }
  }]);
  return Q;
}( /*#__PURE__*/(0, _wrapNativeSuper2.default)(Error));
var X = {
  request: function request(e) {
    return uni.request(e);
  },
  uploadFile: function uploadFile(e) {
    return uni.uploadFile(e);
  },
  setStorageSync: function setStorageSync(e, t) {
    return uni.setStorageSync(e, t);
  },
  getStorageSync: function getStorageSync(e) {
    return uni.getStorageSync(e);
  },
  removeStorageSync: function removeStorageSync(e) {
    return uni.removeStorageSync(e);
  },
  clearStorageSync: function clearStorageSync() {
    return uni.clearStorageSync();
  }
};
function Z() {
  return {
    token: X.getStorageSync("uni_id_token") || X.getStorageSync("uniIdToken"),
    tokenExpired: X.getStorageSync("uni_id_token_expired")
  };
}
function ee() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref.token,
    t = _ref.tokenExpired;
  e && X.setStorageSync("uni_id_token", e), t && X.setStorageSync("uni_id_token_expired", t);
}
function te() {
  if (!y || "web" !== S) return;
  uni.getStorageSync("__LAST_DCLOUD_APPID") !== T && (uni.setStorageSync("__LAST_DCLOUD_APPID", T), console.warn("检测到当前项目与上次运行到此端口的项目不一致，自动清理uni-id保存的token信息（仅开发调试时生效）"), X.removeStorageSync("uni_id_token"), X.removeStorageSync("uniIdToken"), X.removeStorageSync("uni_id_token_expired"));
}
var ne, se;
function re() {
  return ne || (ne = uni.getSystemInfoSync()), ne;
}
function ie() {
  var e, t;
  try {
    if (uni.getLaunchOptionsSync) {
      if (uni.getLaunchOptionsSync.toString().indexOf("not yet implemented") > -1) return;
      var _uni$getLaunchOptions = uni.getLaunchOptionsSync(),
        _n3 = _uni$getLaunchOptions.scene,
        _s3 = _uni$getLaunchOptions.channel;
      e = _s3, t = _n3;
    }
  } catch (e) {}
  return {
    channel: e,
    scene: t
  };
}
function oe() {
  var e = uni.getLocale && uni.getLocale() || "en";
  if (se) return _objectSpread(_objectSpread({}, se), {}, {
    locale: e,
    LOCALE: e
  });
  var t = re(),
    n = t.deviceId,
    s = t.osName,
    r = t.uniPlatform,
    i = t.appId,
    o = ["pixelRatio", "brand", "model", "system", "language", "version", "platform", "host", "SDKVersion", "swanNativeVersion", "app", "AppPlatform", "fontSizeSetting"];
  for (var _e5 = 0; _e5 < o.length; _e5++) {
    delete t[o[_e5]];
  }
  return se = _objectSpread(_objectSpread({
    PLATFORM: r,
    OS: s,
    APPID: i,
    DEVICEID: n
  }, ie()), t), _objectSpread(_objectSpread({}, se), {}, {
    locale: e,
    LOCALE: e
  });
}
var ae = {
    sign: function sign(e, t) {
      var n = "";
      return Object.keys(e).sort().forEach(function (t) {
        e[t] && (n = n + "&" + t + "=" + e[t]);
      }), n = n.slice(1), o(n, t).toString();
    },
    wrappedRequest: function wrappedRequest(e, t) {
      return new Promise(function (n, s) {
        t(Object.assign(e, {
          complete: function complete(e) {
            e || (e = {}), y && "web" === S && e.errMsg && 0 === e.errMsg.indexOf("request:fail") && console.warn("发布H5，需要在uniCloud后台操作，绑定安全域名，否则会因为跨域问题而无法访问。教程参考：https://uniapp.dcloud.io/uniCloud/quickstart?id=useinh5");
            var t = e.data && e.data.header && e.data.header["x-serverless-request-id"] || e.header && e.header["request-id"];
            if (!e.statusCode || e.statusCode >= 400) return s(new Q({
              code: "SYS_ERR",
              message: e.errMsg || "request:fail",
              requestId: t
            }));
            var r = e.data;
            if (r.error) return s(new Q({
              code: r.error.code,
              message: r.error.message,
              requestId: t
            }));
            r.result = r.data, r.requestId = t, delete r.data, n(r);
          }
        }));
      });
    },
    toBase64: function toBase64(e) {
      return c.stringify(a.parse(e));
    }
  },
  ce = {
    "uniCloud.init.paramRequired": "{param} required",
    "uniCloud.uploadFile.fileError": "filePath should be instance of File"
  };
var _e6 = (0, _uniI18n.initVueI18n)({
    "zh-Hans": {
      "uniCloud.init.paramRequired": "缺少参数：{param}",
      "uniCloud.uploadFile.fileError": "filePath应为File对象"
    },
    "zh-Hant": {
      "uniCloud.init.paramRequired": "缺少参数：{param}",
      "uniCloud.uploadFile.fileError": "filePath应为File对象"
    },
    en: ce,
    fr: {
      "uniCloud.init.paramRequired": "{param} required",
      "uniCloud.uploadFile.fileError": "filePath should be instance of File"
    },
    es: {
      "uniCloud.init.paramRequired": "{param} required",
      "uniCloud.uploadFile.fileError": "filePath should be instance of File"
    },
    ja: ce
  }, "zh-Hans"),
  ue = _e6.t;
var le = /*#__PURE__*/function () {
  function le(e) {
    (0, _classCallCheck2.default)(this, le);
    ["spaceId", "clientSecret"].forEach(function (t) {
      if (!Object.prototype.hasOwnProperty.call(e, t)) throw new Error(ue("uniCloud.init.paramRequired", {
        param: t
      }));
    }), this.config = Object.assign({}, {
      endpoint: "https://api.bspapp.com"
    }, e), this.config.provider = "aliyun", this.config.requestUrl = this.config.endpoint + "/client", this.config.envType = this.config.envType || "public", this.config.accessTokenKey = "access_token_" + this.config.spaceId, this.adapter = X, this._getAccessTokenPromise = null, this._getAccessTokenPromiseStatus = null;
  }
  (0, _createClass2.default)(le, [{
    key: "hasAccessToken",
    get: function get() {
      return !!this.accessToken;
    }
  }, {
    key: "setAccessToken",
    value: function setAccessToken(e) {
      this.accessToken = e;
    }
  }, {
    key: "requestWrapped",
    value: function requestWrapped(e) {
      return ae.wrappedRequest(e, this.adapter.request);
    }
  }, {
    key: "requestAuth",
    value: function requestAuth(e) {
      return this.requestWrapped(e);
    }
  }, {
    key: "request",
    value: function request(e, t) {
      var _this3 = this;
      return Promise.resolve().then(function () {
        return _this3.hasAccessToken ? t ? _this3.requestWrapped(e) : _this3.requestWrapped(e).catch(function (t) {
          return new Promise(function (e, n) {
            !t || "GATEWAY_INVALID_TOKEN" !== t.code && "InvalidParameter.InvalidToken" !== t.code ? n(t) : e();
          }).then(function () {
            return _this3.getAccessToken();
          }).then(function () {
            var t = _this3.rebuildRequest(e);
            return _this3.request(t, !0);
          });
        }) : _this3.getAccessToken().then(function () {
          var t = _this3.rebuildRequest(e);
          return _this3.request(t, !0);
        });
      });
    }
  }, {
    key: "rebuildRequest",
    value: function rebuildRequest(e) {
      var t = Object.assign({}, e);
      return t.data.token = this.accessToken, t.header["x-basement-token"] = this.accessToken, t.header["x-serverless-sign"] = ae.sign(t.data, this.config.clientSecret), t;
    }
  }, {
    key: "setupRequest",
    value: function setupRequest(e, t) {
      var n = Object.assign({}, e, {
          spaceId: this.config.spaceId,
          timestamp: Date.now()
        }),
        s = {
          "Content-Type": "application/json"
        };
      return "auth" !== t && (n.token = this.accessToken, s["x-basement-token"] = this.accessToken), s["x-serverless-sign"] = ae.sign(n, this.config.clientSecret), {
        url: this.config.requestUrl,
        method: "POST",
        data: n,
        dataType: "json",
        header: s
      };
    }
  }, {
    key: "getAccessToken",
    value: function getAccessToken() {
      var _this4 = this;
      if ("pending" === this._getAccessTokenPromiseStatus) return this._getAccessTokenPromise;
      this._getAccessTokenPromiseStatus = "pending";
      return this._getAccessTokenPromise = this.requestAuth(this.setupRequest({
        method: "serverless.auth.user.anonymousAuthorize",
        params: "{}"
      }, "auth")).then(function (e) {
        return new Promise(function (t, n) {
          e.result && e.result.accessToken ? (_this4.setAccessToken(e.result.accessToken), _this4._getAccessTokenPromiseStatus = "fulfilled", t(_this4.accessToken)) : (_this4._getAccessTokenPromiseStatus = "rejected", n(new Q({
            code: "AUTH_FAILED",
            message: "获取accessToken失败"
          })));
        });
      }, function (e) {
        return _this4._getAccessTokenPromiseStatus = "rejected", Promise.reject(e);
      }), this._getAccessTokenPromise;
    }
  }, {
    key: "authorize",
    value: function authorize() {
      this.getAccessToken();
    }
  }, {
    key: "callFunction",
    value: function callFunction(e) {
      var t = {
        method: "serverless.function.runtime.invoke",
        params: JSON.stringify({
          functionTarget: e.name,
          functionArgs: e.data || {}
        })
      };
      return this.request(this.setupRequest(t));
    }
  }, {
    key: "getOSSUploadOptionsFromPath",
    value: function getOSSUploadOptionsFromPath(e) {
      var t = {
        method: "serverless.file.resource.generateProximalSign",
        params: JSON.stringify(e)
      };
      return this.request(this.setupRequest(t));
    }
  }, {
    key: "uploadFileToOSS",
    value: function uploadFileToOSS(_ref2) {
      var _this5 = this;
      var e = _ref2.url,
        t = _ref2.formData,
        n = _ref2.name,
        s = _ref2.filePath,
        r = _ref2.fileType,
        i = _ref2.onUploadProgress;
      return new Promise(function (o, a) {
        var c = _this5.adapter.uploadFile({
          url: e,
          formData: t,
          name: n,
          filePath: s,
          fileType: r,
          header: {
            "X-OSS-server-side-encrpytion": "AES256"
          },
          success: function success(e) {
            e && e.statusCode < 400 ? o(e) : a(new Q({
              code: "UPLOAD_FAILED",
              message: "文件上传失败"
            }));
          },
          fail: function fail(e) {
            a(new Q({
              code: e.code || "UPLOAD_FAILED",
              message: e.message || e.errMsg || "文件上传失败"
            }));
          }
        });
        "function" == typeof i && c && "function" == typeof c.onProgressUpdate && c.onProgressUpdate(function (e) {
          i({
            loaded: e.totalBytesSent,
            total: e.totalBytesExpectedToSend
          });
        });
      });
    }
  }, {
    key: "reportOSSUpload",
    value: function reportOSSUpload(e) {
      var t = {
        method: "serverless.file.resource.report",
        params: JSON.stringify(e)
      };
      return this.request(this.setupRequest(t));
    }
  }, {
    key: "uploadFile",
    value: function () {
      var _uploadFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(_ref3) {
        var e, t, _ref3$fileType, n, s, r, i, o, a, c, u, l, h, f, p, g, m, y, _e7, _;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                e = _ref3.filePath, t = _ref3.cloudPath, _ref3$fileType = _ref3.fileType, n = _ref3$fileType === void 0 ? "image" : _ref3$fileType, s = _ref3.onUploadProgress, r = _ref3.config;
                if (!("string" !== d(t))) {
                  _context.next = 3;
                  break;
                }
                throw new Q({
                  code: "INVALID_PARAM",
                  message: "cloudPath必须为字符串类型"
                });
              case 3:
                if (t = t.trim()) {
                  _context.next = 5;
                  break;
                }
                throw new Q({
                  code: "CLOUDPATH_REQUIRED",
                  message: "cloudPath不可为空"
                });
              case 5:
                if (!/:\/\//.test(t)) {
                  _context.next = 7;
                  break;
                }
                throw new Q({
                  code: "INVALID_PARAM",
                  message: "cloudPath不合法"
                });
              case 7:
                i = r && r.envType || this.config.envType;
                _context.next = 10;
                return this.getOSSUploadOptionsFromPath({
                  env: i,
                  filename: t
                });
              case 10:
                o = _context.sent.result;
                a = "https://" + o.cdnDomain + "/" + o.ossPath;
                c = o.securityToken;
                u = o.accessKeyId;
                l = o.signature;
                h = o.host;
                f = o.ossPath;
                p = o.id;
                g = o.policy;
                m = o.ossCallbackUrl;
                y = {
                  "Cache-Control": "max-age=2592000",
                  "Content-Disposition": "attachment",
                  OSSAccessKeyId: u,
                  Signature: l,
                  host: h,
                  id: p,
                  key: f,
                  policy: g,
                  success_action_status: 200
                };
                if (c && (y["x-oss-security-token"] = c), m) {
                  _e7 = JSON.stringify({
                    callbackUrl: m,
                    callbackBody: JSON.stringify({
                      fileId: p,
                      spaceId: this.config.spaceId
                    }),
                    callbackBodyType: "application/json"
                  });
                  y.callback = ae.toBase64(_e7);
                }
                _ = {
                  url: "https://" + o.host,
                  formData: y,
                  fileName: "file",
                  name: "file",
                  filePath: e,
                  fileType: n
                };
                _context.next = 25;
                return this.uploadFileToOSS(Object.assign({}, _, {
                  onUploadProgress: s
                }));
              case 25:
                if (!m) {
                  _context.next = 27;
                  break;
                }
                return _context.abrupt("return", {
                  success: !0,
                  filePath: e,
                  fileID: a
                });
              case 27:
                _context.next = 29;
                return this.reportOSSUpload({
                  id: p
                });
              case 29:
                if (!_context.sent.success) {
                  _context.next = 31;
                  break;
                }
                return _context.abrupt("return", {
                  success: !0,
                  filePath: e,
                  fileID: a
                });
              case 31:
                throw new Q({
                  code: "UPLOAD_FAILED",
                  message: "文件上传失败"
                });
              case 32:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function uploadFile(_x) {
        return _uploadFile.apply(this, arguments);
      }
      return uploadFile;
    }()
  }, {
    key: "getTempFileURL",
    value: function getTempFileURL() {
      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref4.fileList;
      return new Promise(function (t, n) {
        Array.isArray(e) && 0 !== e.length || n(new Q({
          code: "INVALID_PARAM",
          message: "fileList的元素必须是非空的字符串"
        })), t({
          fileList: e.map(function (e) {
            return {
              fileID: e,
              tempFileURL: e
            };
          })
        });
      });
    }
  }, {
    key: "getFileInfo",
    value: function () {
      var _getFileInfo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {
        var _ref5,
          e,
          t,
          _args2 = arguments;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _ref5 = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, e = _ref5.fileList;
                if (!(!Array.isArray(e) || 0 === e.length)) {
                  _context2.next = 3;
                  break;
                }
                throw new Q({
                  code: "INVALID_PARAM",
                  message: "fileList的元素必须是非空的字符串"
                });
              case 3:
                t = {
                  method: "serverless.file.resource.info",
                  params: JSON.stringify({
                    id: e.map(function (e) {
                      return e.split("?")[0];
                    }).join(",")
                  })
                };
                _context2.next = 6;
                return this.request(this.setupRequest(t));
              case 6:
                _context2.t0 = _context2.sent.result;
                return _context2.abrupt("return", {
                  fileList: _context2.t0
                });
              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function getFileInfo() {
        return _getFileInfo.apply(this, arguments);
      }
      return getFileInfo;
    }()
  }]);
  return le;
}();
var he = {
  init: function init(e) {
    var t = new le(e),
      n = {
        signInAnonymously: function signInAnonymously() {
          return t.authorize();
        },
        getLoginState: function getLoginState() {
          return Promise.resolve(!1);
        }
      };
    return t.auth = function () {
      return n;
    }, t.customAuth = t.auth, t;
  }
};
var de = "undefined" != typeof location && "http:" === location.protocol ? "http:" : "https:";
var fe;
!function (e) {
  e.local = "local", e.none = "none", e.session = "session";
}(fe || (fe = {}));
var pe = function pe() {};
var ge = function ge() {
  var e;
  if (!Promise) {
    e = function e() {}, e.promise = {};
    var _t3 = function _t3() {
      throw new Q({
        message: 'Your Node runtime does support ES6 Promises. Set "global.Promise" to your preferred implementation of promises.'
      });
    };
    return Object.defineProperty(e.promise, "then", {
      get: _t3
    }), Object.defineProperty(e.promise, "catch", {
      get: _t3
    }), e;
  }
  var t = new Promise(function (t, n) {
    e = function e(_e8, s) {
      return _e8 ? n(_e8) : t(s);
    };
  });
  return e.promise = t, e;
};
function me(e) {
  return void 0 === e;
}
function ye(e) {
  return "[object Null]" === Object.prototype.toString.call(e);
}
var _e;
function we(e) {
  var t = (n = e, "[object Array]" === Object.prototype.toString.call(n) ? e : [e]);
  var n;
  var _iterator = _createForOfIteratorHelper(t),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var _e9 = _step.value;
      var _t4 = _e9.isMatch,
        _n4 = _e9.genAdapter,
        _s4 = _e9.runtime;
      if (_t4()) return {
        adapter: _n4(),
        runtime: _s4
      };
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}
!function (e) {
  e.WEB = "web", e.WX_MP = "wx_mp";
}(_e || (_e = {}));
var ve = {
    adapter: null,
    runtime: void 0
  },
  Se = ["anonymousUuidKey"];
var ke = /*#__PURE__*/function (_pe) {
  (0, _inherits2.default)(ke, _pe);
  var _super2 = _createSuper(ke);
  function ke() {
    var _this6;
    (0, _classCallCheck2.default)(this, ke);
    _this6 = _super2.call(this), ve.adapter.root.tcbObject || (ve.adapter.root.tcbObject = {});
    return _this6;
  }
  (0, _createClass2.default)(ke, [{
    key: "setItem",
    value: function setItem(e, t) {
      ve.adapter.root.tcbObject[e] = t;
    }
  }, {
    key: "getItem",
    value: function getItem(e) {
      return ve.adapter.root.tcbObject[e];
    }
  }, {
    key: "removeItem",
    value: function removeItem(e) {
      delete ve.adapter.root.tcbObject[e];
    }
  }, {
    key: "clear",
    value: function clear() {
      delete ve.adapter.root.tcbObject;
    }
  }]);
  return ke;
}(pe);
function Ie(e, t) {
  switch (e) {
    case "local":
      return t.localStorage || new ke();
    case "none":
      return new ke();
    default:
      return t.sessionStorage || new ke();
  }
}
var be = /*#__PURE__*/function () {
  function be(e) {
    (0, _classCallCheck2.default)(this, be);
    if (!this._storage) {
      this._persistence = ve.adapter.primaryStorage || e.persistence, this._storage = Ie(this._persistence, ve.adapter);
      var _t5 = "access_token_".concat(e.env),
        _n5 = "access_token_expire_".concat(e.env),
        _s5 = "refresh_token_".concat(e.env),
        _r = "anonymous_uuid_".concat(e.env),
        _i = "login_type_".concat(e.env),
        _o = "user_info_".concat(e.env);
      this.keys = {
        accessTokenKey: _t5,
        accessTokenExpireKey: _n5,
        refreshTokenKey: _s5,
        anonymousUuidKey: _r,
        loginTypeKey: _i,
        userInfoKey: _o
      };
    }
  }
  (0, _createClass2.default)(be, [{
    key: "updatePersistence",
    value: function updatePersistence(e) {
      if (e === this._persistence) return;
      var t = "local" === this._persistence;
      this._persistence = e;
      var n = Ie(e, ve.adapter);
      for (var _e10 in this.keys) {
        var _s6 = this.keys[_e10];
        if (t && Se.includes(_e10)) continue;
        var _r2 = this._storage.getItem(_s6);
        me(_r2) || ye(_r2) || (n.setItem(_s6, _r2), this._storage.removeItem(_s6));
      }
      this._storage = n;
    }
  }, {
    key: "setStore",
    value: function setStore(e, t, n) {
      if (!this._storage) return;
      var s = {
          version: n || "localCachev1",
          content: t
        },
        r = JSON.stringify(s);
      try {
        this._storage.setItem(e, r);
      } catch (e) {
        throw e;
      }
    }
  }, {
    key: "getStore",
    value: function getStore(e, t) {
      try {
        if (!this._storage) return;
      } catch (e) {
        return "";
      }
      t = t || "localCachev1";
      var n = this._storage.getItem(e);
      if (!n) return "";
      if (n.indexOf(t) >= 0) {
        return JSON.parse(n).content;
      }
      return "";
    }
  }, {
    key: "removeStore",
    value: function removeStore(e) {
      this._storage.removeItem(e);
    }
  }]);
  return be;
}();
var Te = {},
  Ae = {};
function Ce(e) {
  return Te[e];
}
var Pe = /*#__PURE__*/(0, _createClass2.default)(function Pe(e, t) {
  (0, _classCallCheck2.default)(this, Pe);
  this.data = t || null, this.name = e;
});
var Ee = /*#__PURE__*/function (_Pe) {
  (0, _inherits2.default)(Ee, _Pe);
  var _super3 = _createSuper(Ee);
  function Ee(e, t) {
    var _this7;
    (0, _classCallCheck2.default)(this, Ee);
    _this7 = _super3.call(this, "error", {
      error: e,
      data: t
    }), _this7.error = e;
    return _this7;
  }
  return (0, _createClass2.default)(Ee);
}(Pe);
var Oe = new ( /*#__PURE__*/function () {
  function _class() {
    (0, _classCallCheck2.default)(this, _class);
    this._listeners = {};
  }
  (0, _createClass2.default)(_class, [{
    key: "on",
    value: function on(e, t) {
      return function (e, t, n) {
        n[e] = n[e] || [], n[e].push(t);
      }(e, t, this._listeners), this;
    }
  }, {
    key: "off",
    value: function off(e, t) {
      return function (e, t, n) {
        if (n && n[e]) {
          var _s7 = n[e].indexOf(t);
          -1 !== _s7 && n[e].splice(_s7, 1);
        }
      }(e, t, this._listeners), this;
    }
  }, {
    key: "fire",
    value: function fire(e, t) {
      if (e instanceof Ee) return console.error(e.error), this;
      var n = "string" == typeof e ? new Pe(e, t || {}) : e;
      var s = n.name;
      if (this._listens(s)) {
        n.target = this;
        var _e11 = this._listeners[s] ? (0, _toConsumableArray2.default)(this._listeners[s]) : [];
        var _iterator2 = _createForOfIteratorHelper(_e11),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _t6 = _step2.value;
            _t6.call(this, n);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      }
      return this;
    }
  }, {
    key: "_listens",
    value: function _listens(e) {
      return this._listeners[e] && this._listeners[e].length > 0;
    }
  }]);
  return _class;
}())();
function xe(e, t) {
  Oe.on(e, t);
}
function Ue(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  Oe.fire(e, t);
}
function Re(e, t) {
  Oe.off(e, t);
}
var Le = "loginStateChanged",
  Ne = "loginStateExpire",
  De = "loginTypeChanged",
  Fe = "anonymousConverted",
  qe = "refreshAccessToken";
var Ke;
!function (e) {
  e.ANONYMOUS = "ANONYMOUS", e.WECHAT = "WECHAT", e.WECHAT_PUBLIC = "WECHAT-PUBLIC", e.WECHAT_OPEN = "WECHAT-OPEN", e.CUSTOM = "CUSTOM", e.EMAIL = "EMAIL", e.USERNAME = "USERNAME", e.NULL = "NULL";
}(Ke || (Ke = {}));
var Me = ["auth.getJwt", "auth.logout", "auth.signInWithTicket", "auth.signInAnonymously", "auth.signIn", "auth.fetchAccessTokenWithRefreshToken", "auth.signUpWithEmailAndPassword", "auth.activateEndUserMail", "auth.sendPasswordResetEmail", "auth.resetPasswordWithToken", "auth.isUsernameRegistered"],
  je = {
    "X-SDK-Version": "1.3.5"
  };
function Be(e, t, n) {
  var s = e[t];
  e[t] = function (t) {
    var r = {},
      i = {};
    n.forEach(function (n) {
      var _n$call = n.call(e, t),
        s = _n$call.data,
        o = _n$call.headers;
      Object.assign(r, s), Object.assign(i, o);
    });
    var o = t.data;
    return o && function () {
      var e;
      if (e = o, "[object FormData]" !== Object.prototype.toString.call(e)) t.data = _objectSpread(_objectSpread({}, o), r);else for (var _e12 in r) {
        o.append(_e12, r[_e12]);
      }
    }(), t.headers = _objectSpread(_objectSpread({}, t.headers || {}), i), s.call(e, t);
  };
}
function $e() {
  var e = Math.random().toString(16).slice(2);
  return {
    data: {
      seqId: e
    },
    headers: _objectSpread(_objectSpread({}, je), {}, {
      "x-seqid": e
    })
  };
}
var We = /*#__PURE__*/function () {
  function We() {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck2.default)(this, We);
    var t;
    this.config = e, this._reqClass = new ve.adapter.reqClass({
      timeout: this.config.timeout,
      timeoutMsg: "\u8BF7\u6C42\u5728".concat(this.config.timeout / 1e3, "s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD"),
      restrictedMethods: ["post"]
    }), this._cache = Ce(this.config.env), this._localCache = (t = this.config.env, Ae[t]), Be(this._reqClass, "post", [$e]), Be(this._reqClass, "upload", [$e]), Be(this._reqClass, "download", [$e]);
  }
  (0, _createClass2.default)(We, [{
    key: "post",
    value: function () {
      var _post = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(e) {
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this._reqClass.post(e);
              case 2:
                return _context3.abrupt("return", _context3.sent);
              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function post(_x2) {
        return _post.apply(this, arguments);
      }
      return post;
    }()
  }, {
    key: "upload",
    value: function () {
      var _upload = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(e) {
        return _regenerator.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this._reqClass.upload(e);
              case 2:
                return _context4.abrupt("return", _context4.sent);
              case 3:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function upload(_x3) {
        return _upload.apply(this, arguments);
      }
      return upload;
    }()
  }, {
    key: "download",
    value: function () {
      var _download = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5(e) {
        return _regenerator.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                _context5.next = 2;
                return this._reqClass.download(e);
              case 2:
                return _context5.abrupt("return", _context5.sent);
              case 3:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function download(_x4) {
        return _download.apply(this, arguments);
      }
      return download;
    }()
  }, {
    key: "refreshAccessToken",
    value: function () {
      var _refreshAccessToken2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6() {
        var e, t;
        return _regenerator.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this._refreshAccessTokenPromise || (this._refreshAccessTokenPromise = this._refreshAccessToken());
                _context6.prev = 1;
                _context6.next = 4;
                return this._refreshAccessTokenPromise;
              case 4:
                e = _context6.sent;
                _context6.next = 10;
                break;
              case 7:
                _context6.prev = 7;
                _context6.t0 = _context6["catch"](1);
                t = _context6.t0;
              case 10:
                if (!(this._refreshAccessTokenPromise = null, this._shouldRefreshAccessTokenHook = null, t)) {
                  _context6.next = 12;
                  break;
                }
                throw t;
              case 12:
                return _context6.abrupt("return", e);
              case 13:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[1, 7]]);
      }));
      function refreshAccessToken() {
        return _refreshAccessToken2.apply(this, arguments);
      }
      return refreshAccessToken;
    }()
  }, {
    key: "_refreshAccessToken",
    value: function () {
      var _refreshAccessToken3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {
        var _this$_cache$keys, e, t, n, s, r, i, o, a, _e13, _e14, _t7, _s8;
        return _regenerator.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _this$_cache$keys = this._cache.keys, e = _this$_cache$keys.accessTokenKey, t = _this$_cache$keys.accessTokenExpireKey, n = _this$_cache$keys.refreshTokenKey, s = _this$_cache$keys.loginTypeKey, r = _this$_cache$keys.anonymousUuidKey;
                this._cache.removeStore(e), this._cache.removeStore(t);
                i = this._cache.getStore(n);
                if (i) {
                  _context7.next = 5;
                  break;
                }
                throw new Q({
                  message: "未登录CloudBase"
                });
              case 5:
                o = {
                  refresh_token: i
                };
                _context7.next = 8;
                return this.request("auth.fetchAccessTokenWithRefreshToken", o);
              case 8:
                a = _context7.sent;
                if (!a.data.code) {
                  _context7.next = 21;
                  break;
                }
                _e13 = a.data.code;
                if (!("SIGN_PARAM_INVALID" === _e13 || "REFRESH_TOKEN_EXPIRED" === _e13 || "INVALID_REFRESH_TOKEN" === _e13)) {
                  _context7.next = 20;
                  break;
                }
                if (!(this._cache.getStore(s) === Ke.ANONYMOUS && "INVALID_REFRESH_TOKEN" === _e13)) {
                  _context7.next = 19;
                  break;
                }
                _e14 = this._cache.getStore(r);
                _t7 = this._cache.getStore(n);
                _context7.next = 17;
                return this.send("auth.signInAnonymously", {
                  anonymous_uuid: _e14,
                  refresh_token: _t7
                });
              case 17:
                _s8 = _context7.sent;
                return _context7.abrupt("return", (this.setRefreshToken(_s8.refresh_token), this._refreshAccessToken()));
              case 19:
                Ue(Ne), this._cache.removeStore(n);
              case 20:
                throw new Q({
                  code: a.data.code,
                  message: "\u5237\u65B0access token\u5931\u8D25\uFF1A".concat(a.data.code)
                });
              case 21:
                if (!a.data.access_token) {
                  _context7.next = 23;
                  break;
                }
                return _context7.abrupt("return", (Ue(qe), this._cache.setStore(e, a.data.access_token), this._cache.setStore(t, a.data.access_token_expire + Date.now()), {
                  accessToken: a.data.access_token,
                  accessTokenExpire: a.data.access_token_expire
                }));
              case 23:
                a.data.refresh_token && (this._cache.removeStore(n), this._cache.setStore(n, a.data.refresh_token), this._refreshAccessToken());
              case 24:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
      function _refreshAccessToken() {
        return _refreshAccessToken3.apply(this, arguments);
      }
      return _refreshAccessToken;
    }()
  }, {
    key: "getAccessToken",
    value: function () {
      var _getAccessToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8() {
        var _this$_cache$keys2, e, t, n, s, r, i;
        return _regenerator.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _this$_cache$keys2 = this._cache.keys, e = _this$_cache$keys2.accessTokenKey, t = _this$_cache$keys2.accessTokenExpireKey, n = _this$_cache$keys2.refreshTokenKey;
                if (this._cache.getStore(n)) {
                  _context8.next = 3;
                  break;
                }
                throw new Q({
                  message: "refresh token不存在，登录状态异常"
                });
              case 3:
                s = this._cache.getStore(e), r = this._cache.getStore(t), i = !0;
                _context8.t0 = this._shouldRefreshAccessTokenHook;
                if (!_context8.t0) {
                  _context8.next = 9;
                  break;
                }
                _context8.next = 8;
                return this._shouldRefreshAccessTokenHook(s, r);
              case 8:
                _context8.t0 = !_context8.sent;
              case 9:
                _context8.t1 = _context8.t0;
                if (!_context8.t1) {
                  _context8.next = 12;
                  break;
                }
                i = !1;
              case 12:
                return _context8.abrupt("return", (!s || !r || r < Date.now()) && i ? this.refreshAccessToken() : {
                  accessToken: s,
                  accessTokenExpire: r
                });
              case 13:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));
      function getAccessToken() {
        return _getAccessToken.apply(this, arguments);
      }
      return getAccessToken;
    }()
  }, {
    key: "request",
    value: function () {
      var _request = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee9(e, t, n) {
        var s, r, i, _e15, o, _e16, _e17, a, c, u, l, h, d, f, p, g;
        return _regenerator.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                s = "x-tcb-trace_".concat(this.config.env);
                r = "application/x-www-form-urlencoded";
                i = _objectSpread({
                  action: e,
                  env: this.config.env,
                  dataVersion: "2019-08-16"
                }, t);
                if (!(-1 === Me.indexOf(e))) {
                  _context9.next = 10;
                  break;
                }
                _e15 = this._cache.keys.refreshTokenKey;
                _context9.t0 = this._cache.getStore(_e15);
                if (!_context9.t0) {
                  _context9.next = 10;
                  break;
                }
                _context9.next = 9;
                return this.getAccessToken();
              case 9:
                i.access_token = _context9.sent.accessToken;
              case 10:
                if ("storage.uploadFile" === e) {
                  o = new FormData();
                  for (_e16 in o) {
                    o.hasOwnProperty(_e16) && void 0 !== o[_e16] && o.append(_e16, i[_e16]);
                  }
                  r = "multipart/form-data";
                } else {
                  r = "application/json", o = {};
                  for (_e17 in i) {
                    void 0 !== i[_e17] && (o[_e17] = i[_e17]);
                  }
                }
                a = {
                  headers: {
                    "content-type": r
                  }
                };
                n && n.onUploadProgress && (a.onUploadProgress = n.onUploadProgress);
                c = this._localCache.getStore(s);
                c && (a.headers["X-TCB-Trace"] = c);
                u = t.parse, l = t.inQuery, h = t.search;
                d = {
                  env: this.config.env
                };
                u && (d.parse = !0), l && (d = _objectSpread(_objectSpread({}, l), d));
                f = function (e, t) {
                  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                  var s = /\?/.test(t);
                  var r = "";
                  for (var _e18 in n) {
                    "" === r ? !s && (t += "?") : r += "&", r += "".concat(_e18, "=").concat(encodeURIComponent(n[_e18]));
                  }
                  return /^http(s)?\:\/\//.test(t += r) ? t : "".concat(e).concat(t);
                }(de, "//tcb-api.tencentcloudapi.com/web", d);
                h && (f += h);
                _context9.next = 22;
                return this.post(_objectSpread({
                  url: f,
                  data: o
                }, a));
              case 22:
                p = _context9.sent;
                g = p.header && p.header["x-tcb-trace"];
                if (!(g && this._localCache.setStore(s, g), 200 !== Number(p.status) && 200 !== Number(p.statusCode) || !p.data)) {
                  _context9.next = 26;
                  break;
                }
                throw new Q({
                  code: "NETWORK_ERROR",
                  message: "network request error"
                });
              case 26:
                return _context9.abrupt("return", p);
              case 27:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));
      function request(_x5, _x6, _x7) {
        return _request.apply(this, arguments);
      }
      return request;
    }()
  }, {
    key: "send",
    value: function () {
      var _send = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee10(e) {
        var t,
          n,
          _n6,
          _args10 = arguments;
        return _regenerator.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                t = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {};
                _context10.next = 3;
                return this.request(e, t, {
                  onUploadProgress: t.onUploadProgress
                });
              case 3:
                n = _context10.sent;
                if (!("ACCESS_TOKEN_EXPIRED" === n.data.code && -1 === Me.indexOf(e))) {
                  _context10.next = 13;
                  break;
                }
                _context10.next = 7;
                return this.refreshAccessToken();
              case 7:
                _context10.next = 9;
                return this.request(e, t, {
                  onUploadProgress: t.onUploadProgress
                });
              case 9:
                _n6 = _context10.sent;
                if (!_n6.data.code) {
                  _context10.next = 12;
                  break;
                }
                throw new Q({
                  code: _n6.data.code,
                  message: _n6.data.message
                });
              case 12:
                return _context10.abrupt("return", _n6.data);
              case 13:
                if (!n.data.code) {
                  _context10.next = 15;
                  break;
                }
                throw new Q({
                  code: n.data.code,
                  message: n.data.message
                });
              case 15:
                return _context10.abrupt("return", n.data);
              case 16:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function send(_x8) {
        return _send.apply(this, arguments);
      }
      return send;
    }()
  }, {
    key: "setRefreshToken",
    value: function setRefreshToken(e) {
      var _this$_cache$keys3 = this._cache.keys,
        t = _this$_cache$keys3.accessTokenKey,
        n = _this$_cache$keys3.accessTokenExpireKey,
        s = _this$_cache$keys3.refreshTokenKey;
      this._cache.removeStore(t), this._cache.removeStore(n), this._cache.setStore(s, e);
    }
  }]);
  return We;
}();
var ze = {};
function Je(e) {
  return ze[e];
}
var He = /*#__PURE__*/function () {
  function He(e) {
    (0, _classCallCheck2.default)(this, He);
    this.config = e, this._cache = Ce(e.env), this._request = Je(e.env);
  }
  (0, _createClass2.default)(He, [{
    key: "setRefreshToken",
    value: function setRefreshToken(e) {
      var _this$_cache$keys4 = this._cache.keys,
        t = _this$_cache$keys4.accessTokenKey,
        n = _this$_cache$keys4.accessTokenExpireKey,
        s = _this$_cache$keys4.refreshTokenKey;
      this._cache.removeStore(t), this._cache.removeStore(n), this._cache.setStore(s, e);
    }
  }, {
    key: "setAccessToken",
    value: function setAccessToken(e, t) {
      var _this$_cache$keys5 = this._cache.keys,
        n = _this$_cache$keys5.accessTokenKey,
        s = _this$_cache$keys5.accessTokenExpireKey;
      this._cache.setStore(n, e), this._cache.setStore(s, t);
    }
  }, {
    key: "refreshUserInfo",
    value: function () {
      var _refreshUserInfo = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee11() {
        var _yield$this$_request$, e;
        return _regenerator.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this._request.send("auth.getUserInfo", {});
              case 2:
                _yield$this$_request$ = _context11.sent;
                e = _yield$this$_request$.data;
                return _context11.abrupt("return", (this.setLocalUserInfo(e), e));
              case 5:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function refreshUserInfo() {
        return _refreshUserInfo.apply(this, arguments);
      }
      return refreshUserInfo;
    }()
  }, {
    key: "setLocalUserInfo",
    value: function setLocalUserInfo(e) {
      var t = this._cache.keys.userInfoKey;
      this._cache.setStore(t, e);
    }
  }]);
  return He;
}();
var Ge = /*#__PURE__*/function () {
  function Ge(e) {
    (0, _classCallCheck2.default)(this, Ge);
    if (!e) throw new Q({
      code: "PARAM_ERROR",
      message: "envId is not defined"
    });
    this._envId = e, this._cache = Ce(this._envId), this._request = Je(this._envId), this.setUserInfo();
  }
  (0, _createClass2.default)(Ge, [{
    key: "linkWithTicket",
    value: function linkWithTicket(e) {
      if ("string" != typeof e) throw new Q({
        code: "PARAM_ERROR",
        message: "ticket must be string"
      });
      return this._request.send("auth.linkWithTicket", {
        ticket: e
      });
    }
  }, {
    key: "linkWithRedirect",
    value: function linkWithRedirect(e) {
      e.signInWithRedirect();
    }
  }, {
    key: "updatePassword",
    value: function updatePassword(e, t) {
      return this._request.send("auth.updatePassword", {
        oldPassword: t,
        newPassword: e
      });
    }
  }, {
    key: "updateEmail",
    value: function updateEmail(e) {
      return this._request.send("auth.updateEmail", {
        newEmail: e
      });
    }
  }, {
    key: "updateUsername",
    value: function updateUsername(e) {
      if ("string" != typeof e) throw new Q({
        code: "PARAM_ERROR",
        message: "username must be a string"
      });
      return this._request.send("auth.updateUsername", {
        username: e
      });
    }
  }, {
    key: "getLinkedUidList",
    value: function () {
      var _getLinkedUidList = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee12() {
        var _yield$this$_request$2, e, t, n;
        return _regenerator.default.wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                _context12.next = 2;
                return this._request.send("auth.getLinkedUidList", {});
              case 2:
                _yield$this$_request$2 = _context12.sent;
                e = _yield$this$_request$2.data;
                t = !1;
                n = e.users;
                return _context12.abrupt("return", (n.forEach(function (e) {
                  e.wxOpenId && e.wxPublicId && (t = !0);
                }), {
                  users: n,
                  hasPrimaryUid: t
                }));
              case 7:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function getLinkedUidList() {
        return _getLinkedUidList.apply(this, arguments);
      }
      return getLinkedUidList;
    }()
  }, {
    key: "setPrimaryUid",
    value: function setPrimaryUid(e) {
      return this._request.send("auth.setPrimaryUid", {
        uid: e
      });
    }
  }, {
    key: "unlink",
    value: function unlink(e) {
      return this._request.send("auth.unlink", {
        platform: e
      });
    }
  }, {
    key: "update",
    value: function () {
      var _update = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee13(e) {
        var t, n, s, r, i, o, _yield$this$_request$3, a;
        return _regenerator.default.wrap(function _callee13$(_context13) {
          while (1) {
            switch (_context13.prev = _context13.next) {
              case 0:
                t = e.nickName;
                n = e.gender;
                s = e.avatarUrl;
                r = e.province;
                i = e.country;
                o = e.city;
                _context13.next = 8;
                return this._request.send("auth.updateUserInfo", {
                  nickName: t,
                  gender: n,
                  avatarUrl: s,
                  province: r,
                  country: i,
                  city: o
                });
              case 8:
                _yield$this$_request$3 = _context13.sent;
                a = _yield$this$_request$3.data;
                this.setLocalUserInfo(a);
              case 11:
              case "end":
                return _context13.stop();
            }
          }
        }, _callee13, this);
      }));
      function update(_x9) {
        return _update.apply(this, arguments);
      }
      return update;
    }()
  }, {
    key: "refresh",
    value: function () {
      var _refresh = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee14() {
        var _yield$this$_request$4, e;
        return _regenerator.default.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this._request.send("auth.getUserInfo", {});
              case 2:
                _yield$this$_request$4 = _context14.sent;
                e = _yield$this$_request$4.data;
                return _context14.abrupt("return", (this.setLocalUserInfo(e), e));
              case 5:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));
      function refresh() {
        return _refresh.apply(this, arguments);
      }
      return refresh;
    }()
  }, {
    key: "setUserInfo",
    value: function setUserInfo() {
      var _this8 = this;
      var e = this._cache.keys.userInfoKey,
        t = this._cache.getStore(e);
      ["uid", "loginType", "openid", "wxOpenId", "wxPublicId", "unionId", "qqMiniOpenId", "email", "hasPassword", "customUserId", "nickName", "gender", "avatarUrl"].forEach(function (e) {
        _this8[e] = t[e];
      }), this.location = {
        country: t.country,
        province: t.province,
        city: t.city
      };
    }
  }, {
    key: "setLocalUserInfo",
    value: function setLocalUserInfo(e) {
      var t = this._cache.keys.userInfoKey;
      this._cache.setStore(t, e), this.setUserInfo();
    }
  }]);
  return Ge;
}();
var Ve = /*#__PURE__*/function () {
  function Ve(e) {
    (0, _classCallCheck2.default)(this, Ve);
    if (!e) throw new Q({
      code: "PARAM_ERROR",
      message: "envId is not defined"
    });
    this._cache = Ce(e);
    var _this$_cache$keys6 = this._cache.keys,
      t = _this$_cache$keys6.refreshTokenKey,
      n = _this$_cache$keys6.accessTokenKey,
      s = _this$_cache$keys6.accessTokenExpireKey,
      r = this._cache.getStore(t),
      i = this._cache.getStore(n),
      o = this._cache.getStore(s);
    this.credential = {
      refreshToken: r,
      accessToken: i,
      accessTokenExpire: o
    }, this.user = new Ge(e);
  }
  (0, _createClass2.default)(Ve, [{
    key: "isAnonymousAuth",
    get: function get() {
      return this.loginType === Ke.ANONYMOUS;
    }
  }, {
    key: "isCustomAuth",
    get: function get() {
      return this.loginType === Ke.CUSTOM;
    }
  }, {
    key: "isWeixinAuth",
    get: function get() {
      return this.loginType === Ke.WECHAT || this.loginType === Ke.WECHAT_OPEN || this.loginType === Ke.WECHAT_PUBLIC;
    }
  }, {
    key: "loginType",
    get: function get() {
      return this._cache.getStore(this._cache.keys.loginTypeKey);
    }
  }]);
  return Ve;
}();
var Ye = /*#__PURE__*/function (_He) {
  (0, _inherits2.default)(Ye, _He);
  var _super4 = _createSuper(Ye);
  function Ye() {
    (0, _classCallCheck2.default)(this, Ye);
    return _super4.apply(this, arguments);
  }
  (0, _createClass2.default)(Ye, [{
    key: "signIn",
    value: function () {
      var _signIn = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee15() {
        var _this$_cache$keys7, e, t, n, s, r, _e19;
        return _regenerator.default.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                this._cache.updatePersistence("local");
                _this$_cache$keys7 = this._cache.keys;
                e = _this$_cache$keys7.anonymousUuidKey;
                t = _this$_cache$keys7.refreshTokenKey;
                n = this._cache.getStore(e) || void 0;
                s = this._cache.getStore(t) || void 0;
                _context15.next = 8;
                return this._request.send("auth.signInAnonymously", {
                  anonymous_uuid: n,
                  refresh_token: s
                });
              case 8:
                r = _context15.sent;
                if (!(r.uuid && r.refresh_token)) {
                  _context15.next = 20;
                  break;
                }
                this._setAnonymousUUID(r.uuid);
                this.setRefreshToken(r.refresh_token);
                _context15.next = 14;
                return this._request.refreshAccessToken();
              case 14:
                Ue(Le);
                Ue(De, {
                  env: this.config.env,
                  loginType: Ke.ANONYMOUS,
                  persistence: "local"
                });
                _e19 = new Ve(this.config.env);
                _context15.next = 19;
                return _e19.user.refresh();
              case 19:
                return _context15.abrupt("return", _e19);
              case 20:
                throw new Q({
                  message: "匿名登录失败"
                });
              case 21:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));
      function signIn() {
        return _signIn.apply(this, arguments);
      }
      return signIn;
    }()
  }, {
    key: "linkAndRetrieveDataWithTicket",
    value: function () {
      var _linkAndRetrieveDataWithTicket = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee16(e) {
        var _this$_cache$keys8, t, n, s, r, i;
        return _regenerator.default.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _this$_cache$keys8 = this._cache.keys;
                t = _this$_cache$keys8.anonymousUuidKey;
                n = _this$_cache$keys8.refreshTokenKey;
                s = this._cache.getStore(t);
                r = this._cache.getStore(n);
                _context16.next = 7;
                return this._request.send("auth.linkAndRetrieveDataWithTicket", {
                  anonymous_uuid: s,
                  refresh_token: r,
                  ticket: e
                });
              case 7:
                i = _context16.sent;
                if (!i.refresh_token) {
                  _context16.next = 16;
                  break;
                }
                this._clearAnonymousUUID();
                this.setRefreshToken(i.refresh_token);
                _context16.next = 13;
                return this._request.refreshAccessToken();
              case 13:
                Ue(Fe, {
                  env: this.config.env
                });
                Ue(De, {
                  loginType: Ke.CUSTOM,
                  persistence: "local"
                });
                return _context16.abrupt("return", {
                  credential: {
                    refreshToken: i.refresh_token
                  }
                });
              case 16:
                throw new Q({
                  message: "匿名转化失败"
                });
              case 17:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));
      function linkAndRetrieveDataWithTicket(_x10) {
        return _linkAndRetrieveDataWithTicket.apply(this, arguments);
      }
      return linkAndRetrieveDataWithTicket;
    }()
  }, {
    key: "_setAnonymousUUID",
    value: function _setAnonymousUUID(e) {
      var _this$_cache$keys9 = this._cache.keys,
        t = _this$_cache$keys9.anonymousUuidKey,
        n = _this$_cache$keys9.loginTypeKey;
      this._cache.removeStore(t), this._cache.setStore(t, e), this._cache.setStore(n, Ke.ANONYMOUS);
    }
  }, {
    key: "_clearAnonymousUUID",
    value: function _clearAnonymousUUID() {
      this._cache.removeStore(this._cache.keys.anonymousUuidKey);
    }
  }]);
  return Ye;
}(He);
var Qe = /*#__PURE__*/function (_He2) {
  (0, _inherits2.default)(Qe, _He2);
  var _super5 = _createSuper(Qe);
  function Qe() {
    (0, _classCallCheck2.default)(this, Qe);
    return _super5.apply(this, arguments);
  }
  (0, _createClass2.default)(Qe, [{
    key: "signIn",
    value: function () {
      var _signIn2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee17(e) {
        var t, n;
        return _regenerator.default.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context17.next = 2;
                  break;
                }
                throw new Q({
                  code: "PARAM_ERROR",
                  message: "ticket must be a string"
                });
              case 2:
                t = this._cache.keys.refreshTokenKey;
                _context17.next = 5;
                return this._request.send("auth.signInWithTicket", {
                  ticket: e,
                  refresh_token: this._cache.getStore(t) || ""
                });
              case 5:
                n = _context17.sent;
                if (!n.refresh_token) {
                  _context17.next = 15;
                  break;
                }
                this.setRefreshToken(n.refresh_token);
                _context17.next = 10;
                return this._request.refreshAccessToken();
              case 10:
                Ue(Le);
                Ue(De, {
                  env: this.config.env,
                  loginType: Ke.CUSTOM,
                  persistence: this.config.persistence
                });
                _context17.next = 14;
                return this.refreshUserInfo();
              case 14:
                return _context17.abrupt("return", new Ve(this.config.env));
              case 15:
                throw new Q({
                  message: "自定义登录失败"
                });
              case 16:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));
      function signIn(_x11) {
        return _signIn2.apply(this, arguments);
      }
      return signIn;
    }()
  }]);
  return Qe;
}(He);
var Xe = /*#__PURE__*/function (_He3) {
  (0, _inherits2.default)(Xe, _He3);
  var _super6 = _createSuper(Xe);
  function Xe() {
    (0, _classCallCheck2.default)(this, Xe);
    return _super6.apply(this, arguments);
  }
  (0, _createClass2.default)(Xe, [{
    key: "signIn",
    value: function () {
      var _signIn3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee18(e, t) {
        var n, s, r, i, o;
        return _regenerator.default.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context18.next = 2;
                  break;
                }
                throw new Q({
                  code: "PARAM_ERROR",
                  message: "email must be a string"
                });
              case 2:
                n = this._cache.keys.refreshTokenKey;
                _context18.next = 5;
                return this._request.send("auth.signIn", {
                  loginType: "EMAIL",
                  email: e,
                  password: t,
                  refresh_token: this._cache.getStore(n) || ""
                });
              case 5:
                s = _context18.sent;
                r = s.refresh_token;
                i = s.access_token;
                o = s.access_token_expire;
                if (!r) {
                  _context18.next = 22;
                  break;
                }
                this.setRefreshToken(r);
                if (!(i && o)) {
                  _context18.next = 15;
                  break;
                }
                this.setAccessToken(i, o);
                _context18.next = 17;
                break;
              case 15:
                _context18.next = 17;
                return this._request.refreshAccessToken();
              case 17:
                _context18.next = 19;
                return this.refreshUserInfo();
              case 19:
                Ue(Le);
                Ue(De, {
                  env: this.config.env,
                  loginType: Ke.EMAIL,
                  persistence: this.config.persistence
                });
                return _context18.abrupt("return", new Ve(this.config.env));
              case 22:
                throw s.code ? new Q({
                  code: s.code,
                  message: "\u90AE\u7BB1\u767B\u5F55\u5931\u8D25: ".concat(s.message)
                }) : new Q({
                  message: "邮箱登录失败"
                });
              case 23:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));
      function signIn(_x12, _x13) {
        return _signIn3.apply(this, arguments);
      }
      return signIn;
    }()
  }, {
    key: "activate",
    value: function () {
      var _activate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee19(e) {
        return _regenerator.default.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                return _context19.abrupt("return", this._request.send("auth.activateEndUserMail", {
                  token: e
                }));
              case 1:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));
      function activate(_x14) {
        return _activate.apply(this, arguments);
      }
      return activate;
    }()
  }, {
    key: "resetPasswordWithToken",
    value: function () {
      var _resetPasswordWithToken = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee20(e, t) {
        return _regenerator.default.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                return _context20.abrupt("return", this._request.send("auth.resetPasswordWithToken", {
                  token: e,
                  newPassword: t
                }));
              case 1:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this);
      }));
      function resetPasswordWithToken(_x15, _x16) {
        return _resetPasswordWithToken.apply(this, arguments);
      }
      return resetPasswordWithToken;
    }()
  }]);
  return Xe;
}(He);
var Ze = /*#__PURE__*/function (_He4) {
  (0, _inherits2.default)(Ze, _He4);
  var _super7 = _createSuper(Ze);
  function Ze() {
    (0, _classCallCheck2.default)(this, Ze);
    return _super7.apply(this, arguments);
  }
  (0, _createClass2.default)(Ze, [{
    key: "signIn",
    value: function () {
      var _signIn4 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee21(e, t) {
        var n, s, r, i, o;
        return _regenerator.default.wrap(function _callee21$(_context21) {
          while (1) {
            switch (_context21.prev = _context21.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context21.next = 2;
                  break;
                }
                throw new Q({
                  code: "PARAM_ERROR",
                  message: "username must be a string"
                });
              case 2:
                "string" != typeof t && (t = "", console.warn("password is empty"));
                n = this._cache.keys.refreshTokenKey;
                _context21.next = 6;
                return this._request.send("auth.signIn", {
                  loginType: Ke.USERNAME,
                  username: e,
                  password: t,
                  refresh_token: this._cache.getStore(n) || ""
                });
              case 6:
                s = _context21.sent;
                r = s.refresh_token;
                i = s.access_token_expire;
                o = s.access_token;
                if (!r) {
                  _context21.next = 23;
                  break;
                }
                this.setRefreshToken(r);
                if (!(o && i)) {
                  _context21.next = 16;
                  break;
                }
                this.setAccessToken(o, i);
                _context21.next = 18;
                break;
              case 16:
                _context21.next = 18;
                return this._request.refreshAccessToken();
              case 18:
                _context21.next = 20;
                return this.refreshUserInfo();
              case 20:
                Ue(Le);
                Ue(De, {
                  env: this.config.env,
                  loginType: Ke.USERNAME,
                  persistence: this.config.persistence
                });
                return _context21.abrupt("return", new Ve(this.config.env));
              case 23:
                throw s.code ? new Q({
                  code: s.code,
                  message: "\u7528\u6237\u540D\u5BC6\u7801\u767B\u5F55\u5931\u8D25: ".concat(s.message)
                }) : new Q({
                  message: "用户名密码登录失败"
                });
              case 24:
              case "end":
                return _context21.stop();
            }
          }
        }, _callee21, this);
      }));
      function signIn(_x17, _x18) {
        return _signIn4.apply(this, arguments);
      }
      return signIn;
    }()
  }]);
  return Ze;
}(He);
var et = /*#__PURE__*/function () {
  function et(e) {
    (0, _classCallCheck2.default)(this, et);
    this.config = e, this._cache = Ce(e.env), this._request = Je(e.env), this._onAnonymousConverted = this._onAnonymousConverted.bind(this), this._onLoginTypeChanged = this._onLoginTypeChanged.bind(this), xe(De, this._onLoginTypeChanged);
  }
  (0, _createClass2.default)(et, [{
    key: "currentUser",
    get: function get() {
      var e = this.hasLoginState();
      return e && e.user || null;
    }
  }, {
    key: "loginType",
    get: function get() {
      return this._cache.getStore(this._cache.keys.loginTypeKey);
    }
  }, {
    key: "anonymousAuthProvider",
    value: function anonymousAuthProvider() {
      return new Ye(this.config);
    }
  }, {
    key: "customAuthProvider",
    value: function customAuthProvider() {
      return new Qe(this.config);
    }
  }, {
    key: "emailAuthProvider",
    value: function emailAuthProvider() {
      return new Xe(this.config);
    }
  }, {
    key: "usernameAuthProvider",
    value: function usernameAuthProvider() {
      return new Ze(this.config);
    }
  }, {
    key: "signInAnonymously",
    value: function () {
      var _signInAnonymously = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee22() {
        return _regenerator.default.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                return _context22.abrupt("return", new Ye(this.config).signIn());
              case 1:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this);
      }));
      function signInAnonymously() {
        return _signInAnonymously.apply(this, arguments);
      }
      return signInAnonymously;
    }()
  }, {
    key: "signInWithEmailAndPassword",
    value: function () {
      var _signInWithEmailAndPassword = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee23(e, t) {
        return _regenerator.default.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                return _context23.abrupt("return", new Xe(this.config).signIn(e, t));
              case 1:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));
      function signInWithEmailAndPassword(_x19, _x20) {
        return _signInWithEmailAndPassword.apply(this, arguments);
      }
      return signInWithEmailAndPassword;
    }()
  }, {
    key: "signInWithUsernameAndPassword",
    value: function signInWithUsernameAndPassword(e, t) {
      return new Ze(this.config).signIn(e, t);
    }
  }, {
    key: "linkAndRetrieveDataWithTicket",
    value: function () {
      var _linkAndRetrieveDataWithTicket2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee24(e) {
        return _regenerator.default.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                this._anonymousAuthProvider || (this._anonymousAuthProvider = new Ye(this.config)), xe(Fe, this._onAnonymousConverted);
                _context24.next = 3;
                return this._anonymousAuthProvider.linkAndRetrieveDataWithTicket(e);
              case 3:
                return _context24.abrupt("return", _context24.sent);
              case 4:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));
      function linkAndRetrieveDataWithTicket(_x21) {
        return _linkAndRetrieveDataWithTicket2.apply(this, arguments);
      }
      return linkAndRetrieveDataWithTicket;
    }()
  }, {
    key: "signOut",
    value: function () {
      var _signOut = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee25() {
        var _this$_cache$keys10, e, t, n, s, r;
        return _regenerator.default.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                if (!(this.loginType === Ke.ANONYMOUS)) {
                  _context25.next = 2;
                  break;
                }
                throw new Q({
                  message: "匿名用户不支持登出操作"
                });
              case 2:
                _this$_cache$keys10 = this._cache.keys, e = _this$_cache$keys10.refreshTokenKey, t = _this$_cache$keys10.accessTokenKey, n = _this$_cache$keys10.accessTokenExpireKey, s = this._cache.getStore(e);
                if (s) {
                  _context25.next = 5;
                  break;
                }
                return _context25.abrupt("return");
              case 5:
                _context25.next = 7;
                return this._request.send("auth.logout", {
                  refresh_token: s
                });
              case 7:
                r = _context25.sent;
                return _context25.abrupt("return", (this._cache.removeStore(e), this._cache.removeStore(t), this._cache.removeStore(n), Ue(Le), Ue(De, {
                  env: this.config.env,
                  loginType: Ke.NULL,
                  persistence: this.config.persistence
                }), r));
              case 9:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this);
      }));
      function signOut() {
        return _signOut.apply(this, arguments);
      }
      return signOut;
    }()
  }, {
    key: "signUpWithEmailAndPassword",
    value: function () {
      var _signUpWithEmailAndPassword = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee26(e, t) {
        return _regenerator.default.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                return _context26.abrupt("return", this._request.send("auth.signUpWithEmailAndPassword", {
                  email: e,
                  password: t
                }));
              case 1:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this);
      }));
      function signUpWithEmailAndPassword(_x22, _x23) {
        return _signUpWithEmailAndPassword.apply(this, arguments);
      }
      return signUpWithEmailAndPassword;
    }()
  }, {
    key: "sendPasswordResetEmail",
    value: function () {
      var _sendPasswordResetEmail = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee27(e) {
        return _regenerator.default.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                return _context27.abrupt("return", this._request.send("auth.sendPasswordResetEmail", {
                  email: e
                }));
              case 1:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));
      function sendPasswordResetEmail(_x24) {
        return _sendPasswordResetEmail.apply(this, arguments);
      }
      return sendPasswordResetEmail;
    }()
  }, {
    key: "onLoginStateChanged",
    value: function onLoginStateChanged(e) {
      var _this9 = this;
      xe(Le, function () {
        var t = _this9.hasLoginState();
        e.call(_this9, t);
      });
      var t = this.hasLoginState();
      e.call(this, t);
    }
  }, {
    key: "onLoginStateExpired",
    value: function onLoginStateExpired(e) {
      xe(Ne, e.bind(this));
    }
  }, {
    key: "onAccessTokenRefreshed",
    value: function onAccessTokenRefreshed(e) {
      xe(qe, e.bind(this));
    }
  }, {
    key: "onAnonymousConverted",
    value: function onAnonymousConverted(e) {
      xe(Fe, e.bind(this));
    }
  }, {
    key: "onLoginTypeChanged",
    value: function onLoginTypeChanged(e) {
      var _this10 = this;
      xe(De, function () {
        var t = _this10.hasLoginState();
        e.call(_this10, t);
      });
    }
  }, {
    key: "getAccessToken",
    value: function () {
      var _getAccessToken2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee28() {
        return _regenerator.default.wrap(function _callee28$(_context28) {
          while (1) {
            switch (_context28.prev = _context28.next) {
              case 0:
                _context28.next = 2;
                return this._request.getAccessToken();
              case 2:
                _context28.t0 = _context28.sent.accessToken;
                _context28.t1 = this.config.env;
                return _context28.abrupt("return", {
                  accessToken: _context28.t0,
                  env: _context28.t1
                });
              case 5:
              case "end":
                return _context28.stop();
            }
          }
        }, _callee28, this);
      }));
      function getAccessToken() {
        return _getAccessToken2.apply(this, arguments);
      }
      return getAccessToken;
    }()
  }, {
    key: "hasLoginState",
    value: function hasLoginState() {
      var e = this._cache.keys.refreshTokenKey;
      return this._cache.getStore(e) ? new Ve(this.config.env) : null;
    }
  }, {
    key: "isUsernameRegistered",
    value: function () {
      var _isUsernameRegistered = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee29(e) {
        var _yield$this$_request$5, t;
        return _regenerator.default.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                if (!("string" != typeof e)) {
                  _context29.next = 2;
                  break;
                }
                throw new Q({
                  code: "PARAM_ERROR",
                  message: "username must be a string"
                });
              case 2:
                _context29.next = 4;
                return this._request.send("auth.isUsernameRegistered", {
                  username: e
                });
              case 4:
                _yield$this$_request$5 = _context29.sent;
                t = _yield$this$_request$5.data;
                return _context29.abrupt("return", t && t.isRegistered);
              case 7:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this);
      }));
      function isUsernameRegistered(_x25) {
        return _isUsernameRegistered.apply(this, arguments);
      }
      return isUsernameRegistered;
    }()
  }, {
    key: "getLoginState",
    value: function getLoginState() {
      return Promise.resolve(this.hasLoginState());
    }
  }, {
    key: "signInWithTicket",
    value: function () {
      var _signInWithTicket = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee30(e) {
        return _regenerator.default.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                return _context30.abrupt("return", new Qe(this.config).signIn(e));
              case 1:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, this);
      }));
      function signInWithTicket(_x26) {
        return _signInWithTicket.apply(this, arguments);
      }
      return signInWithTicket;
    }()
  }, {
    key: "shouldRefreshAccessToken",
    value: function shouldRefreshAccessToken(e) {
      this._request._shouldRefreshAccessTokenHook = e.bind(this);
    }
  }, {
    key: "getUserInfo",
    value: function getUserInfo() {
      return this._request.send("auth.getUserInfo", {}).then(function (e) {
        return e.code ? e : _objectSpread(_objectSpread({}, e.data), {}, {
          requestId: e.seqId
        });
      });
    }
  }, {
    key: "getAuthHeader",
    value: function getAuthHeader() {
      var _this$_cache$keys11 = this._cache.keys,
        e = _this$_cache$keys11.refreshTokenKey,
        t = _this$_cache$keys11.accessTokenKey,
        n = this._cache.getStore(e);
      return {
        "x-cloudbase-credentials": this._cache.getStore(t) + "/@@/" + n
      };
    }
  }, {
    key: "_onAnonymousConverted",
    value: function _onAnonymousConverted(e) {
      var t = e.data.env;
      t === this.config.env && this._cache.updatePersistence(this.config.persistence);
    }
  }, {
    key: "_onLoginTypeChanged",
    value: function _onLoginTypeChanged(e) {
      var _e$data = e.data,
        t = _e$data.loginType,
        n = _e$data.persistence,
        s = _e$data.env;
      s === this.config.env && (this._cache.updatePersistence(n), this._cache.setStore(this._cache.keys.loginTypeKey, t));
    }
  }]);
  return et;
}();
var tt = function tt(e, t) {
    t = t || ge();
    var n = Je(this.config.env),
      s = e.cloudPath,
      r = e.filePath,
      i = e.onUploadProgress,
      _e$fileType = e.fileType,
      o = _e$fileType === void 0 ? "image" : _e$fileType;
    return n.send("storage.getUploadMetadata", {
      path: s
    }).then(function (e) {
      var _e$data2 = e.data,
        a = _e$data2.url,
        c = _e$data2.authorization,
        u = _e$data2.token,
        l = _e$data2.fileId,
        h = _e$data2.cosFileId,
        d = e.requestId,
        f = {
          key: s,
          signature: c,
          "x-cos-meta-fileid": h,
          success_action_status: "201",
          "x-cos-security-token": u
        };
      n.upload({
        url: a,
        data: f,
        file: r,
        name: s,
        fileType: o,
        onUploadProgress: i
      }).then(function (e) {
        201 === e.statusCode ? t(null, {
          fileID: l,
          requestId: d
        }) : t(new Q({
          code: "STORAGE_REQUEST_FAIL",
          message: "STORAGE_REQUEST_FAIL: ".concat(e.data)
        }));
      }).catch(function (e) {
        t(e);
      });
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  nt = function nt(e, t) {
    t = t || ge();
    var n = Je(this.config.env),
      s = e.cloudPath;
    return n.send("storage.getUploadMetadata", {
      path: s
    }).then(function (e) {
      t(null, e);
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  st = function st(_ref6, t) {
    var e = _ref6.fileList;
    if (t = t || ge(), !e || !Array.isArray(e)) return {
      code: "INVALID_PARAM",
      message: "fileList必须是非空的数组"
    };
    var _iterator3 = _createForOfIteratorHelper(e),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var _t8 = _step3.value;
        if (!_t8 || "string" != typeof _t8) return {
          code: "INVALID_PARAM",
          message: "fileList的元素必须是非空的字符串"
        };
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    var n = {
      fileid_list: e
    };
    return Je(this.config.env).send("storage.batchDeleteFile", n).then(function (e) {
      e.code ? t(null, e) : t(null, {
        fileList: e.data.delete_list,
        requestId: e.requestId
      });
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  rt = function rt(_ref7, t) {
    var e = _ref7.fileList;
    t = t || ge(), e && Array.isArray(e) || t(null, {
      code: "INVALID_PARAM",
      message: "fileList必须是非空的数组"
    });
    var n = [];
    var _iterator4 = _createForOfIteratorHelper(e),
      _step4;
    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var _s9 = _step4.value;
        "object" == (0, _typeof2.default)(_s9) ? (_s9.hasOwnProperty("fileID") && _s9.hasOwnProperty("maxAge") || t(null, {
          code: "INVALID_PARAM",
          message: "fileList的元素必须是包含fileID和maxAge的对象"
        }), n.push({
          fileid: _s9.fileID,
          max_age: _s9.maxAge
        })) : "string" == typeof _s9 ? n.push({
          fileid: _s9
        }) : t(null, {
          code: "INVALID_PARAM",
          message: "fileList的元素必须是字符串"
        });
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
    var s = {
      file_list: n
    };
    return Je(this.config.env).send("storage.batchGetDownloadUrl", s).then(function (e) {
      e.code ? t(null, e) : t(null, {
        fileList: e.data.download_list,
        requestId: e.requestId
      });
    }).catch(function (e) {
      t(e);
    }), t.promise;
  },
  it = /*#__PURE__*/function () {
    var _ref9 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee31(_ref8, t) {
      var e, n, s, r;
      return _regenerator.default.wrap(function _callee31$(_context31) {
        while (1) {
          switch (_context31.prev = _context31.next) {
            case 0:
              e = _ref8.fileID;
              _context31.next = 3;
              return rt.call(this, {
                fileList: [{
                  fileID: e,
                  maxAge: 600
                }]
              });
            case 3:
              n = _context31.sent.fileList[0];
              if (!("SUCCESS" !== n.code)) {
                _context31.next = 6;
                break;
              }
              return _context31.abrupt("return", t ? t(n) : new Promise(function (e) {
                e(n);
              }));
            case 6:
              s = Je(this.config.env);
              r = n.download_url;
              if (!(r = encodeURI(r), !t)) {
                _context31.next = 10;
                break;
              }
              return _context31.abrupt("return", s.download({
                url: r
              }));
            case 10:
              _context31.t0 = t;
              _context31.next = 13;
              return s.download({
                url: r
              });
            case 13:
              _context31.t1 = _context31.sent;
              (0, _context31.t0)(_context31.t1);
            case 15:
            case "end":
              return _context31.stop();
          }
        }
      }, _callee31, this);
    }));
    return function it(_x27, _x28) {
      return _ref9.apply(this, arguments);
    };
  }(),
  ot = function ot(_ref10, i) {
    var e = _ref10.name,
      t = _ref10.data,
      n = _ref10.query,
      s = _ref10.parse,
      r = _ref10.search;
    var o = i || ge();
    var a;
    try {
      a = t ? JSON.stringify(t) : "";
    } catch (e) {
      return Promise.reject(e);
    }
    if (!e) return Promise.reject(new Q({
      code: "PARAM_ERROR",
      message: "函数名不能为空"
    }));
    var c = {
      inQuery: n,
      parse: s,
      search: r,
      function_name: e,
      request_data: a
    };
    return Je(this.config.env).send("functions.invokeFunction", c).then(function (e) {
      if (e.code) o(null, e);else {
        var _t9 = e.data.response_data;
        if (s) o(null, {
          result: _t9,
          requestId: e.requestId
        });else try {
          _t9 = JSON.parse(e.data.response_data), o(null, {
            result: _t9,
            requestId: e.requestId
          });
        } catch (e) {
          o(new Q({
            message: "response data must be json"
          }));
        }
      }
      return o.promise;
    }).catch(function (e) {
      o(e);
    }), o.promise;
  },
  at = {
    timeout: 15e3,
    persistence: "session"
  },
  ct = {};
var ut = /*#__PURE__*/function () {
  function ut(e) {
    (0, _classCallCheck2.default)(this, ut);
    this.config = e || this.config, this.authObj = void 0;
  }
  (0, _createClass2.default)(ut, [{
    key: "init",
    value: function init(e) {
      switch (ve.adapter || (this.requestClient = new ve.adapter.reqClass({
        timeout: e.timeout || 5e3,
        timeoutMsg: "\u8BF7\u6C42\u5728".concat((e.timeout || 5e3) / 1e3, "s\u5185\u672A\u5B8C\u6210\uFF0C\u5DF2\u4E2D\u65AD")
      })), this.config = _objectSpread(_objectSpread({}, at), e), !0) {
        case this.config.timeout > 6e5:
          console.warn("timeout大于可配置上限[10分钟]，已重置为上限数值"), this.config.timeout = 6e5;
          break;
        case this.config.timeout < 100:
          console.warn("timeout小于可配置下限[100ms]，已重置为下限数值"), this.config.timeout = 100;
      }
      return new ut(this.config);
    }
  }, {
    key: "auth",
    value: function auth() {
      var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref11.persistence;
      if (this.authObj) return this.authObj;
      var t = e || ve.adapter.primaryStorage || at.persistence;
      var n;
      return t !== this.config.persistence && (this.config.persistence = t), function (e) {
        var t = e.env;
        Te[t] = new be(e), Ae[t] = new be(_objectSpread(_objectSpread({}, e), {}, {
          persistence: "local"
        }));
      }(this.config), n = this.config, ze[n.env] = new We(n), this.authObj = new et(this.config), this.authObj;
    }
  }, {
    key: "on",
    value: function on(e, t) {
      return xe.apply(this, [e, t]);
    }
  }, {
    key: "off",
    value: function off(e, t) {
      return Re.apply(this, [e, t]);
    }
  }, {
    key: "callFunction",
    value: function callFunction(e, t) {
      return ot.apply(this, [e, t]);
    }
  }, {
    key: "deleteFile",
    value: function deleteFile(e, t) {
      return st.apply(this, [e, t]);
    }
  }, {
    key: "getTempFileURL",
    value: function getTempFileURL(e, t) {
      return rt.apply(this, [e, t]);
    }
  }, {
    key: "downloadFile",
    value: function downloadFile(e, t) {
      return it.apply(this, [e, t]);
    }
  }, {
    key: "uploadFile",
    value: function uploadFile(e, t) {
      return tt.apply(this, [e, t]);
    }
  }, {
    key: "getUploadMetadata",
    value: function getUploadMetadata(e, t) {
      return nt.apply(this, [e, t]);
    }
  }, {
    key: "registerExtension",
    value: function registerExtension(e) {
      ct[e.name] = e;
    }
  }, {
    key: "invokeExtension",
    value: function () {
      var _invokeExtension = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee32(e, t) {
        var n;
        return _regenerator.default.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                n = ct[e];
                if (n) {
                  _context32.next = 3;
                  break;
                }
                throw new Q({
                  message: "\u6269\u5C55".concat(e, " \u5FC5\u987B\u5148\u6CE8\u518C")
                });
              case 3:
                _context32.next = 5;
                return n.invoke(t, this);
              case 5:
                return _context32.abrupt("return", _context32.sent);
              case 6:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32, this);
      }));
      function invokeExtension(_x29, _x30) {
        return _invokeExtension.apply(this, arguments);
      }
      return invokeExtension;
    }()
  }, {
    key: "useAdapters",
    value: function useAdapters(e) {
      var _ref12 = we(e) || {},
        t = _ref12.adapter,
        n = _ref12.runtime;
      t && (ve.adapter = t), n && (ve.runtime = n);
    }
  }]);
  return ut;
}();
var lt = new ut();
function ht(e, t, n) {
  void 0 === n && (n = {});
  var s = /\?/.test(t),
    r = "";
  for (var i in n) {
    "" === r ? !s && (t += "?") : r += "&", r += i + "=" + encodeURIComponent(n[i]);
  }
  return /^http(s)?:\/\//.test(t += r) ? t : "" + e + t;
}
var dt = /*#__PURE__*/function () {
  function dt() {
    (0, _classCallCheck2.default)(this, dt);
  }
  (0, _createClass2.default)(dt, [{
    key: "post",
    value: function post(e) {
      var t = e.url,
        n = e.data,
        s = e.headers;
      return new Promise(function (e, r) {
        X.request({
          url: ht("https:", t),
          data: n,
          method: "POST",
          header: s,
          success: function success(t) {
            e(t);
          },
          fail: function fail(e) {
            r(e);
          }
        });
      });
    }
  }, {
    key: "upload",
    value: function upload(e) {
      return new Promise(function (t, n) {
        var s = e.url,
          r = e.file,
          i = e.data,
          o = e.headers,
          a = e.fileType,
          c = X.uploadFile({
            url: ht("https:", s),
            name: "file",
            formData: Object.assign({}, i),
            filePath: r,
            fileType: a,
            header: o,
            success: function success(e) {
              var n = {
                statusCode: e.statusCode,
                data: e.data || {}
              };
              200 === e.statusCode && i.success_action_status && (n.statusCode = parseInt(i.success_action_status, 10)), t(n);
            },
            fail: function fail(e) {
              n(new Error(e.errMsg || "uploadFile:fail"));
            }
          });
        "function" == typeof e.onUploadProgress && c && "function" == typeof c.onProgressUpdate && c.onProgressUpdate(function (t) {
          e.onUploadProgress({
            loaded: t.totalBytesSent,
            total: t.totalBytesExpectedToSend
          });
        });
      });
    }
  }]);
  return dt;
}();
var ft = {
  setItem: function setItem(e, t) {
    X.setStorageSync(e, t);
  },
  getItem: function getItem(e) {
    return X.getStorageSync(e);
  },
  removeItem: function removeItem(e) {
    X.removeStorageSync(e);
  },
  clear: function clear() {
    X.clearStorageSync();
  }
};
var pt = {
  genAdapter: function genAdapter() {
    return {
      root: {},
      reqClass: dt,
      localStorage: ft,
      primaryStorage: "local"
    };
  },
  isMatch: function isMatch() {
    return !0;
  },
  runtime: "uni_app"
};
lt.useAdapters(pt);
var gt = lt,
  mt = gt.init;
gt.init = function (e) {
  e.env = e.spaceId;
  var t = mt.call(this, e);
  t.config.provider = "tencent", t.config.spaceId = e.spaceId;
  var n = t.auth;
  return t.auth = function (e) {
    var t = n.call(this, e);
    return ["linkAndRetrieveDataWithTicket", "signInAnonymously", "signOut", "getAccessToken", "getLoginState", "signInWithTicket", "getUserInfo"].forEach(function (e) {
      t[e] = Y(t[e]).bind(t);
    }), t;
  }, t.customAuth = t.auth, t;
};
var yt = gt;
var _t = /*#__PURE__*/function (_le) {
  (0, _inherits2.default)(_t, _le);
  var _super8 = _createSuper(_t);
  function _t() {
    (0, _classCallCheck2.default)(this, _t);
    return _super8.apply(this, arguments);
  }
  (0, _createClass2.default)(_t, [{
    key: "getAccessToken",
    value: function getAccessToken() {
      var _this11 = this;
      return new Promise(function (e, t) {
        var n = "Anonymous_Access_token";
        _this11.setAccessToken(n), e(n);
      });
    }
  }, {
    key: "setupRequest",
    value: function setupRequest(e, t) {
      var n = Object.assign({}, e, {
          spaceId: this.config.spaceId,
          timestamp: Date.now()
        }),
        s = {
          "Content-Type": "application/json"
        };
      "auth" !== t && (n.token = this.accessToken, s["x-basement-token"] = this.accessToken), s["x-serverless-sign"] = ae.sign(n, this.config.clientSecret);
      var r = oe();
      s["x-client-info"] = encodeURIComponent(JSON.stringify(r));
      var _Z = Z(),
        i = _Z.token;
      return s["x-client-token"] = i, {
        url: this.config.requestUrl,
        method: "POST",
        data: n,
        dataType: "json",
        header: JSON.parse(JSON.stringify(s))
      };
    }
  }, {
    key: "uploadFileToOSS",
    value: function uploadFileToOSS(_ref13) {
      var _this12 = this;
      var e = _ref13.url,
        t = _ref13.formData,
        n = _ref13.name,
        s = _ref13.filePath,
        r = _ref13.fileType,
        i = _ref13.onUploadProgress;
      return new Promise(function (o, a) {
        var c = _this12.adapter.uploadFile({
          url: e,
          formData: t,
          name: n,
          filePath: s,
          fileType: r,
          success: function success(e) {
            e && e.statusCode < 400 ? o(e) : a(new Q({
              code: "UPLOAD_FAILED",
              message: "文件上传失败"
            }));
          },
          fail: function fail(e) {
            a(new Q({
              code: e.code || "UPLOAD_FAILED",
              message: e.message || e.errMsg || "文件上传失败"
            }));
          }
        });
        "function" == typeof i && c && "function" == typeof c.onProgressUpdate && c.onProgressUpdate(function (e) {
          i({
            loaded: e.totalBytesSent,
            total: e.totalBytesExpectedToSend
          });
        });
      });
    }
  }, {
    key: "uploadFile",
    value: function uploadFile(_ref14) {
      var _this13 = this;
      var e = _ref14.filePath,
        t = _ref14.cloudPath,
        _ref14$fileType = _ref14.fileType,
        n = _ref14$fileType === void 0 ? "image" : _ref14$fileType,
        s = _ref14.onUploadProgress;
      if (!t) throw new Q({
        code: "CLOUDPATH_REQUIRED",
        message: "cloudPath不可为空"
      });
      var r;
      return this.getOSSUploadOptionsFromPath({
        cloudPath: t
      }).then(function (t) {
        var _t$result = t.result,
          i = _t$result.url,
          o = _t$result.formData,
          a = _t$result.name;
        r = t.result.fileUrl;
        var c = {
          url: i,
          formData: o,
          name: a,
          filePath: e,
          fileType: n
        };
        return _this13.uploadFileToOSS(Object.assign({}, c, {
          onUploadProgress: s
        }));
      }).then(function () {
        return _this13.reportOSSUpload({
          cloudPath: t
        });
      }).then(function (t) {
        return new Promise(function (n, s) {
          t.success ? n({
            success: !0,
            filePath: e,
            fileID: r
          }) : s(new Q({
            code: "UPLOAD_FAILED",
            message: "文件上传失败"
          }));
        });
      });
    }
  }, {
    key: "deleteFile",
    value: function deleteFile(_ref15) {
      var e = _ref15.fileList;
      var t = {
        method: "serverless.file.resource.delete",
        params: JSON.stringify({
          fileList: e
        })
      };
      return this.request(this.setupRequest(t)).then(function (e) {
        if (e.success) return e.result;
        throw new Q({
          code: "DELETE_FILE_FAILED",
          message: "删除文件失败"
        });
      });
    }
  }, {
    key: "getTempFileURL",
    value: function getTempFileURL() {
      var _ref16 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        e = _ref16.fileList;
      if (!Array.isArray(e) || 0 === e.length) throw new Q({
        code: "INVALID_PARAM",
        message: "fileList的元素必须是非空的字符串"
      });
      var t = {
        method: "serverless.file.resource.getTempFileURL",
        params: JSON.stringify({
          fileList: e
        })
      };
      return this.request(this.setupRequest(t)).then(function (e) {
        if (e.success) return {
          fileList: e.result.fileList.map(function (e) {
            return {
              fileID: e.fileID,
              tempFileURL: e.tempFileURL
            };
          })
        };
        throw new Q({
          code: "GET_TEMP_FILE_URL_FAILED",
          message: "获取临时文件链接失败"
        });
      });
    }
  }]);
  return _t;
}(le);
var wt = {
  init: function init(e) {
    var t = new _t(e),
      n = {
        signInAnonymously: function signInAnonymously() {
          return t.authorize();
        },
        getLoginState: function getLoginState() {
          return Promise.resolve(!1);
        }
      };
    return t.auth = function () {
      return n;
    }, t.customAuth = t.auth, t;
  }
};
function vt(_ref17) {
  var e = _ref17.data;
  var t;
  t = oe();
  var n = JSON.parse(JSON.stringify(e || {}));
  if (Object.assign(n, {
    clientInfo: t
  }), !n.uniIdToken) {
    var _Z2 = Z(),
      _e20 = _Z2.token;
    _e20 && (n.uniIdToken = _e20);
  }
  return n;
}
function St() {
  var _this14 = this;
  var _ref18 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref18.name,
    t = _ref18.data;
  var _this$__dev__ = this.__dev__,
    n = _this$__dev__.localAddress,
    s = _this$__dev__.localPort,
    r = {
      aliyun: "aliyun",
      tencent: "tcb"
    }[this.config.provider],
    i = this.config.spaceId,
    o = "http://".concat(n, ":").concat(s, "/system/check-function"),
    a = "http://".concat(n, ":").concat(s, "/cloudfunctions/").concat(e);
  return new Promise(function (t, n) {
    X.request({
      method: "POST",
      url: o,
      data: {
        name: e,
        platform: S,
        provider: r,
        spaceId: i
      },
      timeout: 3e3,
      success: function success(e) {
        t(e);
      },
      fail: function fail() {
        t({
          data: {
            code: "NETWORK_ERROR",
            message: "连接本地调试服务失败，请检查客户端是否和主机在同一局域网下，自动切换为已部署的云函数。"
          }
        });
      }
    });
  }).then(function () {
    var _ref19 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      e = _ref19.data;
    var _ref20 = e || {},
      t = _ref20.code,
      n = _ref20.message;
    return {
      code: 0 === t ? 0 : t || "SYS_ERR",
      message: n || "SYS_ERR"
    };
  }).then(function (_ref21) {
    var n = _ref21.code,
      s = _ref21.message;
    if (0 !== n) {
      switch (n) {
        case "MODULE_ENCRYPTED":
          console.error("\u6B64\u4E91\u51FD\u6570\uFF08".concat(e, "\uFF09\u4F9D\u8D56\u52A0\u5BC6\u516C\u5171\u6A21\u5757\u4E0D\u53EF\u672C\u5730\u8C03\u8BD5\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570"));
          break;
        case "FUNCTION_ENCRYPTED":
          console.error("\u6B64\u4E91\u51FD\u6570\uFF08".concat(e, "\uFF09\u5DF2\u52A0\u5BC6\u4E0D\u53EF\u672C\u5730\u8C03\u8BD5\uFF0C\u81EA\u52A8\u5207\u6362\u4E3A\u4E91\u7AEF\u5DF2\u90E8\u7F72\u7684\u4E91\u51FD\u6570"));
          break;
        case "ACTION_ENCRYPTED":
          console.error(s || "需要访问加密的uni-clientDB-action，自动切换为云端环境");
          break;
        case "NETWORK_ERROR":
          {
            var _e21 = "连接本地调试服务失败，请检查客户端是否和主机在同一局域网下";
            throw console.error(_e21), new Error(_e21);
          }
        case "SWITCH_TO_CLOUD":
          break;
        default:
          {
            var _e22 = "\u68C0\u6D4B\u672C\u5730\u8C03\u8BD5\u670D\u52A1\u51FA\u73B0\u9519\u8BEF\uFF1A".concat(s, "\uFF0C\u8BF7\u68C0\u67E5\u7F51\u7EDC\u73AF\u5883\u6216\u91CD\u542F\u5BA2\u6237\u7AEF\u518D\u8BD5");
            throw console.error(_e22), new Error(_e22);
          }
      }
      return _this14._callCloudFunction({
        name: e,
        data: t
      });
    }
    return new Promise(function (e, n) {
      var s = vt.call(_this14, {
        data: t
      });
      X.request({
        method: "POST",
        url: a,
        data: {
          provider: r,
          platform: S,
          param: s
        },
        success: function success() {
          var _ref22 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            t = _ref22.statusCode,
            s = _ref22.data;
          return !t || t >= 400 ? n(new Q({
            code: s.code || "SYS_ERR",
            message: s.message || "request:fail"
          })) : e({
            result: s
          });
        },
        fail: function fail(e) {
          n(new Q({
            code: e.code || e.errCode || "SYS_ERR",
            message: e.message || e.errMsg || "request:fail"
          }));
        }
      });
    });
  });
}
var kt = [{
  rule: /fc_function_not_found|FUNCTION_NOT_FOUND/,
  content: "，云函数[{functionName}]在云端不存在，请检查此云函数名称是否正确以及该云函数是否已上传到服务空间",
  mode: "append"
}];
var It = /[\\^$.*+?()[\]{}|]/g,
  bt = RegExp(It.source);
function Tt(e, t, n) {
  return e.replace(new RegExp((s = t) && bt.test(s) ? s.replace(It, "\\$&") : s, "g"), n);
  var s;
}
var At = "none",
  Ct = "request",
  Pt = "response",
  Et = "both";
var Ot = /*#__PURE__*/function () {
  function Ot() {
    var _ref23 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      e = _ref23.secretType,
      t = _ref23.uniCloudIns;
    (0, _classCallCheck2.default)(this, Ot);
    this.secretType = e || At, this.uniCloudIns = t;
    var _this$uniCloudIns$con = this.uniCloudIns.config,
      n = _this$uniCloudIns$con.provider,
      s = _this$uniCloudIns$con.spaceId;
    var r;
    this.provider = n, this.spaceId = s, this.scopedGlobalCache = (r = this.uniCloudIns, C("_globalUniCloudSecureNetworkCache__{spaceId}".replace("{spaceId}", r.config.spaceId)));
  }
  (0, _createClass2.default)(Ot, [{
    key: "getSystemInfo",
    value: function getSystemInfo() {
      return this._systemInfo || (this._systemInfo = re()), this._systemInfo;
    }
  }, {
    key: "appId",
    get: function get() {
      return this.getSystemInfo().appId;
    }
  }, {
    key: "deviceId",
    get: function get() {
      return this.getSystemInfo().deviceId;
    }
  }, {
    key: "encryptData",
    value: function () {
      var _encryptData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee33(e) {
        return _regenerator.default.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                return _context33.abrupt("return", this.secretType === At || this.secretType === At ? e : this.platformEncryptData(e));
              case 1:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));
      function encryptData(_x31) {
        return _encryptData.apply(this, arguments);
      }
      return encryptData;
    }()
  }, {
    key: "decryptResult",
    value: function () {
      var _decryptResult = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee34(e) {
        var t;
        return _regenerator.default.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                if (!(this.secretType === At)) {
                  _context34.next = 2;
                  break;
                }
                return _context34.abrupt("return", e);
              case 2:
                t = e.content;
                return _context34.abrupt("return", t ? this.secretType === Ct ? t : this.platformDecryptResult(e) : e);
              case 4:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));
      function decryptResult(_x32) {
        return _decryptResult.apply(this, arguments);
      }
      return decryptResult;
    }()
  }, {
    key: "wrapVerifyClientCallFunction",
    value: function wrapVerifyClientCallFunction(e) {
      var t = this;
      return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee35() {
        var _ref25,
          n,
          _ref25$data,
          s,
          _args35 = arguments;
        return _regenerator.default.wrap(function _callee35$(_context35) {
          while (1) {
            switch (_context35.prev = _context35.next) {
              case 0:
                _ref25 = _args35.length > 0 && _args35[0] !== undefined ? _args35[0] : {}, n = _ref25.name, _ref25$data = _ref25.data, s = _ref25$data === void 0 ? {} : _ref25$data;
                _context35.next = 3;
                return t.prepare();
              case 3:
                _context35.next = 5;
                return t.platformGetSignOption();
              case 5:
                (s = JSON.parse(JSON.stringify(s)))._uniCloudOptions = _context35.sent;
                _context35.next = 8;
                return e({
                  name: n,
                  data: s
                });
              case 8:
                return _context35.abrupt("return", _context35.sent);
              case 9:
              case "end":
                return _context35.stop();
            }
          }
        }, _callee35);
      }));
    }
  }, {
    key: "wrapEncryptDataCallFunction",
    value: function wrapEncryptDataCallFunction(e) {
      var t = this;
      return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee36() {
        var _ref27,
          n,
          _ref27$data,
          s,
          r,
          i,
          _args36 = arguments;
        return _regenerator.default.wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                _ref27 = _args36.length > 0 && _args36[0] !== undefined ? _args36[0] : {}, n = _ref27.name, _ref27$data = _ref27.data, s = _ref27$data === void 0 ? {} : _ref27$data;
                _context36.next = 3;
                return t.prepare();
              case 3:
                _context36.next = 5;
                return t.encryptData(s);
              case 5:
                r = _context36.sent;
                _context36.next = 8;
                return e({
                  name: n,
                  data: r
                });
              case 8:
                i = _context36.sent;
                _context36.next = 11;
                return t.decryptResult(i.result);
              case 11:
                i.result = _context36.sent;
                return _context36.abrupt("return", i);
              case 13:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36);
      }));
    }
  }]);
  return Ot;
}();
/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */
function xt(e) {
  return parseInt(e) === e;
}
function Ut(e) {
  if (!xt(e.length)) return !1;
  for (var t = 0; t < e.length; t++) {
    if (!xt(e[t]) || e[t] < 0 || e[t] > 255) return !1;
  }
  return !0;
}
function Rt(e, t) {
  if (e.buffer && "Uint8Array" === e.name) return t && (e = e.slice ? e.slice() : Array.prototype.slice.call(e)), e;
  if (Array.isArray(e)) {
    if (!Ut(e)) throw new Error("Array contains invalid value: " + e);
    return new Uint8Array(e);
  }
  if (xt(e.length) && Ut(e)) return new Uint8Array(e);
  throw new Error("unsupported array-like object");
}
function Lt(e) {
  return new Uint8Array(e);
}
function Nt(e, t, n, s, r) {
  null == s && null == r || (e = e.slice ? e.slice(s, r) : Array.prototype.slice.call(e, s, r)), t.set(e, n);
}
var Dt,
  Ft = {
    toBytes: function toBytes(e) {
      var t = [],
        n = 0;
      for (e = encodeURI(e); n < e.length;) {
        var s = e.charCodeAt(n++);
        37 === s ? (t.push(parseInt(e.substr(n, 2), 16)), n += 2) : t.push(s);
      }
      return Rt(t);
    },
    fromBytes: function fromBytes(e) {
      for (var t = [], n = 0; n < e.length;) {
        var s = e[n];
        s < 128 ? (t.push(String.fromCharCode(s)), n++) : s > 191 && s < 224 ? (t.push(String.fromCharCode((31 & s) << 6 | 63 & e[n + 1])), n += 2) : (t.push(String.fromCharCode((15 & s) << 12 | (63 & e[n + 1]) << 6 | 63 & e[n + 2])), n += 3);
      }
      return t.join("");
    }
  },
  qt = (Dt = "0123456789abcdef", {
    toBytes: function toBytes(e) {
      for (var t = [], n = 0; n < e.length; n += 2) {
        t.push(parseInt(e.substr(n, 2), 16));
      }
      return t;
    },
    fromBytes: function fromBytes(e) {
      for (var t = [], n = 0; n < e.length; n++) {
        var s = e[n];
        t.push(Dt[(240 & s) >> 4] + Dt[15 & s]);
      }
      return t.join("");
    }
  }),
  Kt = {
    16: 10,
    24: 12,
    32: 14
  },
  Mt = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
  jt = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22],
  Bt = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125],
  $t = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986],
  Wt = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766],
  zt = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126],
  Jt = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436],
  Ht = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890],
  Gt = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935],
  Vt = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600],
  Yt = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480],
  Qt = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795],
  Xt = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855],
  Zt = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150],
  en = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
function tn(e) {
  for (var t = [], n = 0; n < e.length; n += 4) {
    t.push(e[n] << 24 | e[n + 1] << 16 | e[n + 2] << 8 | e[n + 3]);
  }
  return t;
}
var nn = /*#__PURE__*/function () {
  function nn(e) {
    (0, _classCallCheck2.default)(this, nn);
    if (!(this instanceof nn)) throw Error("AES must be instanitated with `new`");
    Object.defineProperty(this, "key", {
      value: Rt(e, !0)
    }), this._prepare();
  }
  (0, _createClass2.default)(nn, [{
    key: "_prepare",
    value: function _prepare() {
      var e = Kt[this.key.length];
      if (null == e) throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
      this._Ke = [], this._Kd = [];
      for (var t = 0; t <= e; t++) {
        this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
      }
      var n,
        s = 4 * (e + 1),
        r = this.key.length / 4,
        i = tn(this.key);
      for (t = 0; t < r; t++) {
        n = t >> 2, this._Ke[n][t % 4] = i[t], this._Kd[e - n][t % 4] = i[t];
      }
      for (var o, a = 0, c = r; c < s;) {
        if (o = i[r - 1], i[0] ^= jt[o >> 16 & 255] << 24 ^ jt[o >> 8 & 255] << 16 ^ jt[255 & o] << 8 ^ jt[o >> 24 & 255] ^ Mt[a] << 24, a += 1, 8 != r) for (t = 1; t < r; t++) {
          i[t] ^= i[t - 1];
        } else {
          for (t = 1; t < r / 2; t++) {
            i[t] ^= i[t - 1];
          }
          o = i[r / 2 - 1], i[r / 2] ^= jt[255 & o] ^ jt[o >> 8 & 255] << 8 ^ jt[o >> 16 & 255] << 16 ^ jt[o >> 24 & 255] << 24;
          for (t = r / 2 + 1; t < r; t++) {
            i[t] ^= i[t - 1];
          }
        }
        for (t = 0; t < r && c < s;) {
          u = c >> 2, l = c % 4, this._Ke[u][l] = i[t], this._Kd[e - u][l] = i[t++], c++;
        }
      }
      for (var u = 1; u < e; u++) {
        for (var l = 0; l < 4; l++) {
          o = this._Kd[u][l], this._Kd[u][l] = Qt[o >> 24 & 255] ^ Xt[o >> 16 & 255] ^ Zt[o >> 8 & 255] ^ en[255 & o];
        }
      }
    }
  }, {
    key: "encrypt",
    value: function encrypt(e) {
      if (16 != e.length) throw new Error("invalid plaintext size (must be 16 bytes)");
      for (var t = this._Ke.length - 1, n = [0, 0, 0, 0], s = tn(e), r = 0; r < 4; r++) {
        s[r] ^= this._Ke[0][r];
      }
      for (var i = 1; i < t; i++) {
        for (r = 0; r < 4; r++) {
          n[r] = $t[s[r] >> 24 & 255] ^ Wt[s[(r + 1) % 4] >> 16 & 255] ^ zt[s[(r + 2) % 4] >> 8 & 255] ^ Jt[255 & s[(r + 3) % 4]] ^ this._Ke[i][r];
        }
        s = n.slice();
      }
      var o,
        a = Lt(16);
      for (r = 0; r < 4; r++) {
        o = this._Ke[t][r], a[4 * r] = 255 & (jt[s[r] >> 24 & 255] ^ o >> 24), a[4 * r + 1] = 255 & (jt[s[(r + 1) % 4] >> 16 & 255] ^ o >> 16), a[4 * r + 2] = 255 & (jt[s[(r + 2) % 4] >> 8 & 255] ^ o >> 8), a[4 * r + 3] = 255 & (jt[255 & s[(r + 3) % 4]] ^ o);
      }
      return a;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if (16 != e.length) throw new Error("invalid ciphertext size (must be 16 bytes)");
      for (var t = this._Kd.length - 1, n = [0, 0, 0, 0], s = tn(e), r = 0; r < 4; r++) {
        s[r] ^= this._Kd[0][r];
      }
      for (var i = 1; i < t; i++) {
        for (r = 0; r < 4; r++) {
          n[r] = Ht[s[r] >> 24 & 255] ^ Gt[s[(r + 3) % 4] >> 16 & 255] ^ Vt[s[(r + 2) % 4] >> 8 & 255] ^ Yt[255 & s[(r + 1) % 4]] ^ this._Kd[i][r];
        }
        s = n.slice();
      }
      var o,
        a = Lt(16);
      for (r = 0; r < 4; r++) {
        o = this._Kd[t][r], a[4 * r] = 255 & (Bt[s[r] >> 24 & 255] ^ o >> 24), a[4 * r + 1] = 255 & (Bt[s[(r + 3) % 4] >> 16 & 255] ^ o >> 16), a[4 * r + 2] = 255 & (Bt[s[(r + 2) % 4] >> 8 & 255] ^ o >> 8), a[4 * r + 3] = 255 & (Bt[255 & s[(r + 1) % 4]] ^ o);
      }
      return a;
    }
  }]);
  return nn;
}();
var sn = /*#__PURE__*/function () {
  function sn(e) {
    (0, _classCallCheck2.default)(this, sn);
    if (!(this instanceof sn)) throw Error("AES must be instanitated with `new`");
    this.description = "Electronic Code Block", this.name = "ecb", this._aes = new nn(e);
  }
  (0, _createClass2.default)(sn, [{
    key: "encrypt",
    value: function encrypt(e) {
      if ((e = Rt(e)).length % 16 != 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var t = Lt(e.length), n = Lt(16), s = 0; s < e.length; s += 16) {
        Nt(e, n, 0, s, s + 16), Nt(n = this._aes.encrypt(n), t, s);
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if ((e = Rt(e)).length % 16 != 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var t = Lt(e.length), n = Lt(16), s = 0; s < e.length; s += 16) {
        Nt(e, n, 0, s, s + 16), Nt(n = this._aes.decrypt(n), t, s);
      }
      return t;
    }
  }]);
  return sn;
}();
var rn = /*#__PURE__*/function () {
  function rn(e, t) {
    (0, _classCallCheck2.default)(this, rn);
    if (!(this instanceof rn)) throw Error("AES must be instanitated with `new`");
    if (this.description = "Cipher Block Chaining", this.name = "cbc", t) {
      if (16 != t.length) throw new Error("invalid initialation vector size (must be 16 bytes)");
    } else t = Lt(16);
    this._lastCipherblock = Rt(t, !0), this._aes = new nn(e);
  }
  (0, _createClass2.default)(rn, [{
    key: "encrypt",
    value: function encrypt(e) {
      if ((e = Rt(e)).length % 16 != 0) throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var t = Lt(e.length), n = Lt(16), s = 0; s < e.length; s += 16) {
        Nt(e, n, 0, s, s + 16);
        for (var r = 0; r < 16; r++) {
          n[r] ^= this._lastCipherblock[r];
        }
        this._lastCipherblock = this._aes.encrypt(n), Nt(this._lastCipherblock, t, s);
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if ((e = Rt(e)).length % 16 != 0) throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var t = Lt(e.length), n = Lt(16), s = 0; s < e.length; s += 16) {
        Nt(e, n, 0, s, s + 16), n = this._aes.decrypt(n);
        for (var r = 0; r < 16; r++) {
          t[s + r] = n[r] ^ this._lastCipherblock[r];
        }
        Nt(e, this._lastCipherblock, 0, s, s + 16);
      }
      return t;
    }
  }]);
  return rn;
}();
var on = /*#__PURE__*/function () {
  function on(e, t, n) {
    (0, _classCallCheck2.default)(this, on);
    if (!(this instanceof on)) throw Error("AES must be instanitated with `new`");
    if (this.description = "Cipher Feedback", this.name = "cfb", t) {
      if (16 != t.length) throw new Error("invalid initialation vector size (must be 16 size)");
    } else t = Lt(16);
    n || (n = 1), this.segmentSize = n, this._shiftRegister = Rt(t, !0), this._aes = new nn(e);
  }
  (0, _createClass2.default)(on, [{
    key: "encrypt",
    value: function encrypt(e) {
      if (e.length % this.segmentSize != 0) throw new Error("invalid plaintext size (must be segmentSize bytes)");
      for (var t, n = Rt(e, !0), s = 0; s < n.length; s += this.segmentSize) {
        t = this._aes.encrypt(this._shiftRegister);
        for (var r = 0; r < this.segmentSize; r++) {
          n[s + r] ^= t[r];
        }
        Nt(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), Nt(n, this._shiftRegister, 16 - this.segmentSize, s, s + this.segmentSize);
      }
      return n;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      if (e.length % this.segmentSize != 0) throw new Error("invalid ciphertext size (must be segmentSize bytes)");
      for (var t, n = Rt(e, !0), s = 0; s < n.length; s += this.segmentSize) {
        t = this._aes.encrypt(this._shiftRegister);
        for (var r = 0; r < this.segmentSize; r++) {
          n[s + r] ^= t[r];
        }
        Nt(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), Nt(e, this._shiftRegister, 16 - this.segmentSize, s, s + this.segmentSize);
      }
      return n;
    }
  }]);
  return on;
}();
var an = /*#__PURE__*/function () {
  function an(e, t) {
    (0, _classCallCheck2.default)(this, an);
    if (!(this instanceof an)) throw Error("AES must be instanitated with `new`");
    if (this.description = "Output Feedback", this.name = "ofb", t) {
      if (16 != t.length) throw new Error("invalid initialation vector size (must be 16 bytes)");
    } else t = Lt(16);
    this._lastPrecipher = Rt(t, !0), this._lastPrecipherIndex = 16, this._aes = new nn(e);
  }
  (0, _createClass2.default)(an, [{
    key: "encrypt",
    value: function encrypt(e) {
      for (var t = Rt(e, !0), n = 0; n < t.length; n++) {
        16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), t[n] ^= this._lastPrecipher[this._lastPrecipherIndex++];
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      return this.encrypt(e);
    }
  }]);
  return an;
}();
var cn = /*#__PURE__*/function () {
  function cn(e) {
    (0, _classCallCheck2.default)(this, cn);
    if (!(this instanceof cn)) throw Error("Counter must be instanitated with `new`");
    0 === e || e || (e = 1), "number" == typeof e ? (this._counter = Lt(16), this.setValue(e)) : this.setBytes(e);
  }
  (0, _createClass2.default)(cn, [{
    key: "setValue",
    value: function setValue(e) {
      if ("number" != typeof e || parseInt(e) != e) throw new Error("invalid counter value (must be an integer)");
      if (e > Number.MAX_SAFE_INTEGER) throw new Error("integer value out of safe range");
      for (var t = 15; t >= 0; --t) {
        this._counter[t] = e % 256, e = parseInt(e / 256);
      }
    }
  }, {
    key: "setBytes",
    value: function setBytes(e) {
      if (16 != (e = Rt(e, !0)).length) throw new Error("invalid counter bytes size (must be 16 bytes)");
      this._counter = e;
    }
  }, {
    key: "increment",
    value: function increment() {
      for (var e = 15; e >= 0; e--) {
        if (255 !== this._counter[e]) {
          this._counter[e]++;
          break;
        }
        this._counter[e] = 0;
      }
    }
  }]);
  return cn;
}();
var un = /*#__PURE__*/function () {
  function un(e, t) {
    (0, _classCallCheck2.default)(this, un);
    if (!(this instanceof un)) throw Error("AES must be instanitated with `new`");
    this.description = "Counter", this.name = "ctr", t instanceof cn || (t = new cn(t)), this._counter = t, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new nn(e);
  }
  (0, _createClass2.default)(un, [{
    key: "encrypt",
    value: function encrypt(e) {
      for (var t = Rt(e, !0), n = 0; n < t.length; n++) {
        16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), t[n] ^= this._remainingCounter[this._remainingCounterIndex++];
      }
      return t;
    }
  }, {
    key: "decrypt",
    value: function decrypt(e) {
      return this.encrypt(e);
    }
  }]);
  return un;
}();
var ln = {
  AES: nn,
  Counter: cn,
  ModeOfOperation: {
    ecb: sn,
    cbc: rn,
    cfb: on,
    ofb: an,
    ctr: un
  },
  utils: {
    hex: qt,
    utf8: Ft
  },
  padding: {
    pkcs7: {
      pad: function pad(e) {
        var t = 16 - (e = Rt(e, !0)).length % 16,
          n = Lt(e.length + t);
        Nt(e, n);
        for (var s = e.length; s < n.length; s++) {
          n[s] = t;
        }
        return n;
      },
      strip: function strip(e) {
        if ((e = Rt(e, !0)).length < 16) throw new Error("PKCS#7 invalid length");
        var t = e[e.length - 1];
        if (t > 16) throw new Error("PKCS#7 padding byte out of range");
        for (var n = e.length - t, s = 0; s < t; s++) {
          if (e[n + s] !== t) throw new Error("PKCS#7 invalid padding byte");
        }
        var r = Lt(n);
        return Nt(e, r, 0, 0, n), r;
      }
    }
  },
  _arrayTest: {
    coerceArray: Rt,
    createArray: Lt,
    copyArray: Nt
  }
};
function hn(e, t, n) {
  var s = new Uint8Array(uni.base64ToArrayBuffer(t)),
    r = ln.utils.utf8.toBytes(n),
    i = ln.utils.utf8.toBytes(e),
    o = new ln.ModeOfOperation.cbc(s, r),
    a = ln.padding.pkcs7.pad(i),
    c = o.encrypt(a);
  return uni.arrayBufferToBase64(c);
}
var dn = {
    code: 2e4,
    message: "System error"
  },
  fn = {
    code: 20101,
    message: "Invalid client"
  },
  pn = {
    code: 20102,
    message: "Get encrypt key failed"
  },
  gn = {
    10001: "Secure network is not supported on current playground or unimpsdk",
    10003: "Config missing in current app. If the problem pesist, please contact DCloud.",
    10009: "Encrypt payload failed",
    10010: "Decrypt response failed"
  };
function mn(e) {
  var _ref28 = e || {},
    t = _ref28.errSubject,
    n = _ref28.subject,
    s = _ref28.errCode,
    r = _ref28.errMsg,
    i = _ref28.code,
    o = _ref28.message,
    a = _ref28.cause;
  return new Q({
    subject: t || n || "uni-secure-network",
    code: s || i || dn.code,
    message: r || o,
    cause: a
  });
}
var yn,
  _n,
  wn = null;
var vn = /*#__PURE__*/function (_Ot) {
  (0, _inherits2.default)(vn, _Ot);
  var _super9 = _createSuper(vn);
  function vn(e) {
    var _this15;
    (0, _classCallCheck2.default)(this, vn);
    _this15 = _super9.call(this, e), _this15.userEncryptKey = null;
    return _this15;
  }
  (0, _createClass2.default)(vn, [{
    key: "isLogin",
    value: function isLogin() {
      return !!this.scopedGlobalCache.mpWeixinCode;
    }
  }, {
    key: "prepare",
    value: function () {
      var _prepare2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee37() {
        return _regenerator.default.wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                if (this.isLogin()) {
                  _context37.next = 7;
                  break;
                }
                if (this.scopedGlobalCache.initPromise) {
                  _context37.next = 3;
                  break;
                }
                throw new Error("`uniCloud.initSecureNetworkByWeixin` has not yet been called");
              case 3:
                _context37.next = 5;
                return this.scopedGlobalCache.initPromise;
              case 5:
                if (this.scopedGlobalCache.mpWeixinCode) {
                  _context37.next = 7;
                  break;
                }
                throw new Error("uniCloud.initSecureNetworkByWeixin` has not yet been called or successfully excuted");
              case 7:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37, this);
      }));
      function prepare() {
        return _prepare2.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "getUserEncryptKey",
    value: function () {
      var _getUserEncryptKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee38() {
        var _this16 = this;
        var e;
        return _regenerator.default.wrap(function _callee38$(_context38) {
          while (1) {
            switch (_context38.prev = _context38.next) {
              case 0:
                if (!this.userEncryptKey) {
                  _context38.next = 2;
                  break;
                }
                return _context38.abrupt("return", this.userEncryptKey);
              case 2:
                if (!(wn && wn.expireTime)) {
                  _context38.next = 6;
                  break;
                }
                e = Date.now();
                if (!(wn.expireTime - e > 0)) {
                  _context38.next = 6;
                  break;
                }
                return _context38.abrupt("return", (this.userEncryptKey = wn, this.userEncryptKey));
              case 6:
                return _context38.abrupt("return", new Promise(function (e, t) {
                  uni.getUserCryptoManager().getLatestUserKey({
                    success: function success(t) {
                      wn = t, _this16.userEncryptKey = t, e(_this16.userEncryptKey);
                    },
                    fail: function fail(e) {
                      t(mn(_objectSpread(_objectSpread({}, pn), {}, {
                        cause: e
                      })));
                    }
                  });
                }));
              case 7:
              case "end":
                return _context38.stop();
            }
          }
        }, _callee38, this);
      }));
      function getUserEncryptKey() {
        return _getUserEncryptKey.apply(this, arguments);
      }
      return getUserEncryptKey;
    }()
  }, {
    key: "getWxAppId",
    value: function getWxAppId() {
      return wx.getAccountInfoSync().miniProgram.appId;
    }
  }, {
    key: "platformGetSignOption",
    value: function () {
      var _platformGetSignOption = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee39() {
        var _yield$this$getUserEn, e, t, n;
        return _regenerator.default.wrap(function _callee39$(_context39) {
          while (1) {
            switch (_context39.prev = _context39.next) {
              case 0:
                _context39.next = 2;
                return this.getUserEncryptKey();
              case 2:
                _yield$this$getUserEn = _context39.sent;
                e = _yield$this$getUserEn.encryptKey;
                t = _yield$this$getUserEn.iv;
                n = _yield$this$getUserEn.version;
                return _context39.abrupt("return", {
                  verifyClientSign: hn(JSON.stringify({
                    data: JSON.stringify({}),
                    appId: this.appId,
                    deviceId: this.deviceId,
                    wxAppId: this.getWxAppId(),
                    simulator: "devtools" === re().platform,
                    timestamp: Date.now()
                  }), e, t),
                  encryptKeyId: n,
                  mpWeixinCode: this.scopedGlobalCache.mpWeixinCode
                });
              case 7:
              case "end":
                return _context39.stop();
            }
          }
        }, _callee39, this);
      }));
      function platformGetSignOption() {
        return _platformGetSignOption.apply(this, arguments);
      }
      return platformGetSignOption;
    }()
  }, {
    key: "platformEncryptData",
    value: function () {
      var _platformEncryptData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee40(e) {
        var _yield$this$getUserEn2, t, n, s, r;
        return _regenerator.default.wrap(function _callee40$(_context40) {
          while (1) {
            switch (_context40.prev = _context40.next) {
              case 0:
                _context40.next = 2;
                return this.getUserEncryptKey();
              case 2:
                _yield$this$getUserEn2 = _context40.sent;
                t = _yield$this$getUserEn2.encryptKey;
                n = _yield$this$getUserEn2.iv;
                s = _yield$this$getUserEn2.version;
                r = {
                  secretType: this.secretType,
                  encryptKeyId: s,
                  mpWeixinCode: this.scopedGlobalCache.mpWeixinCode
                };
                return _context40.abrupt("return", this.secretType === Pt ? {
                  content: e,
                  _uniCloudOptions: r
                } : {
                  content: hn(JSON.stringify({
                    data: JSON.stringify(e),
                    appId: this.appId,
                    deviceId: this.deviceId,
                    wxAppId: this.getWxAppId(),
                    simulator: "devtools" === re().platform,
                    timestamp: Date.now()
                  }), t, n),
                  _uniCloudOptions: r
                });
              case 8:
              case "end":
                return _context40.stop();
            }
          }
        }, _callee40, this);
      }));
      function platformEncryptData(_x33) {
        return _platformEncryptData.apply(this, arguments);
      }
      return platformEncryptData;
    }()
  }, {
    key: "platformDecryptResult",
    value: function () {
      var _platformDecryptResult = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee41(e) {
        var t, _yield$this$getUserEn3, n, s;
        return _regenerator.default.wrap(function _callee41$(_context41) {
          while (1) {
            switch (_context41.prev = _context41.next) {
              case 0:
                t = e.content;
                _context41.next = 3;
                return this.getUserEncryptKey();
              case 3:
                _yield$this$getUserEn3 = _context41.sent;
                n = _yield$this$getUserEn3.encryptKey;
                s = _yield$this$getUserEn3.iv;
                return _context41.abrupt("return", JSON.parse(function (e, t, n) {
                  var s = new Uint8Array(uni.base64ToArrayBuffer(e)),
                    r = new Uint8Array(uni.base64ToArrayBuffer(t)),
                    i = ln.utils.utf8.toBytes(n),
                    o = new ln.ModeOfOperation.cbc(r, i),
                    a = ln.padding.pkcs7.strip(o.decrypt(s));
                  return ln.utils.utf8.fromBytes(a);
                }(t, n, s)));
              case 7:
              case "end":
                return _context41.stop();
            }
          }
        }, _callee41, this);
      }));
      function platformDecryptResult(_x34) {
        return _platformDecryptResult.apply(this, arguments);
      }
      return platformDecryptResult;
    }()
  }]);
  return vn;
}(Ot);
function Sn(e) {
  var t = ["hasClientKey", "encryptGetClientKeyPayload", "setClientKey", "encrypt", "decrypt"],
    n = {};
  var _loop = function _loop(_s10) {
    var r = t[_s10];
    n[r] = function () {
      for (var _len = arguments.length, t = new Array(_len), _key = 0; _key < _len; _key++) {
        t[_key] = arguments[_key];
      }
      return new Promise(function (n, s) {
        "function" == typeof e[r] ? e[r].apply(e, t.concat([function () {
          var _ref29 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            e = _ref29.type,
            t = _ref29.data,
            r = _ref29.errCode,
            i = _ref29.errMsg,
            o = _ref29.errSubject,
            a = _ref29.message;
          "success" === e ? n(t) : s(mn({
            errCode: r,
            errMsg: gn[r] || i || a,
            errSubject: o
          }));
        }])) : s(mn({
          message: "请检查manifest.json内是否开启安全网络模块，另外注意标准基座不支持安全网络模块"
        }));
      });
    };
  };
  for (var _s10 = 0; _s10 < t.length; _s10++) {
    _loop(_s10);
  }
  return n;
}
var kn = /*#__PURE__*/function (_Ot2) {
  (0, _inherits2.default)(kn, _Ot2);
  var _super10 = _createSuper(kn);
  function kn(e) {
    var _this17;
    (0, _classCallCheck2.default)(this, kn);
    _this17 = _super10.call(this, e), _this17.appUtils = _objectSpread({}, Sn(uni.requireNativePlugin("plus"))), _this17.systemInfo = yn || (yn = re());
    return _this17;
  }
  (0, _createClass2.default)(kn, [{
    key: "hasClientKey",
    value: function () {
      var _hasClientKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee42() {
        return _regenerator.default.wrap(function _callee42$(_context42) {
          while (1) {
            switch (_context42.prev = _context42.next) {
              case 0:
                _context42.next = 2;
                return this.appUtils.hasClientKey({
                  provider: this.provider,
                  spaceId: this.spaceId
                });
              case 2:
                this._hasClientKey = _context42.sent;
                return _context42.abrupt("return", this._hasClientKey);
              case 4:
              case "end":
                return _context42.stop();
            }
          }
        }, _callee42, this);
      }));
      function hasClientKey() {
        return _hasClientKey.apply(this, arguments);
      }
      return hasClientKey;
    }()
  }, {
    key: "getAppClientKey",
    value: function () {
      var _getAppClientKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee43() {
        var _yield$this$appUtils$, e, t, n, s, r;
        return _regenerator.default.wrap(function _callee43$(_context43) {
          while (1) {
            switch (_context43.prev = _context43.next) {
              case 0:
                _context43.next = 2;
                return this.appUtils.encryptGetClientKeyPayload({
                  data: JSON.stringify({})
                });
              case 2:
                _yield$this$appUtils$ = _context43.sent;
                e = _yield$this$appUtils$.data;
                t = _yield$this$appUtils$.key;
                _context43.next = 7;
                return this.uniCloudIns.callFunction({
                  name: "DCloud-clientDB",
                  data: {
                    redirectTo: "encryption",
                    action: "getAppClientKey",
                    data: e,
                    key: t
                  }
                });
              case 7:
                _context43.t0 = _context43.sent.result;
                if (_context43.t0) {
                  _context43.next = 10;
                  break;
                }
                _context43.t0 = {};
              case 10:
                n = _context43.t0;
                if (!(0 !== n.errCode)) {
                  _context43.next = 13;
                  break;
                }
                throw function (e) {
                  return new Q({
                    subject: e.errSubject || "uni-secure-network",
                    code: e.errCode || e.code || dn.code,
                    message: e.errMsg || e.message
                  });
                }(n);
              case 13:
                s = n.clientKey, r = n.key;
                _context43.next = 16;
                return this.appUtils.setClientKey({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  clientKey: s,
                  key: r
                });
              case 16:
              case "end":
                return _context43.stop();
            }
          }
        }, _callee43, this);
      }));
      function getAppClientKey() {
        return _getAppClientKey.apply(this, arguments);
      }
      return getAppClientKey;
    }()
  }, {
    key: "ensureClientKey",
    value: function () {
      var _ensureClientKey = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee44() {
        var _this18 = this;
        return _regenerator.default.wrap(function _callee44$(_context44) {
          while (1) {
            switch (_context44.prev = _context44.next) {
              case 0:
                _context44.t0 = !0;
                _context44.next = 3;
                return this.hasClientKey();
              case 3:
                _context44.t1 = _context44.sent;
                if (!(_context44.t0 !== _context44.t1)) {
                  _context44.next = 6;
                  break;
                }
                return _context44.abrupt("return", (this.scopedGlobalCache.initPromise && "rejected" !== this.scopedGlobalCache.initStatus || (this.scopedGlobalCache.initPromise = this.getAppClientKey(), this.scopedGlobalCache.initPromise.then(function (e) {
                  _this18.scopedGlobalCache.initStatus = "fullfilled";
                }).catch(function (e) {
                  throw _this18.scopedGlobalCache.initStatus = "rejected", e;
                })), this.scopedGlobalCache.initPromise));
              case 6:
              case "end":
                return _context44.stop();
            }
          }
        }, _callee44, this);
      }));
      function ensureClientKey() {
        return _ensureClientKey.apply(this, arguments);
      }
      return ensureClientKey;
    }()
  }, {
    key: "prepare",
    value: function () {
      var _prepare3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee45() {
        return _regenerator.default.wrap(function _callee45$(_context45) {
          while (1) {
            switch (_context45.prev = _context45.next) {
              case 0:
                _context45.next = 2;
                return this.ensureClientKey();
              case 2:
              case "end":
                return _context45.stop();
            }
          }
        }, _callee45, this);
      }));
      function prepare() {
        return _prepare3.apply(this, arguments);
      }
      return prepare;
    }()
  }, {
    key: "platformGetSignOption",
    value: function () {
      var _platformGetSignOption2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee46() {
        var _yield$this$appUtils$2, e, t;
        return _regenerator.default.wrap(function _callee46$(_context46) {
          while (1) {
            switch (_context46.prev = _context46.next) {
              case 0:
                _context46.next = 2;
                return this.appUtils.encrypt({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  data: JSON.stringify({})
                });
              case 2:
                _yield$this$appUtils$2 = _context46.sent;
                e = _yield$this$appUtils$2.data;
                t = _yield$this$appUtils$2.key;
                return _context46.abrupt("return", {
                  verifyClientSign: e,
                  encryptKeyId: t
                });
              case 6:
              case "end":
                return _context46.stop();
            }
          }
        }, _callee46, this);
      }));
      function platformGetSignOption() {
        return _platformGetSignOption2.apply(this, arguments);
      }
      return platformGetSignOption;
    }()
  }, {
    key: "platformEncryptData",
    value: function () {
      var _platformEncryptData2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee47(e) {
        var _yield$this$appUtils$3, t, n, s;
        return _regenerator.default.wrap(function _callee47$(_context47) {
          while (1) {
            switch (_context47.prev = _context47.next) {
              case 0:
                _context47.next = 2;
                return this.appUtils.encrypt({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  data: JSON.stringify(e)
                });
              case 2:
                _yield$this$appUtils$3 = _context47.sent;
                t = _yield$this$appUtils$3.data;
                n = _yield$this$appUtils$3.key;
                s = {
                  secretType: this.secretType,
                  encryptKeyId: n
                };
                return _context47.abrupt("return", this.secretType === Pt ? {
                  content: e,
                  _uniCloudOptions: s
                } : {
                  content: t,
                  _uniCloudOptions: s
                });
              case 7:
              case "end":
                return _context47.stop();
            }
          }
        }, _callee47, this);
      }));
      function platformEncryptData(_x35) {
        return _platformEncryptData2.apply(this, arguments);
      }
      return platformEncryptData;
    }()
  }, {
    key: "platformDecryptResult",
    value: function () {
      var _platformDecryptResult2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee48(e) {
        var t, _e$_uniCloudOptions, n, s, r;
        return _regenerator.default.wrap(function _callee48$(_context48) {
          while (1) {
            switch (_context48.prev = _context48.next) {
              case 0:
                t = e.content;
                _e$_uniCloudOptions = e._uniCloudOptions;
                n = _e$_uniCloudOptions === void 0 ? {} : _e$_uniCloudOptions;
                s = n.encryptKeyId;
                _context48.next = 6;
                return this.appUtils.decrypt({
                  provider: this.provider,
                  spaceId: this.spaceId,
                  data: t,
                  key: s
                });
              case 6:
                r = _context48.sent;
                return _context48.abrupt("return", JSON.parse(r.data));
              case 8:
              case "end":
                return _context48.stop();
            }
          }
        }, _callee48, this);
      }));
      function platformDecryptResult(_x36) {
        return _platformDecryptResult2.apply(this, arguments);
      }
      return platformDecryptResult;
    }()
  }]);
  return kn;
}(Ot);
function In() {
  var _ref30 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref30.secretType;
  return e === Ct || e === Pt || e === Et;
}
function bn() {
  var _ref31 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref31.name,
    _ref31$data = _ref31.data,
    t = _ref31$data === void 0 ? {} : _ref31$data;
  return "app" === S && "DCloud-clientDB" === e && "encryption" === t.redirectTo && "getAppClientKey" === t.action;
}
function Tn() {
  var _ref32 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref32.provider,
    t = _ref32.spaceId,
    n = _ref32.functionName;
  var _re = re(),
    s = _re.appId,
    r = _re.uniPlatform,
    i = _re.osName;
  var o = r;
  "app" === r && (o = i);
  var a = function () {
    var _ref33 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      e = _ref33.provider,
      t = _ref33.spaceId;
    var n = v;
    if (!n) return {};
    e = function (e) {
      return "tencent" === e ? "tcb" : e;
    }(e);
    var s = n.find(function (n) {
      return n.provider === e && n.spaceId === t;
    });
    return s && s.config;
  }({
    provider: e,
    spaceId: t
  });
  if (!a || !a.accessControl || !a.accessControl.enable) return !1;
  var c = a.accessControl.function || {},
    u = Object.keys(c);
  if (0 === u.length) return !0;
  var l = function (e, t) {
    var n, s, r;
    for (var _i2 = 0; _i2 < e.length; _i2++) {
      var _o2 = e[_i2];
      _o2 !== t ? "*" !== _o2 ? _o2.split(",").map(function (e) {
        return e.trim();
      }).indexOf(t) > -1 && (s = _o2) : r = _o2 : n = _o2;
    }
    return n || s || r;
  }(u, n);
  if (!l) return !1;
  if ((c[l] || []).find(function () {
    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    return e.appId === s && (e.platform || "").toLowerCase() === o.toLowerCase();
  })) return !0;
  throw console.error("\u6B64\u5E94\u7528[appId: ".concat(s, ", platform: ").concat(o, "]\u4E0D\u5728\u4E91\u7AEF\u914D\u7F6E\u7684\u5141\u8BB8\u8BBF\u95EE\u7684\u5E94\u7528\u5217\u8868\u5185\uFF0C\u53C2\u8003\uFF1Ahttps://uniapp.dcloud.net.cn/uniCloud/secure-network.html#verify-client")), mn(fn);
}
function An(_ref34) {
  var e = _ref34.functionName,
    t = _ref34.result,
    n = _ref34.logPvd;
  if (this.__dev__.debugLog && t && t.requestId) {
    var _s11 = JSON.stringify({
      spaceId: this.config.spaceId,
      functionName: e,
      requestId: t.requestId
    });
    console.log("[".concat(n, "-request]").concat(_s11, "[/").concat(n, "-request]"));
  }
}
function Cn(e) {
  var t = e.callFunction,
    n = function n(_n7) {
      var _this19 = this;
      var s = _n7.name;
      _n7.data = vt.call(e, {
        data: _n7.data
      });
      var r = {
          aliyun: "aliyun",
          tencent: "tcb",
          tcb: "tcb"
        }[this.config.provider],
        i = In(_n7),
        o = bn(_n7),
        a = i || o;
      return t.call(this, _n7).then(function (e) {
        return e.errCode = 0, !a && An.call(_this19, {
          functionName: s,
          result: e,
          logPvd: r
        }), Promise.resolve(e);
      }, function (e) {
        return !a && An.call(_this19, {
          functionName: s,
          result: e,
          logPvd: r
        }), e && e.message && (e.message = function () {
          var _ref35 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref35$message = _ref35.message,
            e = _ref35$message === void 0 ? "" : _ref35$message,
            _ref35$extraInfo = _ref35.extraInfo,
            t = _ref35$extraInfo === void 0 ? {} : _ref35$extraInfo,
            _ref35$formatter = _ref35.formatter,
            n = _ref35$formatter === void 0 ? [] : _ref35$formatter;
          for (var _s12 = 0; _s12 < n.length; _s12++) {
            var _n$_s = n[_s12],
              _r3 = _n$_s.rule,
              _i3 = _n$_s.content,
              _o3 = _n$_s.mode,
              _a = e.match(_r3);
            if (!_a) continue;
            var _c = _i3;
            for (var _e23 = 1; _e23 < _a.length; _e23++) {
              _c = Tt(_c, "{$".concat(_e23, "}"), _a[_e23]);
            }
            for (var _e24 in t) {
              _c = Tt(_c, "{".concat(_e24, "}"), t[_e24]);
            }
            return "replace" === _o3 ? _c : e + _c;
          }
          return e;
        }({
          message: "[".concat(_n7.name, "]: ").concat(e.message),
          formatter: kt,
          extraInfo: {
            functionName: s
          }
        })), Promise.reject(e);
      });
    };
  e.callFunction = function (t) {
    var _e$config = e.config,
      s = _e$config.provider,
      r = _e$config.spaceId,
      i = t.name;
    var o, a;
    if (t.data = t.data || {}, y && e.__dev__.debugInfo && !e.__dev__.debugInfo.forceRemote && I ? (e._callCloudFunction || (e._callCloudFunction = n, e._callLocalFunction = St), o = St) : o = n, o = o.bind(e), bn(t)) a = n.call(e, t);else if (function (_ref36) {
      var e = _ref36.name,
        _ref36$data = _ref36.data,
        t = _ref36$data === void 0 ? {} : _ref36$data;
      return "mp-weixin" === S && "uni-id-co" === e && "secureNetworkHandshakeByWeixin" === t.method;
    }(t)) a = o.call(e, t);else if (In(t)) {
      a = new _n({
        secretType: t.secretType,
        uniCloudIns: e
      }).wrapEncryptDataCallFunction(n.bind(e))(t);
    } else if (Tn({
      provider: s,
      spaceId: r,
      functionName: i
    })) {
      a = new _n({
        secretType: t.secretType,
        uniCloudIns: e
      }).wrapVerifyClientCallFunction(n.bind(e))(t);
    } else a = o(t);
    return Object.defineProperty(a, "result", {
      get: function get() {
        return console.warn("当前返回结果为Promise类型，不可直接访问其result属性，详情请参考：https://uniapp.dcloud.net.cn/uniCloud/faq?id=promise"), {};
      }
    }), a;
  };
}
_n = "mp-weixin" !== S && "app" !== S ? /*#__PURE__*/function () {
  function _class2() {
    (0, _classCallCheck2.default)(this, _class2);
    throw mn({
      message: "Platform ".concat(S, " is not supported by secure network")
    });
  }
  return (0, _createClass2.default)(_class2);
}() : w ? "mp-weixin" === S ? vn : kn : /*#__PURE__*/function () {
  function _class3() {
    (0, _classCallCheck2.default)(this, _class3);
    throw mn({
      message: "Platform ".concat(S, " is not enabled, please check whether secure network module is enabled in your manifest.json")
    });
  }
  return (0, _createClass2.default)(_class3);
}();
var Pn = Symbol("CLIENT_DB_INTERNAL");
function En(e, t) {
  return e.then = "DoNotReturnProxyWithAFunctionNamedThen", e._internalType = Pn, e.inspect = null, e.__ob__ = void 0, new Proxy(e, {
    get: function get(e, n, s) {
      if ("_uniClient" === n) return null;
      if ("symbol" == (0, _typeof2.default)(n)) return e[n];
      if (n in e || "string" != typeof n) {
        var _t10 = e[n];
        return "function" == typeof _t10 ? _t10.bind(e) : _t10;
      }
      return t.get(e, n, s);
    }
  });
}
function On(e) {
  return {
    on: function on(t, n) {
      e[t] = e[t] || [], e[t].indexOf(n) > -1 || e[t].push(n);
    },
    off: function off(t, n) {
      e[t] = e[t] || [];
      var s = e[t].indexOf(n);
      -1 !== s && e[t].splice(s, 1);
    }
  };
}
var xn = ["db.Geo", "db.command", "command.aggregate"];
function Un(e, t) {
  return xn.indexOf("".concat(e, ".").concat(t)) > -1;
}
function Rn(e) {
  switch (d(e)) {
    case "array":
      return e.map(function (e) {
        return Rn(e);
      });
    case "object":
      return e._internalType === Pn || Object.keys(e).forEach(function (t) {
        e[t] = Rn(e[t]);
      }), e;
    case "regexp":
      return {
        $regexp: {
          source: e.source,
          flags: e.flags
        }
      };
    case "date":
      return {
        $date: e.toISOString()
      };
    default:
      return e;
  }
}
function Ln(e) {
  return e && e.content && e.content.$method;
}
var Nn = /*#__PURE__*/function () {
  function Nn(e, t, n) {
    (0, _classCallCheck2.default)(this, Nn);
    this.content = e, this.prevStage = t || null, this.udb = null, this._database = n;
  }
  (0, _createClass2.default)(Nn, [{
    key: "toJSON",
    value: function toJSON() {
      var e = this;
      var t = [e.content];
      for (; e.prevStage;) {
        e = e.prevStage, t.push(e.content);
      }
      return {
        $db: t.reverse().map(function (e) {
          return {
            $method: e.$method,
            $param: Rn(e.$param)
          };
        })
      };
    }
  }, {
    key: "getAction",
    value: function getAction() {
      var e = this.toJSON().$db.find(function (e) {
        return "action" === e.$method;
      });
      return e && e.$param && e.$param[0];
    }
  }, {
    key: "getCommand",
    value: function getCommand() {
      return {
        $db: this.toJSON().$db.filter(function (e) {
          return "action" !== e.$method;
        })
      };
    }
  }, {
    key: "isAggregate",
    get: function get() {
      var e = this;
      for (; e;) {
        var t = Ln(e),
          _n8 = Ln(e.prevStage);
        if ("aggregate" === t && "collection" === _n8 || "pipeline" === t) return !0;
        e = e.prevStage;
      }
      return !1;
    }
  }, {
    key: "isCommand",
    get: function get() {
      var e = this;
      for (; e;) {
        if ("command" === Ln(e)) return !0;
        e = e.prevStage;
      }
      return !1;
    }
  }, {
    key: "isAggregateCommand",
    get: function get() {
      var e = this;
      for (; e;) {
        var t = Ln(e),
          _n9 = Ln(e.prevStage);
        if ("aggregate" === t && "command" === _n9) return !0;
        e = e.prevStage;
      }
      return !1;
    }
  }, {
    key: "getNextStageFn",
    value: function getNextStageFn(e) {
      var t = this;
      return function () {
        return Dn({
          $method: e,
          $param: Rn(Array.from(arguments))
        }, t, t._database);
      };
    }
  }, {
    key: "count",
    get: function get() {
      return this.isAggregate ? this.getNextStageFn("count") : function () {
        return this._send("count", Array.from(arguments));
      };
    }
  }, {
    key: "remove",
    get: function get() {
      return this.isCommand ? this.getNextStageFn("remove") : function () {
        return this._send("remove", Array.from(arguments));
      };
    }
  }, {
    key: "get",
    value: function get() {
      return this._send("get", Array.from(arguments));
    }
  }, {
    key: "add",
    get: function get() {
      return this.isCommand ? this.getNextStageFn("add") : function () {
        return this._send("add", Array.from(arguments));
      };
    }
  }, {
    key: "update",
    value: function update() {
      return this._send("update", Array.from(arguments));
    }
  }, {
    key: "end",
    value: function end() {
      return this._send("end", Array.from(arguments));
    }
  }, {
    key: "set",
    get: function get() {
      return this.isCommand ? this.getNextStageFn("set") : function () {
        throw new Error("JQL禁止使用set方法");
      };
    }
  }, {
    key: "_send",
    value: function _send(e, t) {
      var n = this.getAction(),
        s = this.getCommand();
      if (s.$db.push({
        $method: e,
        $param: Rn(t)
      }), y) {
        var _e25 = s.$db.find(function (e) {
            return "collection" === e.$method;
          }),
          _t11 = _e25 && _e25.$param;
        _t11 && 1 === _t11.length && "string" == typeof _e25.$param[0] && _e25.$param[0].indexOf(",") > -1 && console.warn("检测到使用JQL语法联表查询时，未使用getTemp先过滤主表数据，在主表数据量大的情况下可能会查询缓慢。\n- 如何优化请参考此文档：https://uniapp.dcloud.net.cn/uniCloud/jql?id=lookup-with-temp \n- 如果主表数据量很小请忽略此信息，项目发行时不会出现此提示。");
      }
      return this._database._callCloudFunction({
        action: n,
        command: s
      });
    }
  }]);
  return Nn;
}();
function Dn(e, t, n) {
  return En(new Nn(e, t, n), {
    get: function get(e, t) {
      var s = "db";
      return e && e.content && (s = e.content.$method), Un(s, t) ? Dn({
        $method: t
      }, e, n) : function () {
        return Dn({
          $method: t,
          $param: Rn(Array.from(arguments))
        }, e, n);
      };
    }
  });
}
function Fn(_ref37) {
  var e = _ref37.path,
    t = _ref37.method;
  return /*#__PURE__*/function () {
    function _class4() {
      (0, _classCallCheck2.default)(this, _class4);
      this.param = Array.from(arguments);
    }
    (0, _createClass2.default)(_class4, [{
      key: "toJSON",
      value: function toJSON() {
        return {
          $newDb: [].concat((0, _toConsumableArray2.default)(e.map(function (e) {
            return {
              $method: e
            };
          })), [{
            $method: t,
            $param: this.param
          }])
        };
      }
    }]);
    return _class4;
  }();
}
function qn(e) {
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return En(new e(t), {
    get: function get(e, t) {
      return Un("db", t) ? Dn({
        $method: t
      }, null, e) : function () {
        return Dn({
          $method: t,
          $param: Rn(Array.from(arguments))
        }, null, e);
      };
    }
  });
}
var Kn = /*#__PURE__*/function (_ref38) {
  (0, _inherits2.default)(Kn, _ref38);
  var _super11 = _createSuper(Kn);
  function Kn() {
    (0, _classCallCheck2.default)(this, Kn);
    return _super11.apply(this, arguments);
  }
  (0, _createClass2.default)(Kn, [{
    key: "_parseResult",
    value: function _parseResult(e) {
      return this._isJQL ? e.result : e;
    }
  }, {
    key: "_callCloudFunction",
    value: function _callCloudFunction(_ref39) {
      var _this20 = this;
      var e = _ref39.action,
        t = _ref39.command,
        n = _ref39.multiCommand,
        s = _ref39.queryList;
      function r(e, t) {
        if (n && s) for (var _n10 = 0; _n10 < s.length; _n10++) {
          var _r4 = s[_n10];
          _r4.udb && "function" == typeof _r4.udb.setResult && (t ? _r4.udb.setResult(t) : _r4.udb.setResult(e.result.dataList[_n10]));
        }
      }
      var i = this,
        o = this._isJQL ? "databaseForJQL" : "database";
      function a(e) {
        return i._callback("error", [e]), U(R(o, "fail"), e).then(function () {
          return U(R(o, "complete"), e);
        }).then(function () {
          return r(null, e), z(D, {
            type: K,
            content: e
          }), Promise.reject(e);
        });
      }
      var c = U(R(o, "invoke")),
        u = this._uniClient;
      return c.then(function () {
        return u.callFunction({
          name: "DCloud-clientDB",
          type: h,
          data: {
            action: e,
            command: t,
            multiCommand: n
          }
        });
      }).then(function (e) {
        var _e$result = e.result,
          t = _e$result.code,
          n = _e$result.message,
          s = _e$result.token,
          c = _e$result.tokenExpired,
          _e$result$systemInfo = _e$result.systemInfo,
          u = _e$result$systemInfo === void 0 ? [] : _e$result$systemInfo;
        if (u) for (var _e26 = 0; _e26 < u.length; _e26++) {
          var _u$_e = u[_e26],
            _t12 = _u$_e.level,
            _n11 = _u$_e.message,
            _s13 = _u$_e.detail,
            _r5 = console["app" === S && "warn" === _t12 ? "error" : _t12] || console.log;
          var _i4 = "[System Info]" + _n11;
          _s13 && (_i4 = "".concat(_i4, "\n\u8BE6\u7EC6\u4FE1\u606F\uFF1A").concat(_s13)), _r5(_i4);
        }
        if (t) {
          return a(new Q({
            code: t,
            message: n,
            requestId: e.requestId
          }));
        }
        e.result.errCode = e.result.errCode || e.result.code, e.result.errMsg = e.result.errMsg || e.result.message, s && c && (ee({
          token: s,
          tokenExpired: c
        }), _this20._callbackAuth("refreshToken", [{
          token: s,
          tokenExpired: c
        }]), _this20._callback("refreshToken", [{
          token: s,
          tokenExpired: c
        }]), z(q, {
          token: s,
          tokenExpired: c
        }));
        var l = [{
          prop: "affectedDocs",
          tips: "affectedDocs不再推荐使用，请使用inserted/deleted/updated/data.length替代"
        }, {
          prop: "code",
          tips: "code不再推荐使用，请使用errCode替代"
        }, {
          prop: "message",
          tips: "message不再推荐使用，请使用errMsg替代"
        }];
        var _loop2 = function _loop2(_t13) {
          var _l$_t = l[_t13],
            n = _l$_t.prop,
            s = _l$_t.tips;
          if (n in e.result) {
            var _t14 = e.result[n];
            Object.defineProperty(e.result, n, {
              get: function get() {
                return console.warn(s), _t14;
              }
            });
          }
        };
        for (var _t13 = 0; _t13 < l.length; _t13++) {
          _loop2(_t13);
        }
        return function (e) {
          return U(R(o, "success"), e).then(function () {
            return U(R(o, "complete"), e);
          }).then(function () {
            r(e, null);
            var t = i._parseResult(e);
            return z(D, {
              type: K,
              content: t
            }), Promise.resolve(t);
          });
        }(e);
      }, function (e) {
        /fc_function_not_found|FUNCTION_NOT_FOUND/g.test(e.message) && console.warn("clientDB未初始化，请在web控制台保存一次schema以开启clientDB");
        return a(new Q({
          code: e.code || "SYSTEM_ERROR",
          message: e.message,
          requestId: e.requestId
        }));
      });
    }
  }]);
  return Kn;
}( /*#__PURE__*/function () {
  function _class5() {
    var _ref40 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref40$uniClient = _ref40.uniClient,
      e = _ref40$uniClient === void 0 ? {} : _ref40$uniClient,
      _ref40$isJQL = _ref40.isJQL,
      t = _ref40$isJQL === void 0 ? !1 : _ref40$isJQL;
    (0, _classCallCheck2.default)(this, _class5);
    this._uniClient = e, this._authCallBacks = {}, this._dbCallBacks = {}, e.isDefault && (this._dbCallBacks = C("_globalUniCloudDatabaseCallback")), t || (this.auth = On(this._authCallBacks)), this._isJQL = t, Object.assign(this, On(this._dbCallBacks)), this.env = En({}, {
      get: function get(e, t) {
        return {
          $env: t
        };
      }
    }), this.Geo = En({}, {
      get: function get(e, t) {
        return Fn({
          path: ["Geo"],
          method: t
        });
      }
    }), this.serverDate = Fn({
      path: [],
      method: "serverDate"
    }), this.RegExp = Fn({
      path: [],
      method: "RegExp"
    });
  }
  (0, _createClass2.default)(_class5, [{
    key: "getCloudEnv",
    value: function getCloudEnv(e) {
      if ("string" != typeof e || !e.trim()) throw new Error("getCloudEnv参数错误");
      return {
        $env: e.replace("$cloudEnv_", "")
      };
    }
  }, {
    key: "_callback",
    value: function _callback(e, t) {
      var n = this._dbCallBacks;
      n[e] && n[e].forEach(function (e) {
        e.apply(void 0, (0, _toConsumableArray2.default)(t));
      });
    }
  }, {
    key: "_callbackAuth",
    value: function _callbackAuth(e, t) {
      var n = this._authCallBacks;
      n[e] && n[e].forEach(function (e) {
        e.apply(void 0, (0, _toConsumableArray2.default)(t));
      });
    }
  }, {
    key: "multiSend",
    value: function multiSend() {
      var e = Array.from(arguments),
        t = e.map(function (e) {
          var t = e.getAction(),
            n = e.getCommand();
          if ("getTemp" !== n.$db[n.$db.length - 1].$method) throw new Error("multiSend只支持子命令内使用getTemp");
          return {
            action: t,
            command: n
          };
        });
      return this._callCloudFunction({
        multiCommand: t,
        queryList: e
      });
    }
  }]);
  return _class5;
}());
var Mn = "token无效，跳转登录页面",
  jn = "token过期，跳转登录页面",
  Bn = {
    TOKEN_INVALID_TOKEN_EXPIRED: jn,
    TOKEN_INVALID_INVALID_CLIENTID: Mn,
    TOKEN_INVALID: Mn,
    TOKEN_INVALID_WRONG_TOKEN: Mn,
    TOKEN_INVALID_ANONYMOUS_USER: Mn
  },
  $n = {
    "uni-id-token-expired": jn,
    "uni-id-check-token-failed": Mn,
    "uni-id-token-not-exist": Mn,
    "uni-id-check-device-feature-failed": Mn
  };
function Wn(e, t) {
  var n = "";
  return n = e ? "".concat(e, "/").concat(t) : t, n.replace(/^\//, "");
}
function zn() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
  var n = [],
    s = [];
  return e.forEach(function (e) {
    !0 === e.needLogin ? n.push(Wn(t, e.path)) : !1 === e.needLogin && s.push(Wn(t, e.path));
  }), {
    needLoginPage: n,
    notNeedLoginPage: s
  };
}
function Jn(e) {
  return e.split("?")[0].replace(/^\//, "");
}
function Hn() {
  return function (e) {
    var t = e && e.$page && e.$page.fullPath || "";
    return t ? ("/" !== t.charAt(0) && (t = "/" + t), t) : t;
  }(function () {
    var e = getCurrentPages();
    return e[e.length - 1];
  }());
}
function Gn() {
  return Jn(Hn());
}
function Vn() {
  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!e) return !1;
  if (!(t && t.list && t.list.length)) return !1;
  var n = t.list,
    s = Jn(e);
  return n.some(function (e) {
    return e.pagePath === s;
  });
}
var Yn = !!_pages.default.uniIdRouter;
var _ref41 = function () {
    var _ref24 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pages.default,
      _ref24$pages = _ref24.pages,
      e = _ref24$pages === void 0 ? [] : _ref24$pages,
      _ref24$subPackages = _ref24.subPackages,
      n = _ref24$subPackages === void 0 ? [] : _ref24$subPackages,
      _ref24$uniIdRouter = _ref24.uniIdRouter,
      s = _ref24$uniIdRouter === void 0 ? {} : _ref24$uniIdRouter,
      _ref24$tabBar = _ref24.tabBar,
      r = _ref24$tabBar === void 0 ? {} : _ref24$tabBar;
    var i = s.loginPage,
      _s$needLogin = s.needLogin,
      o = _s$needLogin === void 0 ? [] : _s$needLogin,
      _s$resToLogin = s.resToLogin,
      a = _s$resToLogin === void 0 ? !0 : _s$resToLogin,
      _zn = zn(e),
      c = _zn.needLoginPage,
      u = _zn.notNeedLoginPage,
      _ref26 = function () {
        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
        var t = [],
          n = [];
        return e.forEach(function (e) {
          var s = e.root,
            _e$pages = e.pages,
            r = _e$pages === void 0 ? [] : _e$pages,
            _zn2 = zn(r, s),
            i = _zn2.needLoginPage,
            o = _zn2.notNeedLoginPage;
          t.push.apply(t, (0, _toConsumableArray2.default)(i)), n.push.apply(n, (0, _toConsumableArray2.default)(o));
        }), {
          needLoginPage: t,
          notNeedLoginPage: n
        };
      }(n),
      l = _ref26.needLoginPage,
      h = _ref26.notNeedLoginPage;
    return {
      loginPage: i,
      routerNeedLogin: o,
      resToLogin: a,
      needLoginPage: [].concat((0, _toConsumableArray2.default)(c), (0, _toConsumableArray2.default)(l)),
      notNeedLoginPage: [].concat((0, _toConsumableArray2.default)(u), (0, _toConsumableArray2.default)(h)),
      loginPageInTabBar: Vn(i, r)
    };
  }(),
  Qn = _ref41.loginPage,
  Xn = _ref41.routerNeedLogin,
  Zn = _ref41.resToLogin,
  es = _ref41.needLoginPage,
  ts = _ref41.notNeedLoginPage,
  ns = _ref41.loginPageInTabBar;
if (es.indexOf(Qn) > -1) throw new Error("Login page [".concat(Qn, "] should not be \"needLogin\", please check your pages.json"));
function ss(e) {
  var t = Gn();
  if ("/" === e.charAt(0)) return e;
  var _e$split = e.split("?"),
    _e$split2 = (0, _slicedToArray2.default)(_e$split, 2),
    n = _e$split2[0],
    s = _e$split2[1],
    r = n.replace(/^\//, "").split("/"),
    i = t.split("/");
  i.pop();
  for (var _e27 = 0; _e27 < r.length; _e27++) {
    var _t15 = r[_e27];
    ".." === _t15 ? i.pop() : "." !== _t15 && i.push(_t15);
  }
  return "" === i[0] && i.shift(), "/" + i.join("/") + (s ? "?" + s : "");
}
function rs(e) {
  var t = Jn(ss(e));
  return !(ts.indexOf(t) > -1) && (es.indexOf(t) > -1 || Xn.some(function (t) {
    return function (e, t) {
      return new RegExp(t).test(e);
    }(e, t);
  }));
}
function is(_ref42) {
  var e = _ref42.redirect;
  var t = Jn(e),
    n = Jn(Qn);
  return Gn() !== n && t !== n;
}
function os() {
  var _ref43 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref43.api,
    t = _ref43.redirect;
  if (!t || !is({
    redirect: t
  })) return;
  var n = function (e, t) {
    return "/" !== e.charAt(0) && (e = "/" + e), t ? e.indexOf("?") > -1 ? e + "&uniIdRedirectUrl=".concat(encodeURIComponent(t)) : e + "?uniIdRedirectUrl=".concat(encodeURIComponent(t)) : e;
  }(Qn, t);
  ns ? "navigateTo" !== e && "redirectTo" !== e || (e = "switchTab") : "switchTab" === e && (e = "navigateTo");
  var s = {
    navigateTo: uni.navigateTo,
    redirectTo: uni.redirectTo,
    switchTab: uni.switchTab,
    reLaunch: uni.reLaunch
  };
  setTimeout(function () {
    s[e]({
      url: n
    });
  });
}
function as() {
  var _ref44 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    e = _ref44.url;
  var t = {
      abortLoginPageJump: !1,
      autoToLoginPage: !1
    },
    n = function () {
      var _Z3 = Z(),
        e = _Z3.token,
        t = _Z3.tokenExpired;
      var n;
      if (e) {
        if (t < Date.now()) {
          var _e28 = "uni-id-token-expired";
          n = {
            errCode: _e28,
            errMsg: $n[_e28]
          };
        }
      } else {
        var _e29 = "uni-id-check-token-failed";
        n = {
          errCode: _e29,
          errMsg: $n[_e29]
        };
      }
      return n;
    }();
  if (rs(e) && n) {
    n.uniIdRedirectUrl = e;
    if (B(F).length > 0) return setTimeout(function () {
      z(F, n);
    }, 0), t.abortLoginPageJump = !0, t;
    t.autoToLoginPage = !0;
  }
  return t;
}
function cs() {
  !function () {
    var e = Hn(),
      _as = as({
        url: e
      }),
      t = _as.abortLoginPageJump,
      n = _as.autoToLoginPage;
    t || n && os({
      api: "redirectTo",
      redirect: e
    });
  }();
  var e = ["navigateTo", "redirectTo", "reLaunch", "switchTab"];
  var _loop3 = function _loop3(_t16) {
    var n = e[_t16];
    uni.addInterceptor(n, {
      invoke: function invoke(e) {
        var _as2 = as({
            url: e.url
          }),
          t = _as2.abortLoginPageJump,
          s = _as2.autoToLoginPage;
        return t ? e : s ? (os({
          api: n,
          redirect: ss(e.url)
        }), !1) : e;
      }
    });
  };
  for (var _t16 = 0; _t16 < e.length; _t16++) {
    _loop3(_t16);
  }
}
function us() {
  this.onResponse(function (e) {
    var t = e.type,
      n = e.content;
    var s = !1;
    switch (t) {
      case "cloudobject":
        s = function (e) {
          var t = e.errCode;
          return t in $n;
        }(n);
        break;
      case "clientdb":
        s = function (e) {
          var t = e.errCode;
          return t in Bn;
        }(n);
    }
    s && function () {
      var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var t = B(F);
      G().then(function () {
        var n = Hn();
        if (n && is({
          redirect: n
        })) return t.length > 0 ? z(F, Object.assign({
          uniIdRedirectUrl: n
        }, e)) : void (Qn && os({
          api: "navigateTo",
          redirect: n
        }));
      });
    }(n);
  });
}
function ls(e) {
  !function (e) {
    e.onResponse = function (e) {
      $(D, e);
    }, e.offResponse = function (e) {
      W(D, e);
    };
  }(e), function (e) {
    e.onNeedLogin = function (e) {
      $(F, e);
    }, e.offNeedLogin = function (e) {
      W(F, e);
    }, Yn && (C("_globalUniCloudStatus").needLoginInit || (C("_globalUniCloudStatus").needLoginInit = !0, G().then(function () {
      cs.call(e);
    }), Zn && us.call(e)));
  }(e), function (e) {
    e.onRefreshToken = function (e) {
      $(q, e);
    }, e.offRefreshToken = function (e) {
      W(q, e);
    };
  }(e);
}
var hs;
var ds = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  fs = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
function ps() {
  var e = Z().token || "",
    t = e.split(".");
  if (!e || 3 !== t.length) return {
    uid: null,
    role: [],
    permission: [],
    tokenExpired: 0
  };
  var n;
  try {
    n = JSON.parse((s = t[1], decodeURIComponent(hs(s).split("").map(function (e) {
      return "%" + ("00" + e.charCodeAt(0).toString(16)).slice(-2);
    }).join(""))));
  } catch (e) {
    throw new Error("获取当前用户信息出错，详细错误信息为：" + e.message);
  }
  var s;
  return n.tokenExpired = 1e3 * n.exp, delete n.exp, delete n.iat, n;
}
hs = "function" != typeof atob ? function (e) {
  if (e = String(e).replace(/[\t\n\f\r ]+/g, ""), !fs.test(e)) throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
  var t;
  e += "==".slice(2 - (3 & e.length));
  for (var n, s, r = "", i = 0; i < e.length;) {
    t = ds.indexOf(e.charAt(i++)) << 18 | ds.indexOf(e.charAt(i++)) << 12 | (n = ds.indexOf(e.charAt(i++))) << 6 | (s = ds.indexOf(e.charAt(i++))), r += 64 === n ? String.fromCharCode(t >> 16 & 255) : 64 === s ? String.fromCharCode(t >> 16 & 255, t >> 8 & 255) : String.fromCharCode(t >> 16 & 255, t >> 8 & 255, 255 & t);
  }
  return r;
} : atob;
var gs = s(function (e, t) {
    Object.defineProperty(t, "__esModule", {
      value: !0
    });
    var n = "chooseAndUploadFile:ok",
      s = "chooseAndUploadFile:fail";
    function r(e, t) {
      return e.tempFiles.forEach(function (e, n) {
        e.name || (e.name = e.path.substring(e.path.lastIndexOf("/") + 1)), t && (e.fileType = t), e.cloudPath = Date.now() + "_" + n + e.name.substring(e.name.lastIndexOf("."));
      }), e.tempFilePaths || (e.tempFilePaths = e.tempFiles.map(function (e) {
        return e.path;
      })), e;
    }
    function i(e, t, _ref45) {
      var s = _ref45.onChooseFile,
        r = _ref45.onUploadProgress;
      return t.then(function (e) {
        if (s) {
          var _t17 = s(e);
          if (void 0 !== _t17) return Promise.resolve(_t17).then(function (t) {
            return void 0 === t ? e : t;
          });
        }
        return e;
      }).then(function (t) {
        return !1 === t ? {
          errMsg: n,
          tempFilePaths: [],
          tempFiles: []
        } : function (e, t) {
          var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 5;
          var r = arguments.length > 3 ? arguments[3] : undefined;
          (t = Object.assign({}, t)).errMsg = n;
          var i = t.tempFiles,
            o = i.length;
          var a = 0;
          return new Promise(function (n) {
            for (; a < s;) {
              c();
            }
            function c() {
              var s = a++;
              if (s >= o) return void (!i.find(function (e) {
                return !e.url && !e.errMsg;
              }) && n(t));
              var u = i[s];
              e.uploadFile({
                filePath: u.path,
                cloudPath: u.cloudPath,
                fileType: u.fileType,
                onUploadProgress: function onUploadProgress(e) {
                  e.index = s, e.tempFile = u, e.tempFilePath = u.path, r && r(e);
                }
              }).then(function (e) {
                u.url = e.fileID, s < o && c();
              }).catch(function (e) {
                u.errMsg = e.errMsg || e.message, s < o && c();
              });
            }
          });
        }(e, t, 5, r);
      });
    }
    t.initChooseAndUploadFile = function (e) {
      return function () {
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
          type: "all"
        };
        return "image" === t.type ? i(e, function (e) {
          var t = e.count,
            n = e.sizeType,
            _e$sourceType = e.sourceType,
            i = _e$sourceType === void 0 ? ["album", "camera"] : _e$sourceType,
            o = e.extension;
          return new Promise(function (e, a) {
            uni.chooseImage({
              count: t,
              sizeType: n,
              sourceType: i,
              extension: o,
              success: function success(t) {
                e(r(t, "image"));
              },
              fail: function fail(e) {
                a({
                  errMsg: e.errMsg.replace("chooseImage:fail", s)
                });
              }
            });
          });
        }(t), t) : "video" === t.type ? i(e, function (e) {
          var t = e.camera,
            n = e.compressed,
            i = e.maxDuration,
            _e$sourceType2 = e.sourceType,
            o = _e$sourceType2 === void 0 ? ["album", "camera"] : _e$sourceType2,
            a = e.extension;
          return new Promise(function (e, c) {
            uni.chooseVideo({
              camera: t,
              compressed: n,
              maxDuration: i,
              sourceType: o,
              extension: a,
              success: function success(t) {
                var n = t.tempFilePath,
                  s = t.duration,
                  i = t.size,
                  o = t.height,
                  a = t.width;
                e(r({
                  errMsg: "chooseVideo:ok",
                  tempFilePaths: [n],
                  tempFiles: [{
                    name: t.tempFile && t.tempFile.name || "",
                    path: n,
                    size: i,
                    type: t.tempFile && t.tempFile.type || "",
                    width: a,
                    height: o,
                    duration: s,
                    fileType: "video",
                    cloudPath: ""
                  }]
                }, "video"));
              },
              fail: function fail(e) {
                c({
                  errMsg: e.errMsg.replace("chooseVideo:fail", s)
                });
              }
            });
          });
        }(t), t) : i(e, function (e) {
          var t = e.count,
            n = e.extension;
          return new Promise(function (e, i) {
            var o = uni.chooseFile;
            if ("undefined" != typeof wx && "function" == typeof wx.chooseMessageFile && (o = wx.chooseMessageFile), "function" != typeof o) return i({
              errMsg: s + " 请指定 type 类型，该平台仅支持选择 image 或 video。"
            });
            o({
              type: "all",
              count: t,
              extension: n,
              success: function success(t) {
                e(r(t));
              },
              fail: function fail(e) {
                i({
                  errMsg: e.errMsg.replace("chooseFile:fail", s)
                });
              }
            });
          });
        }(t), t);
      };
    };
  }),
  ms = n(gs);
var ys = "manual";
function _s(e) {
  return {
    props: {
      localdata: {
        type: Array,
        default: function _default() {
          return [];
        }
      },
      options: {
        type: [Object, Array],
        default: function _default() {
          return {};
        }
      },
      spaceInfo: {
        type: Object,
        default: function _default() {
          return {};
        }
      },
      collection: {
        type: [String, Array],
        default: ""
      },
      action: {
        type: String,
        default: ""
      },
      field: {
        type: String,
        default: ""
      },
      orderby: {
        type: String,
        default: ""
      },
      where: {
        type: [String, Object],
        default: ""
      },
      pageData: {
        type: String,
        default: "add"
      },
      pageCurrent: {
        type: Number,
        default: 1
      },
      pageSize: {
        type: Number,
        default: 20
      },
      getcount: {
        type: [Boolean, String],
        default: !1
      },
      gettree: {
        type: [Boolean, String],
        default: !1
      },
      gettreepath: {
        type: [Boolean, String],
        default: !1
      },
      startwith: {
        type: String,
        default: ""
      },
      limitlevel: {
        type: Number,
        default: 10
      },
      groupby: {
        type: String,
        default: ""
      },
      groupField: {
        type: String,
        default: ""
      },
      distinct: {
        type: [Boolean, String],
        default: !1
      },
      foreignKey: {
        type: String,
        default: ""
      },
      loadtime: {
        type: String,
        default: "auto"
      },
      manual: {
        type: Boolean,
        default: !1
      }
    },
    data: function data() {
      return {
        mixinDatacomLoading: !1,
        mixinDatacomHasMore: !1,
        mixinDatacomResData: [],
        mixinDatacomErrorMessage: "",
        mixinDatacomPage: {}
      };
    },
    created: function created() {
      var _this21 = this;
      this.mixinDatacomPage = {
        current: this.pageCurrent,
        size: this.pageSize,
        count: 0
      }, this.$watch(function () {
        var e = [];
        return ["pageCurrent", "pageSize", "localdata", "collection", "action", "field", "orderby", "where", "getont", "getcount", "gettree", "groupby", "groupField", "distinct"].forEach(function (t) {
          e.push(_this21[t]);
        }), e;
      }, function (e, t) {
        if (_this21.loadtime === ys) return;
        var n = !1;
        var s = [];
        for (var _r6 = 2; _r6 < e.length; _r6++) {
          e[_r6] !== t[_r6] && (s.push(e[_r6]), n = !0);
        }
        e[0] !== t[0] && (_this21.mixinDatacomPage.current = _this21.pageCurrent), _this21.mixinDatacomPage.size = _this21.pageSize, _this21.onMixinDatacomPropsChange(n, s);
      });
    },
    methods: {
      onMixinDatacomPropsChange: function onMixinDatacomPropsChange(e, t) {},
      mixinDatacomEasyGet: function mixinDatacomEasyGet() {
        var _this22 = this;
        var _ref46 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref46$getone = _ref46.getone,
          e = _ref46$getone === void 0 ? !1 : _ref46$getone,
          t = _ref46.success,
          n = _ref46.fail;
        this.mixinDatacomLoading || (this.mixinDatacomLoading = !0, this.mixinDatacomErrorMessage = "", this.mixinDatacomGet().then(function (n) {
          _this22.mixinDatacomLoading = !1;
          var _n$result = n.result,
            s = _n$result.data,
            r = _n$result.count;
          _this22.getcount && (_this22.mixinDatacomPage.count = r), _this22.mixinDatacomHasMore = s.length < _this22.pageSize;
          var i = e ? s.length ? s[0] : void 0 : s;
          _this22.mixinDatacomResData = i, t && t(i);
        }).catch(function (e) {
          _this22.mixinDatacomLoading = !1, _this22.mixinDatacomErrorMessage = e, n && n(e);
        }));
      },
      mixinDatacomGet: function mixinDatacomGet() {
        var _n12;
        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var n = e.database(this.spaceInfo);
        var s = t.action || this.action;
        s && (n = n.action(s));
        var r = t.collection || this.collection;
        n = Array.isArray(r) ? (_n12 = n).collection.apply(_n12, (0, _toConsumableArray2.default)(r)) : n.collection(r);
        var i = t.where || this.where;
        i && Object.keys(i).length && (n = n.where(i));
        var o = t.field || this.field;
        o && (n = n.field(o));
        var a = t.foreignKey || this.foreignKey;
        a && (n = n.foreignKey(a));
        var c = t.groupby || this.groupby;
        c && (n = n.groupBy(c));
        var u = t.groupField || this.groupField;
        u && (n = n.groupField(u));
        !0 === (void 0 !== t.distinct ? t.distinct : this.distinct) && (n = n.distinct());
        var l = t.orderby || this.orderby;
        l && (n = n.orderBy(l));
        var h = void 0 !== t.pageCurrent ? t.pageCurrent : this.mixinDatacomPage.current,
          d = void 0 !== t.pageSize ? t.pageSize : this.mixinDatacomPage.size,
          f = void 0 !== t.getcount ? t.getcount : this.getcount,
          p = void 0 !== t.gettree ? t.gettree : this.gettree,
          g = void 0 !== t.gettreepath ? t.gettreepath : this.gettreepath,
          m = {
            getCount: f
          },
          y = {
            limitLevel: void 0 !== t.limitlevel ? t.limitlevel : this.limitlevel,
            startWith: void 0 !== t.startwith ? t.startwith : this.startwith
          };
        return p && (m.getTree = y), g && (m.getTreePath = y), n = n.skip(d * (h - 1)).limit(d).get(m), n;
      }
    }
  };
}
function ws(e) {
  return function (t) {
    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    n = function (e) {
      var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return e.customUI = t.customUI || e.customUI, e.parseSystemError = t.parseSystemError || e.parseSystemError, Object.assign(e.loadingOptions, t.loadingOptions), Object.assign(e.errorOptions, t.errorOptions), "object" == (0, _typeof2.default)(t.secretMethods) && (e.secretMethods = t.secretMethods), e;
    }({
      customUI: !1,
      loadingOptions: {
        title: "加载中...",
        mask: !0
      },
      errorOptions: {
        type: "modal",
        retry: !1
      }
    }, n);
    var _n13 = n,
      s = _n13.customUI,
      r = _n13.loadingOptions,
      i = _n13.errorOptions,
      o = _n13.parseSystemError,
      a = !s;
    return new Proxy({}, {
      get: function get(s, c) {
        return function () {
          var _ref47 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            e = _ref47.fn,
            t = _ref47.interceptorName,
            n = _ref47.getCallbackArgs;
          return /*#__PURE__*/(0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee49() {
            var _len2,
              s,
              _key2,
              r,
              i,
              o,
              _args = arguments;
            return _regenerator.default.wrap(function _callee49$(_context49) {
              while (1) {
                switch (_context49.prev = _context49.next) {
                  case 0:
                    for (_len2 = _args.length, s = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                      s[_key2] = _args[_key2];
                    }
                    r = n ? n({
                      params: s
                    }) : {};
                    _context49.prev = 2;
                    _context49.next = 5;
                    return U(R(t, "invoke"), _objectSpread({}, r));
                  case 5:
                    _context49.next = 7;
                    return e.apply(void 0, s);
                  case 7:
                    i = _context49.sent;
                    _context49.next = 10;
                    return U(R(t, "success"), _objectSpread(_objectSpread({}, r), {}, {
                      result: i
                    }));
                  case 10:
                    return _context49.abrupt("return", i);
                  case 13:
                    _context49.prev = 13;
                    _context49.t0 = _context49["catch"](2);
                    o = _context49.t0;
                    _context49.next = 18;
                    return U(R(t, "fail"), _objectSpread(_objectSpread({}, r), {}, {
                      error: o
                    }));
                  case 18:
                    throw o;
                  case 19:
                    _context49.prev = 19;
                    _context49.next = 22;
                    return U(R(t, "complete"), o ? _objectSpread(_objectSpread({}, r), {}, {
                      error: o
                    }) : _objectSpread(_objectSpread({}, r), {}, {
                      result: i
                    }));
                  case 22:
                    return _context49.finish(19);
                  case 23:
                  case "end":
                    return _context49.stop();
                }
              }
            }, _callee49, null, [[2, 13, 19, 23]]);
          }));
        }({
          fn: function () {
            var _s14 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee51() {
              var h,
                _len3,
                u,
                _key3,
                d,
                f,
                _ref49,
                p,
                g,
                m,
                y,
                _e30,
                _yield,
                _t18,
                _n14,
                _args4 = arguments;
              return _regenerator.default.wrap(function _callee51$(_context51) {
                while (1) {
                  switch (_context51.prev = _context51.next) {
                    case 0:
                      a && uni.showLoading({
                        title: r.title,
                        mask: r.mask
                      });
                      for (_len3 = _args4.length, u = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                        u[_key3] = _args4[_key3];
                      }
                      d = {
                        name: t,
                        type: l,
                        data: {
                          method: c,
                          params: u
                        }
                      };
                      "object" == (0, _typeof2.default)(n.secretMethods) && function (e, t) {
                        var n = t.data.method,
                          s = e.secretMethods || {},
                          r = s[n] || s["*"];
                        r && (t.secretType = r);
                      }(n, d);
                      f = !1;
                      _context51.prev = 5;
                      _context51.next = 8;
                      return e.callFunction(d);
                    case 8:
                      h = _context51.sent;
                      _context51.next = 14;
                      break;
                    case 11:
                      _context51.prev = 11;
                      _context51.t0 = _context51["catch"](5);
                      f = !0, h = {
                        result: new Q(_context51.t0)
                      };
                    case 14:
                      _ref49 = h.result || {}, p = _ref49.errSubject, g = _ref49.errCode, m = _ref49.errMsg, y = _ref49.newToken;
                      if (!(a && uni.hideLoading(), y && y.token && y.tokenExpired && (ee(y), z(q, _objectSpread({}, y))), g)) {
                        _context51.next = 39;
                        break;
                      }
                      _e30 = m;
                      if (!(f && o)) {
                        _context51.next = 24;
                        break;
                      }
                      _context51.next = 20;
                      return o({
                        objectName: t,
                        methodName: c,
                        params: u,
                        errSubject: p,
                        errCode: g,
                        errMsg: m
                      });
                    case 20:
                      _context51.t1 = _context51.sent.errMsg;
                      if (_context51.t1) {
                        _context51.next = 23;
                        break;
                      }
                      _context51.t1 = m;
                    case 23:
                      _e30 = _context51.t1;
                    case 24:
                      if (!a) {
                        _context51.next = 37;
                        break;
                      }
                      if (!("toast" === i.type)) {
                        _context51.next = 29;
                        break;
                      }
                      uni.showToast({
                        title: _e30,
                        icon: "none"
                      });
                      _context51.next = 37;
                      break;
                    case 29:
                      if (!("modal" !== i.type)) {
                        _context51.next = 31;
                        break;
                      }
                      throw new Error("Invalid errorOptions.type: ".concat(i.type));
                    case 31:
                      _context51.next = 33;
                      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee50() {
                        var _ref51,
                          e,
                          t,
                          n,
                          s,
                          r,
                          _args3 = arguments;
                        return _regenerator.default.wrap(function _callee50$(_context50) {
                          while (1) {
                            switch (_context50.prev = _context50.next) {
                              case 0:
                                _ref51 = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {}, e = _ref51.title, t = _ref51.content, n = _ref51.showCancel, s = _ref51.cancelText, r = _ref51.confirmText;
                                return _context50.abrupt("return", new Promise(function (i, o) {
                                  uni.showModal({
                                    title: e,
                                    content: t,
                                    showCancel: n,
                                    cancelText: s,
                                    confirmText: r,
                                    success: function success(e) {
                                      i(e);
                                    },
                                    fail: function fail() {
                                      i({
                                        confirm: !1,
                                        cancel: !0
                                      });
                                    }
                                  });
                                }));
                              case 2:
                              case "end":
                                return _context50.stop();
                            }
                          }
                        }, _callee50);
                      }))({
                        title: "提示",
                        content: _e30,
                        showCancel: i.retry,
                        cancelText: "取消",
                        confirmText: i.retry ? "重试" : "确定"
                      });
                    case 33:
                      _yield = _context51.sent;
                      _t18 = _yield.confirm;
                      if (!(i.retry && _t18)) {
                        _context51.next = 37;
                        break;
                      }
                      return _context51.abrupt("return", s.apply(void 0, u));
                    case 37:
                      _n14 = new Q({
                        subject: p,
                        code: g,
                        message: m,
                        requestId: h.requestId
                      });
                      throw _n14.detail = h.result, z(D, {
                        type: j,
                        content: _n14
                      }), _n14;
                    case 39:
                      return _context51.abrupt("return", (z(D, {
                        type: j,
                        content: h.result
                      }), h.result));
                    case 40:
                    case "end":
                      return _context51.stop();
                  }
                }
              }, _callee51, null, [[5, 11]]);
            }));
            function s() {
              return _s14.apply(this, arguments);
            }
            return s;
          }(),
          interceptorName: "callObject",
          getCallbackArgs: function getCallbackArgs() {
            var _ref52 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
              e = _ref52.params;
            return {
              objectName: t,
              methodName: c,
              params: e
            };
          }
        });
      }
    });
  };
}
function vs(e) {
  return C("_globalUniCloudSecureNetworkCache__{spaceId}".replace("{spaceId}", e.config.spaceId));
}
function Ss() {
  return _Ss.apply(this, arguments);
}
function _Ss() {
  _Ss = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee53() {
    var _ref56,
      _ref56$callLoginByWei,
      e,
      t,
      n,
      s,
      _args6 = arguments;
    return _regenerator.default.wrap(function _callee53$(_context53) {
      while (1) {
        switch (_context53.prev = _context53.next) {
          case 0:
            _ref56 = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {}, _ref56$callLoginByWei = _ref56.callLoginByWeixin, e = _ref56$callLoginByWei === void 0 ? !1 : _ref56$callLoginByWei;
            t = vs(this);
            if (!("mp-weixin" !== S)) {
              _context53.next = 4;
              break;
            }
            throw new Error("[SecureNetwork] API `initSecureNetworkByWeixin` is not supported on platform `".concat(S, "`"));
          case 4:
            _context53.next = 6;
            return new Promise(function (e, t) {
              uni.login({
                success: function success(t) {
                  e(t.code);
                },
                fail: function fail(e) {
                  t(new Error(e.errMsg));
                }
              });
            });
          case 6:
            n = _context53.sent;
            s = this.importObject("uni-id-co", {
              customUI: !0
            });
            _context53.next = 10;
            return s.secureNetworkHandshakeByWeixin({
              code: n,
              callLoginByWeixin: e
            });
          case 10:
            t.mpWeixinCode = n;
            return _context53.abrupt("return", {
              code: n
            });
          case 12:
          case "end":
            return _context53.stop();
        }
      }
    }, _callee53, this);
  }));
  return _Ss.apply(this, arguments);
}
function ks(_x37) {
  return _ks.apply(this, arguments);
}
function _ks() {
  _ks = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee54(e) {
    var t;
    return _regenerator.default.wrap(function _callee54$(_context54) {
      while (1) {
        switch (_context54.prev = _context54.next) {
          case 0:
            t = vs(this);
            return _context54.abrupt("return", (t.initPromise || (t.initPromise = Ss.call(this, e)), t.initPromise));
          case 2:
          case "end":
            return _context54.stop();
        }
      }
    }, _callee54, this);
  }));
  return _ks.apply(this, arguments);
}
function Is(e) {
  return function () {
    var _ref53 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref53$callLoginByWei = _ref53.callLoginByWeixin,
      t = _ref53$callLoginByWei === void 0 ? !1 : _ref53$callLoginByWei;
    return ks.call(e, {
      callLoginByWeixin: t
    });
  };
}
function bs(_x38, _x39) {
  return _bs.apply(this, arguments);
}
function _bs() {
  _bs = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee55(e, t) {
    var n, _e32, s;
    return _regenerator.default.wrap(function _callee55$(_context55) {
      while (1) {
        switch (_context55.prev = _context55.next) {
          case 0:
            n = "http://".concat(e, ":").concat(t, "/system/ping");
            _context55.prev = 1;
            _context55.next = 4;
            return s = {
              url: n,
              timeout: 500
            }, new Promise(function (e, t) {
              X.request(_objectSpread(_objectSpread({}, s), {}, {
                success: function success(t) {
                  e(t);
                },
                fail: function fail(e) {
                  t(e);
                }
              }));
            });
          case 4:
            _e32 = _context55.sent;
            return _context55.abrupt("return", !(!_e32.data || 0 !== _e32.data.code));
          case 8:
            _context55.prev = 8;
            _context55.t0 = _context55["catch"](1);
            return _context55.abrupt("return", !1);
          case 11:
          case "end":
            return _context55.stop();
        }
      }
    }, _callee55, null, [[1, 8]]);
  }));
  return _bs.apply(this, arguments);
}
function Ts(e) {
  if (e.initUniCloudStatus && "rejected" !== e.initUniCloudStatus) return;
  var t = Promise.resolve();
  var n;
  n = 1, t = new Promise(function (e) {
    setTimeout(function () {
      e();
    }, n);
  }), e.isReady = !1, e.isDefault = !1;
  var s = e.auth();
  e.initUniCloudStatus = "pending", e.initUniCloud = t.then(function () {
    return s.getLoginState();
  }).then(function (e) {
    return e ? Promise.resolve() : s.signInAnonymously();
  }).then(function () {
    if (!y) return Promise.resolve();
    if ("app" === S) {
      var _re2 = re(),
        _e31 = _re2.osName,
        _t19 = _re2.osVersion;
      "ios" === _e31 && function (e) {
        if (!e || "string" != typeof e) return 0;
        var t = e.match(/^(\d+)./);
        return t && t[1] ? parseInt(t[1]) : 0;
      }(_t19) >= 14 && console.warn("iOS 14及以上版本连接uniCloud本地调试服务需要允许客户端查找并连接到本地网络上的设备（仅开发模式生效，发行模式会连接uniCloud云端服务）");
    }
    if (y && e.__dev__.debugInfo) {
      var _e$__dev__$debugInfo = e.__dev__.debugInfo,
        _t20 = _e$__dev__$debugInfo.address,
        _n15 = _e$__dev__$debugInfo.servePort;
      return function () {
        var _ref54 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee52(e, t) {
          var n, _s15, _r7;
          return _regenerator.default.wrap(function _callee52$(_context52) {
            while (1) {
              switch (_context52.prev = _context52.next) {
                case 0:
                  _s15 = 0;
                case 1:
                  if (!(_s15 < e.length)) {
                    _context52.next = 11;
                    break;
                  }
                  _r7 = e[_s15];
                  _context52.next = 5;
                  return bs(_r7, t);
                case 5:
                  if (!_context52.sent) {
                    _context52.next = 8;
                    break;
                  }
                  n = _r7;
                  return _context52.abrupt("break", 11);
                case 8:
                  _s15++;
                  _context52.next = 1;
                  break;
                case 11:
                  return _context52.abrupt("return", {
                    address: n,
                    port: t
                  });
                case 12:
                case "end":
                  return _context52.stop();
              }
            }
          }, _callee52);
        }));
        return function (_x40, _x41) {
          return _ref54.apply(this, arguments);
        };
      }()(_t20, _n15);
    }
  }).then(function () {
    var _ref55 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      t = _ref55.address,
      n = _ref55.port;
    if (!y) return Promise.resolve();
    var s = console["app" === S ? "error" : "warn"];
    if (t) e.__dev__.localAddress = t, e.__dev__.localPort = n;else if (e.__dev__.debugInfo) {
      var _t21 = "";
      "remote" === e.__dev__.debugInfo.initialLaunchType ? (e.__dev__.debugInfo.forceRemote = !0, _t21 = "当前客户端和HBuilderX不在同一局域网下（或其他网络原因无法连接HBuilderX），uniCloud本地调试服务不对当前客户端生效。\n- 如果不使用uniCloud本地调试服务，请直接忽略此信息。\n- 如需使用uniCloud本地调试服务，请将客户端与主机连接到同一局域网下并重新运行到客户端。") : _t21 = "无法连接uniCloud本地调试服务，请检查当前客户端是否与主机在同一局域网下。\n- 如需使用uniCloud本地调试服务，请将客户端与主机连接到同一局域网下并重新运行到客户端。", _t21 += "\n- 如果在HBuilderX开启的状态下切换过网络环境，请重启HBuilderX后再试\n- 检查系统防火墙是否拦截了HBuilderX自带的nodejs\n- 检查是否错误的使用拦截器修改uni.request方法的参数", "web" === S && (_t21 += "\n- 部分浏览器开启节流模式之后访问本地地址受限，请检查是否启用了节流模式"), 0 === S.indexOf("mp-") && (_t21 += "\n- 小程序中如何使用uniCloud，请参考：https://uniapp.dcloud.net.cn/uniCloud/publish.html#useinmp"), s(_t21);
    }
  }).then(function () {
    te(), e.isReady = !0, e.initUniCloudStatus = "fulfilled";
  }).catch(function (t) {
    console.error(t), e.initUniCloudStatus = "rejected";
  });
}
var As = {
  tcb: yt,
  tencent: yt,
  aliyun: he,
  private: wt
};
var Cs = new ( /*#__PURE__*/function () {
  function _class6() {
    (0, _classCallCheck2.default)(this, _class6);
  }
  (0, _createClass2.default)(_class6, [{
    key: "init",
    value: function init(e) {
      var t = {};
      var n = As[e.provider];
      if (!n) throw new Error("未提供正确的provider参数");
      t = n.init(e), t.__dev__ = {}, t.__dev__.debugLog = y && ("web" === S && navigator.userAgent.indexOf("HBuilderX") > 0 || "app" === S);
      var s = k;
      y && s && !s.code && (t.__dev__.debugInfo = s), Ts(t), t.reInit = function () {
        Ts(this);
      }, Cn(t), function (e) {
        var t = e.uploadFile;
        e.uploadFile = function (e) {
          return t.call(this, e);
        };
      }(t), function (e) {
        e.database = function (t) {
          if (t && Object.keys(t).length > 0) return e.init(t).database();
          if (this._database) return this._database;
          var n = qn(Kn, {
            uniClient: e
          });
          return this._database = n, n;
        }, e.databaseForJQL = function (t) {
          if (t && Object.keys(t).length > 0) return e.init(t).databaseForJQL();
          if (this._databaseForJQL) return this._databaseForJQL;
          var n = qn(Kn, {
            uniClient: e,
            isJQL: !0
          });
          return this._databaseForJQL = n, n;
        };
      }(t), function (e) {
        e.getCurrentUserInfo = ps, e.chooseAndUploadFile = ms.initChooseAndUploadFile(e), Object.assign(e, {
          get mixinDatacom() {
            return _s(e);
          }
        }), e.importObject = ws(e), e.initSecureNetworkByWeixin = Is(e);
      }(t);
      return ["callFunction", "uploadFile", "deleteFile", "getTempFileURL", "downloadFile", "chooseAndUploadFile"].forEach(function (e) {
        if (!t[e]) return;
        var n = t[e];
        t[e] = function () {
          return t.reInit(), n.apply(t, Array.from(arguments));
        }, t[e] = Y(t[e], e).bind(t);
      }), t.init = this.init, t;
    }
  }]);
  return _class6;
}())();
(function () {
  var e = I;
  var t = {};
  if (e && 1 === e.length) t = e[0], Cs = Cs.init(t), Cs.isDefault = !0;else {
    var _t22 = ["auth", "callFunction", "uploadFile", "deleteFile", "getTempFileURL", "downloadFile", "database", "getCurrentUSerInfo", "importObject"];
    var _n16;
    _n16 = e && e.length > 0 ? "应用有多个服务空间，请通过uniCloud.init方法指定要使用的服务空间" : b ? "应用未关联服务空间，请在uniCloud目录右键关联服务空间" : "uni-app cli项目内使用uniCloud需要使用HBuilderX的运行菜单运行项目，且需要在uniCloud目录关联服务空间", _t22.forEach(function (e) {
      Cs[e] = function () {
        return console.error(_n16), Promise.reject(new Q({
          code: "SYS_ERR",
          message: _n16
        }));
      };
    });
  }
  Object.assign(Cs, {
    get mixinDatacom() {
      return _s(Cs);
    }
  }), ls(Cs), Cs.addInterceptor = O, Cs.removeInterceptor = x, Cs.interceptObject = L, y && "web" === S && (window.uniCloud = Cs);
})();
var Ps = Cs;
exports.default = Ps;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2), __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 159:
/*!************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/@babel/runtime/regenerator/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ 160)();
module.exports = runtime;

/***/ }),

/***/ 16:
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;
  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 160:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 12)["default"];
function _regeneratorRuntime() {
  "use strict";

  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return exports;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var exports = {},
    Op = Object.prototype,
    hasOwn = Op.hasOwnProperty,
    defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    },
    $Symbol = "function" == typeof Symbol ? Symbol : {},
    iteratorSymbol = $Symbol.iterator || "@@iterator",
    asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
    toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
  function define(obj, key, value) {
    return Object.defineProperty(obj, key, {
      value: value,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), obj[key];
  }
  try {
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }
  function wrap(innerFn, outerFn, self, tryLocsList) {
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
      generator = Object.create(protoGenerator.prototype),
      context = new Context(tryLocsList || []);
    return defineProperty(generator, "_invoke", {
      value: makeInvokeMethod(innerFn, self, context)
    }), generator;
  }
  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }
  exports.wrap = wrap;
  var ContinueSentinel = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf,
    NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }
  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if ("throw" !== record.type) {
        var result = record.arg,
          value = result.value;
        return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
          invoke("next", value, resolve, reject);
        }, function (err) {
          invoke("throw", err, resolve, reject);
        }) : PromiseImpl.resolve(value).then(function (unwrapped) {
          result.value = unwrapped, resolve(result);
        }, function (error) {
          return invoke("throw", error, resolve, reject);
        });
      }
      reject(record.arg);
    }
    var previousPromise;
    defineProperty(this, "_invoke", {
      value: function value(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(innerFn, self, context) {
    var state = "suspendedStart";
    return function (method, arg) {
      if ("executing" === state) throw new Error("Generator is already running");
      if ("completed" === state) {
        if ("throw" === method) throw arg;
        return doneResult();
      }
      for (context.method = method, context.arg = arg;;) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }
        if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) {
          if ("suspendedStart" === state) throw state = "completed", context.arg;
          context.dispatchException(context.arg);
        } else "return" === context.method && context.abrupt("return", context.arg);
        state = "executing";
        var record = tryCatch(innerFn, self, context);
        if ("normal" === record.type) {
          if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
          return {
            value: record.arg,
            done: context.done
          };
        }
        "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
      }
    };
  }
  function maybeInvokeDelegate(delegate, context) {
    var methodName = context.method,
      method = delegate.iterator[methodName];
    if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
    var record = tryCatch(method, delegate.iterator, context.arg);
    if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
    var info = record.arg;
    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
  }
  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };
    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
  }
  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal", delete record.arg, entry.completion = record;
  }
  function Context(tryLocsList) {
    this.tryEntries = [{
      tryLoc: "root"
    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) return iteratorMethod.call(iterable);
      if ("function" == typeof iterable.next) return iterable;
      if (!isNaN(iterable.length)) {
        var i = -1,
          next = function next() {
            for (; ++i < iterable.length;) {
              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
            }
            return next.value = undefined, next.done = !0, next;
          };
        return next.next = next;
      }
    }
    return {
      next: doneResult
    };
  }
  function doneResult() {
    return {
      value: undefined,
      done: !0
    };
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), defineProperty(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
    var ctor = "function" == typeof genFun && genFun.constructor;
    return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
  }, exports.mark = function (genFun) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
  }, exports.awrap = function (arg) {
    return {
      __await: arg
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    void 0 === PromiseImpl && (PromiseImpl = Promise);
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
    return this;
  }), define(Gp, "toString", function () {
    return "[object Generator]";
  }), exports.keys = function (val) {
    var object = Object(val),
      keys = [];
    for (var key in object) {
      keys.push(key);
    }
    return keys.reverse(), function next() {
      for (; keys.length;) {
        var key = keys.pop();
        if (key in object) return next.value = key, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, exports.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {
        "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
      }
    },
    stop: function stop() {
      this.done = !0;
      var rootRecord = this.tryEntries[0].completion;
      if ("throw" === rootRecord.type) throw rootRecord.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) throw exception;
      var context = this;
      function handle(loc, caught) {
        return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
      }
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i],
          record = entry.completion;
        if ("root" === entry.tryLoc) return handle("end");
        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc"),
            hasFinally = hasOwn.call(entry, "finallyLoc");
          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
          } else {
            if (!hasFinally) throw new Error("try statement without catch or finally");
            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }
      finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
      var record = finallyEntry ? finallyEntry.completion : {};
      return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if ("throw" === record.type) throw record.arg;
      return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if ("throw" === record.type) {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }
      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      return this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
    }
  }, exports;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 161:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 162:
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 15);
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}
module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 163:
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 12)["default"];
var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ 164);
function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }
  return assertThisInitialized(self);
}
module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 164:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 165:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _getPrototypeOf(o);
}
module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 166:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ 165);
var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 15);
var isNativeFunction = __webpack_require__(/*! ./isNativeFunction.js */ 167);
var construct = __webpack_require__(/*! ./construct.js */ 14);
function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;
  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;
    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }
    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);
      _cache.set(Class, Wrapper);
    }
    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }
    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _wrapNativeSuper(Class);
}
module.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 167:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}
module.exports = _isNativeFunction, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 168:
/*!****************************************************************!*\
  !*** F:/uni-app/计院体育君/pages.json?{"type":"origin-pages-json"} ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  "easycom": {
    "autoscan": true,
    "custom": {
      "^uni-(.*)": "@dcloudio/uni-ui/lib/uni-$1/uni-$1.vue"
    }
  },
  "pages": [{
    "path": "pages/index/index",
    "style": {
      "navigationBarTitleText": "计院体育君"
    }
  }, {
    "path": "pages/signIn/signIn",
    "style": {
      "navigationBarTitleText": "签到",
      "enablePullDownRefresh": false
    }
  }, {
    "path": "pages/addAthletes/addAthletes",
    "style": {
      "navigationBarTitleText": "添加运动员",
      "enablePullDownRefresh": false
    }
  }, {
    "path": "pages/test/test",
    "style": {
      "navigationBarTitleText": "计院体育君",
      "enablePullDownRefresh": false
    }
  }, {
    "path": "pages/allAthletes/allAthletes",
    "style": {
      "navigationBarTitleText": "运动员",
      "enablePullDownRefresh": false
    }
  }, {
    "path": "pages/signInRecord/signInRecord",
    "style": {
      "navigationBarTitleText": "签到记录",
      "enablePullDownRefresh": false
    }
  }, {
    "path": "pages/logIn/logIn",
    "style": {
      "navigationBarTitleText": "计院体育君"
    }
  }, {
    "path": "pages/signInPeople/signInPeople",
    "style": {
      "navigationBarTitleText": "签到记录",
      "enablePullDownRefresh": false
    }
  }, {
    "path": "pages/publicNotice/publicNotice",
    "style": {
      "navigationBarTitleText": "训练公示",
      "enablePullDownRefresh": false
    }
  }],
  "globalStyle": {
    "navigationBarTextStyle": "black",
    "navigationBarTitleText": "uni-app",
    "navigationBarBackgroundColor": "#F8F8F8",
    "backgroundColor": "#F8F8F8",
    "app-plus": {
      "background": "#efeff4"
    }
  }
};
exports.default = _default;

/***/ }),

/***/ 169:
/*!***************************************************!*\
  !*** F:/uni-app/计院体育君/pages.json?{"type":"stat"} ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  "appid": "__UNI__CA70BCD"
};
exports.default = _default;

/***/ }),

/***/ 17:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ 18);
var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ 19);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 7);
var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ 20);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 18:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 8);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 19:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 191:
/*!*****************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-popup/popup.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  data: function data() {
    return {};
  },
  created: function created() {
    this.popup = this.getParent();
  },
  methods: {
    /**
     * 获取父元素实例
     */
    getParent: function getParent() {
      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'uniPopup';
      var parent = this.$parent;
      var parentName = parent.$options.name;
      while (parentName !== name) {
        parent = parent.$parent;
        if (!parent) return false;
        parentName = parent.$options.name;
      }
      return parent;
    }
  }
};
exports.default = _default;

/***/ }),

/***/ 192:
/*!**********************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-popup/i18n/index.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _en = _interopRequireDefault(__webpack_require__(/*! ./en.json */ 193));
var _zhHans = _interopRequireDefault(__webpack_require__(/*! ./zh-Hans.json */ 194));
var _zhHant = _interopRequireDefault(__webpack_require__(/*! ./zh-Hant.json */ 195));
var _default = {
  en: _en.default,
  'zh-Hans': _zhHans.default,
  'zh-Hant': _zhHant.default
};
exports.default = _default;

/***/ }),

/***/ 193:
/*!*********************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-popup/i18n/en.json ***!
  \*********************************************************************************/
/*! exports provided: uni-popup.cancel, uni-popup.ok, uni-popup.placeholder, uni-popup.title, uni-popup.shareTitle, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"uni-popup.cancel\":\"cancel\",\"uni-popup.ok\":\"ok\",\"uni-popup.placeholder\":\"pleace enter\",\"uni-popup.title\":\"Hint\",\"uni-popup.shareTitle\":\"Share to\"}");

/***/ }),

/***/ 194:
/*!**************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-popup/i18n/zh-Hans.json ***!
  \**************************************************************************************/
/*! exports provided: uni-popup.cancel, uni-popup.ok, uni-popup.placeholder, uni-popup.title, uni-popup.shareTitle, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"uni-popup.cancel\":\"取消\",\"uni-popup.ok\":\"确定\",\"uni-popup.placeholder\":\"请输入\",\"uni-popup.title\":\"提示\",\"uni-popup.shareTitle\":\"分享到\"}");

/***/ }),

/***/ 195:
/*!**************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-popup/i18n/zh-Hant.json ***!
  \**************************************************************************************/
/*! exports provided: uni-popup.cancel, uni-popup.ok, uni-popup.placeholder, uni-popup.title, uni-popup.shareTitle, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"uni-popup.cancel\":\"取消\",\"uni-popup.ok\":\"確定\",\"uni-popup.placeholder\":\"請輸入\",\"uni-popup.title\":\"提示\",\"uni-popup.shareTitle\":\"分享到\"}");

/***/ }),

/***/ 2:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 20:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 203:
/*!*******************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-calendar/util.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 12));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 22));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 23));
var _calendar = _interopRequireDefault(__webpack_require__(/*! ./calendar.js */ 204));
var Calendar = /*#__PURE__*/function () {
  function Calendar() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      date = _ref.date,
      selected = _ref.selected,
      startDate = _ref.startDate,
      endDate = _ref.endDate,
      range = _ref.range;
    (0, _classCallCheck2.default)(this, Calendar);
    // 当前日期
    this.date = this.getDate(new Date()); // 当前初入日期
    // 打点信息
    this.selected = selected || [];
    // 范围开始
    this.startDate = startDate;
    // 范围结束
    this.endDate = endDate;
    this.range = range;
    // 多选状态
    this.cleanMultipleStatus();
    // 每周日期
    this.weeks = {};
    // this._getWeek(this.date.fullDate)
  }
  /**
   * 设置日期
   * @param {Object} date
   */
  (0, _createClass2.default)(Calendar, [{
    key: "setDate",
    value: function setDate(date) {
      this.selectDate = this.getDate(date);
      this._getWeek(this.selectDate.fullDate);
    }

    /**
     * 清理多选状态
     */
  }, {
    key: "cleanMultipleStatus",
    value: function cleanMultipleStatus() {
      this.multipleStatus = {
        before: '',
        after: '',
        data: []
      };
    }

    /**
     * 重置开始日期
     */
  }, {
    key: "resetSatrtDate",
    value: function resetSatrtDate(startDate) {
      // 范围开始
      this.startDate = startDate;
    }

    /**
     * 重置结束日期
     */
  }, {
    key: "resetEndDate",
    value: function resetEndDate(endDate) {
      // 范围结束
      this.endDate = endDate;
    }

    /**
     * 获取任意时间
     */
  }, {
    key: "getDate",
    value: function getDate(date) {
      var AddDayCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var str = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'day';
      if (!date) {
        date = new Date();
      }
      if ((0, _typeof2.default)(date) !== 'object') {
        date = date.replace(/-/g, '/');
      }
      var dd = new Date(date);
      switch (str) {
        case 'day':
          dd.setDate(dd.getDate() + AddDayCount); // 获取AddDayCount天后的日期
          break;
        case 'month':
          if (dd.getDate() === 31) {
            dd.setDate(dd.getDate() + AddDayCount);
          } else {
            var preMonth = dd.getMonth();
            dd.setMonth(preMonth + AddDayCount); // 获取AddDayCount天后的日期
            var nextMonth = dd.getMonth();
            if (nextMonth - preMonth > AddDayCount) {
              dd.setMonth(nextMonth - (nextMonth - preMonth - AddDayCount));
            }
          }
          break;
        case 'year':
          dd.setFullYear(dd.getFullYear() + AddDayCount); // 获取AddDayCount天后的日期
          break;
      }
      var y = dd.getFullYear();
      var m = dd.getMonth() + 1 < 10 ? '0' + (dd.getMonth() + 1) : dd.getMonth() + 1; // 获取当前月份的日期，不足10补0
      var d = dd.getDate() < 10 ? '0' + dd.getDate() : dd.getDate(); // 获取当前几号，不足10补0
      return {
        fullDate: y + '-' + m + '-' + d,
        year: y,
        month: m,
        date: d,
        day: dd.getDay()
      };
    }

    /**
     * 获取上月剩余天数
     */
  }, {
    key: "_getLastMonthDays",
    value: function _getLastMonthDays(firstDay, full) {
      var dateArr = [];
      for (var i = firstDay; i > 0; i--) {
        var beforeDate = new Date(full.year, full.month - 1, -i + 1).getDate();
        dateArr.push({
          date: beforeDate,
          month: full.month - 1,
          lunar: this.getlunar(full.year, full.month - 1, beforeDate),
          disable: true
        });
      }
      return dateArr;
    }
    /**
     * 获取本月天数
     */
  }, {
    key: "_currentMonthDys",
    value: function _currentMonthDys(dateData, full) {
      var _this = this;
      var dateArr = [];
      var fullDate = this.date.fullDate;
      var _loop = function _loop(i) {
        var nowDate = full.year + '-' + (full.month < 10 ? full.month : full.month) + '-' + (i < 10 ? '0' + i : i);
        // 是否今天
        var isDay = fullDate === nowDate;
        // 获取打点信息
        var info = _this.selected && _this.selected.find(function (item) {
          if (_this.dateEqual(nowDate, item.date)) {
            return item;
          }
        });

        // 日期禁用
        var disableBefore = true;
        var disableAfter = true;
        if (_this.startDate) {
          // let dateCompBefore = this.dateCompare(this.startDate, fullDate)
          // disableBefore = this.dateCompare(dateCompBefore ? this.startDate : fullDate, nowDate)
          disableBefore = _this.dateCompare(_this.startDate, nowDate);
        }
        if (_this.endDate) {
          // let dateCompAfter = this.dateCompare(fullDate, this.endDate)
          // disableAfter = this.dateCompare(nowDate, dateCompAfter ? this.endDate : fullDate)
          disableAfter = _this.dateCompare(nowDate, _this.endDate);
        }
        var multiples = _this.multipleStatus.data;
        var checked = false;
        var multiplesStatus = -1;
        if (_this.range) {
          if (multiples) {
            multiplesStatus = multiples.findIndex(function (item) {
              return _this.dateEqual(item, nowDate);
            });
          }
          if (multiplesStatus !== -1) {
            checked = true;
          }
        }
        var data = {
          fullDate: nowDate,
          year: full.year,
          date: i,
          multiple: _this.range ? checked : false,
          beforeMultiple: _this.dateEqual(_this.multipleStatus.before, nowDate),
          afterMultiple: _this.dateEqual(_this.multipleStatus.after, nowDate),
          month: full.month,
          lunar: _this.getlunar(full.year, full.month, i),
          disable: !(disableBefore && disableAfter),
          isDay: isDay
        };
        if (info) {
          data.extraInfo = info;
        }
        dateArr.push(data);
      };
      for (var i = 1; i <= dateData; i++) {
        _loop(i);
      }
      return dateArr;
    }
    /**
     * 获取下月天数
     */
  }, {
    key: "_getNextMonthDays",
    value: function _getNextMonthDays(surplus, full) {
      var dateArr = [];
      for (var i = 1; i < surplus + 1; i++) {
        dateArr.push({
          date: i,
          month: Number(full.month) + 1,
          lunar: this.getlunar(full.year, Number(full.month) + 1, i),
          disable: true
        });
      }
      return dateArr;
    }

    /**
     * 获取当前日期详情
     * @param {Object} date
     */
  }, {
    key: "getInfo",
    value: function getInfo(date) {
      var _this2 = this;
      if (!date) {
        date = new Date();
      }
      var dateInfo = this.canlender.find(function (item) {
        return item.fullDate === _this2.getDate(date).fullDate;
      });
      return dateInfo;
    }

    /**
     * 比较时间大小
     */
  }, {
    key: "dateCompare",
    value: function dateCompare(startDate, endDate) {
      // 计算截止时间
      startDate = new Date(startDate.replace('-', '/').replace('-', '/'));
      // 计算详细项的截止时间
      endDate = new Date(endDate.replace('-', '/').replace('-', '/'));
      if (startDate <= endDate) {
        return true;
      } else {
        return false;
      }
    }

    /**
     * 比较时间是否相等
     */
  }, {
    key: "dateEqual",
    value: function dateEqual(before, after) {
      // 计算截止时间
      before = new Date(before.replace('-', '/').replace('-', '/'));
      // 计算详细项的截止时间
      after = new Date(after.replace('-', '/').replace('-', '/'));
      if (before.getTime() - after.getTime() === 0) {
        return true;
      } else {
        return false;
      }
    }

    /**
     * 获取日期范围内所有日期
     * @param {Object} begin
     * @param {Object} end
     */
  }, {
    key: "geDateAll",
    value: function geDateAll(begin, end) {
      var arr = [];
      var ab = begin.split('-');
      var ae = end.split('-');
      var db = new Date();
      db.setFullYear(ab[0], ab[1] - 1, ab[2]);
      var de = new Date();
      de.setFullYear(ae[0], ae[1] - 1, ae[2]);
      var unixDb = db.getTime() - 24 * 60 * 60 * 1000;
      var unixDe = de.getTime() - 24 * 60 * 60 * 1000;
      for (var k = unixDb; k <= unixDe;) {
        k = k + 24 * 60 * 60 * 1000;
        arr.push(this.getDate(new Date(parseInt(k))).fullDate);
      }
      return arr;
    }
    /**
     * 计算阴历日期显示
     */
  }, {
    key: "getlunar",
    value: function getlunar(year, month, date) {
      return _calendar.default.solar2lunar(year, month, date);
    }
    /**
     * 设置打点
     */
  }, {
    key: "setSelectInfo",
    value: function setSelectInfo(data, value) {
      this.selected = value;
      this._getWeek(data);
    }

    /**
     *  获取多选状态
     */
  }, {
    key: "setMultiple",
    value: function setMultiple(fullDate) {
      var _this$multipleStatus = this.multipleStatus,
        before = _this$multipleStatus.before,
        after = _this$multipleStatus.after;
      if (!this.range) return;
      if (before && after) {
        this.multipleStatus.before = '';
        this.multipleStatus.after = '';
        this.multipleStatus.data = [];
      } else {
        if (!before) {
          this.multipleStatus.before = fullDate;
        } else {
          this.multipleStatus.after = fullDate;
          if (this.dateCompare(this.multipleStatus.before, this.multipleStatus.after)) {
            this.multipleStatus.data = this.geDateAll(this.multipleStatus.before, this.multipleStatus.after);
          } else {
            this.multipleStatus.data = this.geDateAll(this.multipleStatus.after, this.multipleStatus.before);
          }
        }
      }
      this._getWeek(fullDate);
    }

    /**
     * 获取每周数据
     * @param {Object} dateData
     */
  }, {
    key: "_getWeek",
    value: function _getWeek(dateData) {
      var _this$getDate = this.getDate(dateData),
        year = _this$getDate.year,
        month = _this$getDate.month;
      var firstDay = new Date(year, month - 1, 1).getDay();
      var currentDay = new Date(year, month, 0).getDate();
      var dates = {
        lastMonthDays: this._getLastMonthDays(firstDay, this.getDate(dateData)),
        // 上个月末尾几天
        currentMonthDys: this._currentMonthDys(currentDay, this.getDate(dateData)),
        // 本月天数
        nextMonthDays: [],
        // 下个月开始几天
        weeks: []
      };
      var canlender = [];
      var surplus = 42 - (dates.lastMonthDays.length + dates.currentMonthDys.length);
      dates.nextMonthDays = this._getNextMonthDays(surplus, this.getDate(dateData));
      canlender = canlender.concat(dates.lastMonthDays, dates.currentMonthDys, dates.nextMonthDays);
      var weeks = {};
      // 拼接数组  上个月开始几天 + 本月天数+ 下个月开始几天
      for (var i = 0; i < canlender.length; i++) {
        if (i % 7 === 0) {
          weeks[parseInt(i / 7)] = new Array(7);
        }
        weeks[parseInt(i / 7)][i % 7] = canlender[i];
      }
      this.canlender = canlender;
      this.weeks = weeks;
    }

    //静态方法
    // static init(date) {
    // 	if (!this.instance) {
    // 		this.instance = new Calendar(date);
    // 	}
    // 	return this.instance;
    // }
  }]);
  return Calendar;
}();
var _default = Calendar;
exports.default = _default;

/***/ }),

/***/ 204:
/*!***********************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-calendar/calendar.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
/**
* @1900-2100区间内的公历、农历互转
* @charset UTF-8
* @github  https://github.com/jjonline/calendar.js
* @Author  Jea杨(JJonline@JJonline.Cn)
* @Time    2014-7-21
* @Time    2016-8-13 Fixed 2033hex、Attribution Annals
* @Time    2016-9-25 Fixed lunar LeapMonth Param Bug
* @Time    2017-7-24 Fixed use getTerm Func Param Error.use solar year,NOT lunar year
* @Version 1.0.3
* @公历转农历：calendar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]
* @农历转公历：calendar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]
*/
/* eslint-disable */
var calendar = {
  /**
      * 农历1900-2100的润大小信息表
      * @Array Of Property
      * @return Hex
      */
  lunarInfo: [0x04bd8, 0x04ae0, 0x0a570, 0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2,
  // 1900-1909
  0x04ae0, 0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0, 0x0ada2, 0x095b0, 0x14977,
  // 1910-1919
  0x04970, 0x0a4b0, 0x0b4b5, 0x06a50, 0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970,
  // 1920-1929
  0x06566, 0x0d4a0, 0x0ea50, 0x06e95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0, 0x1c8d7, 0x0c950,
  // 1930-1939
  0x0d4a0, 0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4, 0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557,
  // 1940-1949
  0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0,
  // 1950-1959
  0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0,
  // 1960-1969
  0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6,
  // 1970-1979
  0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570,
  // 1980-1989
  0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x05ac0, 0x0ab60, 0x096d5, 0x092e0,
  // 1990-1999
  0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5,
  // 2000-2009
  0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930,
  // 2010-2019
  0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530,
  // 2020-2029
  0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45,
  // 2030-2039
  0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0,
  // 2040-2049
  /** Add By JJonline@JJonline.Cn**/
  0x14b63, 0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0,
  // 2050-2059
  0x0a2e0, 0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4,
  // 2060-2069
  0x052d0, 0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0,
  // 2070-2079
  0x0b273, 0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160,
  // 2080-2089
  0x0e968, 0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a2d0, 0x0d150, 0x0f252,
  // 2090-2099
  0x0d520],
  // 2100

  /**
      * 公历每个月份的天数普通表
      * @Array Of Property
      * @return Number
      */
  solarMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],
  /**
      * 天干地支之天干速查表
      * @Array Of Property trans["甲","乙","丙","丁","戊","己","庚","辛","壬","癸"]
      * @return Cn string
      */
  Gan: ["\u7532", "\u4E59", "\u4E19", "\u4E01", "\u620A", "\u5DF1", "\u5E9A", "\u8F9B", "\u58EC", "\u7678"],
  /**
      * 天干地支之地支速查表
      * @Array Of Property
      * @trans["子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥"]
      * @return Cn string
      */
  Zhi: ["\u5B50", "\u4E11", "\u5BC5", "\u536F", "\u8FB0", "\u5DF3", "\u5348", "\u672A", "\u7533", "\u9149", "\u620C", "\u4EA5"],
  /**
      * 天干地支之地支速查表<=>生肖
      * @Array Of Property
      * @trans["鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪"]
      * @return Cn string
      */
  Animals: ["\u9F20", "\u725B", "\u864E", "\u5154", "\u9F99", "\u86C7", "\u9A6C", "\u7F8A", "\u7334", "\u9E21", "\u72D7", "\u732A"],
  /**
      * 24节气速查表
      * @Array Of Property
      * @trans["小寒","大寒","立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至"]
      * @return Cn string
      */
  solarTerm: ["\u5C0F\u5BD2", "\u5927\u5BD2", "\u7ACB\u6625", "\u96E8\u6C34", "\u60CA\u86F0", "\u6625\u5206", "\u6E05\u660E", "\u8C37\u96E8", "\u7ACB\u590F", "\u5C0F\u6EE1", "\u8292\u79CD", "\u590F\u81F3", "\u5C0F\u6691", "\u5927\u6691", "\u7ACB\u79CB", "\u5904\u6691", "\u767D\u9732", "\u79CB\u5206", "\u5BD2\u9732", "\u971C\u964D", "\u7ACB\u51AC", "\u5C0F\u96EA", "\u5927\u96EA", "\u51AC\u81F3"],
  /**
      * 1900-2100各年的24节气日期速查表
      * @Array Of Property
      * @return 0x string For splice
      */
  sTermInfo: ['9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa', '9778397bd19801ec9210c965cc920e', '97b6b97bd19801ec95f8c965cc920f', '97bd09801d98082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd197c36c9210c9274c91aa', '97b6b97bd19801ec95f8c965cc920e', '97bd09801d98082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec95f8c965cc920e', '97bcf97c3598082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd097bd07f595b0b6fc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '9778397bd19801ec9210c9274c920e', '97b6b97bd19801ec95f8c965cc920f', '97bd07f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c920e', '97b6b97bd19801ec95f8c965cc920f', '97bd07f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bd07f1487f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c9274c920e', '97bcf7f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c91aa', '97b6b97bd197c36c9210c9274c920e', '97bcf7f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c920e', '97b6b7f0e47f531b0723b0b6fb0722', '7f0e37f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36b0b70c9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e37f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc9210c8dc2', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0787b0721', '7f0e27f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c91aa', '97b6b7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '977837f0e37f149b0723b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f5307f595b0b0bc920fb0722', '7f0e397bd097c35b0b6fc9210c8dc2', '977837f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e37f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc9210c8dc2', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0723b06bd', '7f07e7f0e37f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f1487f595b0b0bb0b6fb0722', '7f0e37f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e37f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f149b0723b0787b0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0723b06bd', '7f07e7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722', '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0723b06bd', '7f07e7f0e37f14998083b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722', '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14898082b0723b02d5', '7f07e7f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e36665b66aa89801e9808297c35', '665f67f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e36665b66a449801e9808297c35', '665f67f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e36665b66a449801e9808297c35', '665f67f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e26665b66a449801e9808297c35', '665f67f0e37f1489801eb072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722'],
  /**
      * 数字转中文速查表
      * @Array Of Property
      * @trans ['日','一','二','三','四','五','六','七','八','九','十']
      * @return Cn string
      */
  nStr1: ["\u65E5", "\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D", "\u4E03", "\u516B", "\u4E5D", "\u5341"],
  /**
      * 日期转农历称呼速查表
      * @Array Of Property
      * @trans ['初','十','廿','卅']
      * @return Cn string
      */
  nStr2: ["\u521D", "\u5341", "\u5EFF", "\u5345"],
  /**
      * 月份转农历称呼速查表
      * @Array Of Property
      * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']
      * @return Cn string
      */
  nStr3: ["\u6B63", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D", "\u4E03", "\u516B", "\u4E5D", "\u5341", "\u51AC", "\u814A"],
  /**
      * 返回农历y年一整年的总天数
      * @param lunar Year
      * @return Number
      * @eg:var count = calendar.lYearDays(1987) ;//count=387
      */
  lYearDays: function lYearDays(y) {
    var i;
    var sum = 348;
    for (i = 0x8000; i > 0x8; i >>= 1) {
      sum += this.lunarInfo[y - 1900] & i ? 1 : 0;
    }
    return sum + this.leapDays(y);
  },
  /**
      * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0
      * @param lunar Year
      * @return Number (0-12)
      * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6
      */
  leapMonth: function leapMonth(y) {
    // 闰字编码 \u95f0
    return this.lunarInfo[y - 1900] & 0xf;
  },
  /**
      * 返回农历y年闰月的天数 若该年没有闰月则返回0
      * @param lunar Year
      * @return Number (0、29、30)
      * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29
      */
  leapDays: function leapDays(y) {
    if (this.leapMonth(y)) {
      return this.lunarInfo[y - 1900] & 0x10000 ? 30 : 29;
    }
    return 0;
  },
  /**
      * 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法
      * @param lunar Year
      * @return Number (-1、29、30)
      * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29
      */
  monthDays: function monthDays(y, m) {
    if (m > 12 || m < 1) {
      return -1;
    } // 月份参数从1至12，参数错误返回-1
    return this.lunarInfo[y - 1900] & 0x10000 >> m ? 30 : 29;
  },
  /**
      * 返回公历(!)y年m月的天数
      * @param solar Year
      * @return Number (-1、28、29、30、31)
      * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30
      */
  solarDays: function solarDays(y, m) {
    if (m > 12 || m < 1) {
      return -1;
    } // 若参数错误 返回-1
    var ms = m - 1;
    if (ms == 1) {
      // 2月份的闰平规律测算后确认返回28或29
      return y % 4 == 0 && y % 100 != 0 || y % 400 == 0 ? 29 : 28;
    } else {
      return this.solarMonth[ms];
    }
  },
  /**
     * 农历年份转换为干支纪年
     * @param  lYear 农历年的年份数
     * @return Cn string
     */
  toGanZhiYear: function toGanZhiYear(lYear) {
    var ganKey = (lYear - 3) % 10;
    var zhiKey = (lYear - 3) % 12;
    if (ganKey == 0) ganKey = 10; // 如果余数为0则为最后一个天干
    if (zhiKey == 0) zhiKey = 12; // 如果余数为0则为最后一个地支
    return this.Gan[ganKey - 1] + this.Zhi[zhiKey - 1];
  },
  /**
     * 公历月、日判断所属星座
     * @param  cMonth [description]
     * @param  cDay [description]
     * @return Cn string
     */
  toAstro: function toAstro(cMonth, cDay) {
    var s = "\u9B54\u7FAF\u6C34\u74F6\u53CC\u9C7C\u767D\u7F8A\u91D1\u725B\u53CC\u5B50\u5DE8\u87F9\u72EE\u5B50\u5904\u5973\u5929\u79E4\u5929\u874E\u5C04\u624B\u9B54\u7FAF";
    var arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];
    return s.substr(cMonth * 2 - (cDay < arr[cMonth - 1] ? 2 : 0), 2) + "\u5EA7"; // 座
  },

  /**
      * 传入offset偏移量返回干支
      * @param offset 相对甲子的偏移量
      * @return Cn string
      */
  toGanZhi: function toGanZhi(offset) {
    return this.Gan[offset % 10] + this.Zhi[offset % 12];
  },
  /**
      * 传入公历(!)y年获得该年第n个节气的公历日期
      * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起
      * @return day Number
      * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春
      */
  getTerm: function getTerm(y, n) {
    if (y < 1900 || y > 2100) {
      return -1;
    }
    if (n < 1 || n > 24) {
      return -1;
    }
    var _table = this.sTermInfo[y - 1900];
    var _info = [parseInt('0x' + _table.substr(0, 5)).toString(), parseInt('0x' + _table.substr(5, 5)).toString(), parseInt('0x' + _table.substr(10, 5)).toString(), parseInt('0x' + _table.substr(15, 5)).toString(), parseInt('0x' + _table.substr(20, 5)).toString(), parseInt('0x' + _table.substr(25, 5)).toString()];
    var _calday = [_info[0].substr(0, 1), _info[0].substr(1, 2), _info[0].substr(3, 1), _info[0].substr(4, 2), _info[1].substr(0, 1), _info[1].substr(1, 2), _info[1].substr(3, 1), _info[1].substr(4, 2), _info[2].substr(0, 1), _info[2].substr(1, 2), _info[2].substr(3, 1), _info[2].substr(4, 2), _info[3].substr(0, 1), _info[3].substr(1, 2), _info[3].substr(3, 1), _info[3].substr(4, 2), _info[4].substr(0, 1), _info[4].substr(1, 2), _info[4].substr(3, 1), _info[4].substr(4, 2), _info[5].substr(0, 1), _info[5].substr(1, 2), _info[5].substr(3, 1), _info[5].substr(4, 2)];
    return parseInt(_calday[n - 1]);
  },
  /**
      * 传入农历数字月份返回汉语通俗表示法
      * @param lunar month
      * @return Cn string
      * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'
      */
  toChinaMonth: function toChinaMonth(m) {
    // 月 => \u6708
    if (m > 12 || m < 1) {
      return -1;
    } // 若参数错误 返回-1
    var s = this.nStr3[m - 1];
    s += "\u6708"; // 加上月字
    return s;
  },
  /**
      * 传入农历日期数字返回汉字表示法
      * @param lunar day
      * @return Cn string
      * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'
      */
  toChinaDay: function toChinaDay(d) {
    // 日 => \u65e5
    var s;
    switch (d) {
      case 10:
        s = "\u521D\u5341";
        break;
      case 20:
        s = "\u4E8C\u5341";
        break;
        break;
      case 30:
        s = "\u4E09\u5341";
        break;
        break;
      default:
        s = this.nStr2[Math.floor(d / 10)];
        s += this.nStr1[d % 10];
    }
    return s;
  },
  /**
      * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”
      * @param y year
      * @return Cn string
      * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'
      */
  getAnimal: function getAnimal(y) {
    return this.Animals[(y - 4) % 12];
  },
  /**
      * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON
      * @param y  solar year
      * @param m  solar month
      * @param d  solar day
      * @return JSON object
      * @eg:console.log(calendar.solar2lunar(1987,11,01));
      */
  solar2lunar: function solar2lunar(y, m, d) {
    // 参数区间1900.1.31~2100.12.31
    // 年份限定、上限
    if (y < 1900 || y > 2100) {
      return -1; // undefined转换为数字变为NaN
    }
    // 公历传参最下限
    if (y == 1900 && m == 1 && d < 31) {
      return -1;
    }
    // 未传参  获得当天
    if (!y) {
      var objDate = new Date();
    } else {
      var objDate = new Date(y, parseInt(m) - 1, d);
    }
    var i;
    var leap = 0;
    var temp = 0;
    // 修正ymd参数
    var y = objDate.getFullYear();
    var m = objDate.getMonth() + 1;
    var d = objDate.getDate();
    var offset = (Date.UTC(objDate.getFullYear(), objDate.getMonth(), objDate.getDate()) - Date.UTC(1900, 0, 31)) / 86400000;
    for (i = 1900; i < 2101 && offset > 0; i++) {
      temp = this.lYearDays(i);
      offset -= temp;
    }
    if (offset < 0) {
      offset += temp;
      i--;
    }

    // 是否今天
    var isTodayObj = new Date();
    var isToday = false;
    if (isTodayObj.getFullYear() == y && isTodayObj.getMonth() + 1 == m && isTodayObj.getDate() == d) {
      isToday = true;
    }
    // 星期几
    var nWeek = objDate.getDay();
    var cWeek = this.nStr1[nWeek];
    // 数字表示周几顺应天朝周一开始的惯例
    if (nWeek == 0) {
      nWeek = 7;
    }
    // 农历年
    var year = i;
    var leap = this.leapMonth(i); // 闰哪个月
    var isLeap = false;

    // 效验闰月
    for (i = 1; i < 13 && offset > 0; i++) {
      // 闰月
      if (leap > 0 && i == leap + 1 && isLeap == false) {
        --i;
        isLeap = true;
        temp = this.leapDays(year); // 计算农历闰月天数
      } else {
        temp = this.monthDays(year, i); // 计算农历普通月天数
      }
      // 解除闰月
      if (isLeap == true && i == leap + 1) {
        isLeap = false;
      }
      offset -= temp;
    }
    // 闰月导致数组下标重叠取反
    if (offset == 0 && leap > 0 && i == leap + 1) {
      if (isLeap) {
        isLeap = false;
      } else {
        isLeap = true;
        --i;
      }
    }
    if (offset < 0) {
      offset += temp;
      --i;
    }
    // 农历月
    var month = i;
    // 农历日
    var day = offset + 1;
    // 天干地支处理
    var sm = m - 1;
    var gzY = this.toGanZhiYear(year);

    // 当月的两个节气
    // bugfix-2017-7-24 11:03:38 use lunar Year Param `y` Not `year`
    var firstNode = this.getTerm(y, m * 2 - 1); // 返回当月「节」为几日开始
    var secondNode = this.getTerm(y, m * 2); // 返回当月「节」为几日开始

    // 依据12节气修正干支月
    var gzM = this.toGanZhi((y - 1900) * 12 + m + 11);
    if (d >= firstNode) {
      gzM = this.toGanZhi((y - 1900) * 12 + m + 12);
    }

    // 传入的日期的节气与否
    var isTerm = false;
    var Term = null;
    if (firstNode == d) {
      isTerm = true;
      Term = this.solarTerm[m * 2 - 2];
    }
    if (secondNode == d) {
      isTerm = true;
      Term = this.solarTerm[m * 2 - 1];
    }
    // 日柱 当月一日与 1900/1/1 相差天数
    var dayCyclical = Date.UTC(y, sm, 1, 0, 0, 0, 0) / 86400000 + 25567 + 10;
    var gzD = this.toGanZhi(dayCyclical + d - 1);
    // 该日期所属的星座
    var astro = this.toAstro(m, d);
    return {
      'lYear': year,
      'lMonth': month,
      'lDay': day,
      'Animal': this.getAnimal(year),
      'IMonthCn': (isLeap ? "\u95F0" : '') + this.toChinaMonth(month),
      'IDayCn': this.toChinaDay(day),
      'cYear': y,
      'cMonth': m,
      'cDay': d,
      'gzYear': gzY,
      'gzMonth': gzM,
      'gzDay': gzD,
      'isToday': isToday,
      'isLeap': isLeap,
      'nWeek': nWeek,
      'ncWeek': "\u661F\u671F" + cWeek,
      'isTerm': isTerm,
      'Term': Term,
      'astro': astro
    };
  },
  /**
      * 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON
      * @param y  lunar year
      * @param m  lunar month
      * @param d  lunar day
      * @param isLeapMonth  lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]
      * @return JSON object
      * @eg:console.log(calendar.lunar2solar(1987,9,10));
      */
  lunar2solar: function lunar2solar(y, m, d, isLeapMonth) {
    // 参数区间1900.1.31~2100.12.1
    var isLeapMonth = !!isLeapMonth;
    var leapOffset = 0;
    var leapMonth = this.leapMonth(y);
    var leapDay = this.leapDays(y);
    if (isLeapMonth && leapMonth != m) {
      return -1;
    } // 传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同
    if (y == 2100 && m == 12 && d > 1 || y == 1900 && m == 1 && d < 31) {
      return -1;
    } // 超出了最大极限值
    var day = this.monthDays(y, m);
    var _day = day;
    // bugFix 2016-9-25
    // if month is leap, _day use leapDays method
    if (isLeapMonth) {
      _day = this.leapDays(y, m);
    }
    if (y < 1900 || y > 2100 || d > _day) {
      return -1;
    } // 参数合法性效验

    // 计算农历的时间差
    var offset = 0;
    for (var i = 1900; i < y; i++) {
      offset += this.lYearDays(i);
    }
    var leap = 0;
    var isAdd = false;
    for (var i = 1; i < m; i++) {
      leap = this.leapMonth(y);
      if (!isAdd) {
        // 处理闰月
        if (leap <= i && leap > 0) {
          offset += this.leapDays(y);
          isAdd = true;
        }
      }
      offset += this.monthDays(y, i);
    }
    // 转换闰月农历 需补充该年闰月的前一个月的时差
    if (isLeapMonth) {
      offset += day;
    }
    // 1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)
    var stmap = Date.UTC(1900, 1, 30, 0, 0, 0);
    var calObj = new Date((offset + d - 31) * 86400000 + stmap);
    var cY = calObj.getUTCFullYear();
    var cM = calObj.getUTCMonth() + 1;
    var cD = calObj.getUTCDate();
    return this.solar2lunar(cY, cM, cD);
  }
};
var _default = calendar;
exports.default = _default;

/***/ }),

/***/ 205:
/*!*************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-calendar/i18n/index.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _en = _interopRequireDefault(__webpack_require__(/*! ./en.json */ 206));
var _zhHans = _interopRequireDefault(__webpack_require__(/*! ./zh-Hans.json */ 207));
var _zhHant = _interopRequireDefault(__webpack_require__(/*! ./zh-Hant.json */ 208));
var _default = {
  en: _en.default,
  'zh-Hans': _zhHans.default,
  'zh-Hant': _zhHant.default
};
exports.default = _default;

/***/ }),

/***/ 206:
/*!************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-calendar/i18n/en.json ***!
  \************************************************************************************/
/*! exports provided: uni-calender.ok, uni-calender.cancel, uni-calender.today, uni-calender.MON, uni-calender.TUE, uni-calender.WED, uni-calender.THU, uni-calender.FRI, uni-calender.SAT, uni-calender.SUN, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"uni-calender.ok\":\"ok\",\"uni-calender.cancel\":\"cancel\",\"uni-calender.today\":\"today\",\"uni-calender.MON\":\"MON\",\"uni-calender.TUE\":\"TUE\",\"uni-calender.WED\":\"WED\",\"uni-calender.THU\":\"THU\",\"uni-calender.FRI\":\"FRI\",\"uni-calender.SAT\":\"SAT\",\"uni-calender.SUN\":\"SUN\"}");

/***/ }),

/***/ 207:
/*!*****************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-calendar/i18n/zh-Hans.json ***!
  \*****************************************************************************************/
/*! exports provided: uni-calender.ok, uni-calender.cancel, uni-calender.today, uni-calender.SUN, uni-calender.MON, uni-calender.TUE, uni-calender.WED, uni-calender.THU, uni-calender.FRI, uni-calender.SAT, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"uni-calender.ok\":\"确定\",\"uni-calender.cancel\":\"取消\",\"uni-calender.today\":\"今日\",\"uni-calender.SUN\":\"日\",\"uni-calender.MON\":\"一\",\"uni-calender.TUE\":\"二\",\"uni-calender.WED\":\"三\",\"uni-calender.THU\":\"四\",\"uni-calender.FRI\":\"五\",\"uni-calender.SAT\":\"六\"}");

/***/ }),

/***/ 208:
/*!*****************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-calendar/i18n/zh-Hant.json ***!
  \*****************************************************************************************/
/*! exports provided: uni-calender.ok, uni-calender.cancel, uni-calender.today, uni-calender.SUN, uni-calender.MON, uni-calender.TUE, uni-calender.WED, uni-calender.THU, uni-calender.FRI, uni-calender.SAT, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"uni-calender.ok\":\"確定\",\"uni-calender.cancel\":\"取消\",\"uni-calender.today\":\"今日\",\"uni-calender.SUN\":\"日\",\"uni-calender.MON\":\"一\",\"uni-calender.TUE\":\"二\",\"uni-calender.WED\":\"三\",\"uni-calender.THU\":\"四\",\"uni-calender.FRI\":\"五\",\"uni-calender.SAT\":\"六\"}");

/***/ }),

/***/ 21:
/*!*************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-i18n/dist/uni-i18n.es.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOCALE_ZH_HANT = exports.LOCALE_ZH_HANS = exports.LOCALE_FR = exports.LOCALE_ES = exports.LOCALE_EN = exports.I18n = exports.Formatter = void 0;
exports.compileI18nJsonStr = compileI18nJsonStr;
exports.hasI18nJson = hasI18nJson;
exports.initVueI18n = initVueI18n;
exports.isI18nStr = isI18nStr;
exports.isString = void 0;
exports.normalizeLocale = normalizeLocale;
exports.parseI18nJson = parseI18nJson;
exports.resolveLocale = resolveLocale;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 4));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 22));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 23));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 12));
var isArray = Array.isArray;
var isObject = function isObject(val) {
  return val !== null && (0, _typeof2.default)(val) === 'object';
};
var defaultDelimiters = ['{', '}'];
var BaseFormatter = /*#__PURE__*/function () {
  function BaseFormatter() {
    (0, _classCallCheck2.default)(this, BaseFormatter);
    this._caches = Object.create(null);
  }
  (0, _createClass2.default)(BaseFormatter, [{
    key: "interpolate",
    value: function interpolate(message, values) {
      var delimiters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDelimiters;
      if (!values) {
        return [message];
      }
      var tokens = this._caches[message];
      if (!tokens) {
        tokens = parse(message, delimiters);
        this._caches[message] = tokens;
      }
      return compile(tokens, values);
    }
  }]);
  return BaseFormatter;
}();
exports.Formatter = BaseFormatter;
var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, _ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    startDelimiter = _ref2[0],
    endDelimiter = _ref2[1];
  var tokens = [];
  var position = 0;
  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({
          type: 'text',
          value: text
        });
      }
      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === endDelimiter;
      var type = RE_TOKEN_LIST_VALUE.test(sub) ? 'list' : isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ? 'named' : 'unknown';
      tokens.push({
        value: sub,
        type: type
      });
    }
    //  else if (char === '%') {
    //   // when found rails i18n syntax, skip text capture
    //   if (format[position] !== '{') {
    //     text += char
    //   }
    // }
    else {
      text += char;
    }
  }
  text && tokens.push({
    type: 'text',
    value: text
  });
  return tokens;
}
function compile(tokens, values) {
  var compiled = [];
  var index = 0;
  var mode = isArray(values) ? 'list' : isObject(values) ? 'named' : 'unknown';
  if (mode === 'unknown') {
    return compiled;
  }
  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else {
          if (true) {
            console.warn("Type of token '".concat(token.type, "' and format of value '").concat(mode, "' don't match!"));
          }
        }
        break;
      case 'unknown':
        if (true) {
          console.warn("Detect 'unknown' type of token!");
        }
        break;
    }
    index++;
  }
  return compiled;
}
var LOCALE_ZH_HANS = 'zh-Hans';
exports.LOCALE_ZH_HANS = LOCALE_ZH_HANS;
var LOCALE_ZH_HANT = 'zh-Hant';
exports.LOCALE_ZH_HANT = LOCALE_ZH_HANT;
var LOCALE_EN = 'en';
exports.LOCALE_EN = LOCALE_EN;
var LOCALE_FR = 'fr';
exports.LOCALE_FR = LOCALE_FR;
var LOCALE_ES = 'es';
exports.LOCALE_ES = LOCALE_ES;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn(val, key) {
  return hasOwnProperty.call(val, key);
};
var defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}
var I18n = /*#__PURE__*/function () {
  function I18n(_ref3) {
    var locale = _ref3.locale,
      fallbackLocale = _ref3.fallbackLocale,
      messages = _ref3.messages,
      watcher = _ref3.watcher,
      formater = _ref3.formater;
    (0, _classCallCheck2.default)(this, I18n);
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }
  (0, _createClass2.default)(I18n, [{
    key: "setLocale",
    value: function setLocale(locale) {
      var _this = this;
      var oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        // 可能初始化时不存在
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      // 仅发生变化时，通知
      if (oldLocale !== this.locale) {
        this.watchers.forEach(function (watcher) {
          watcher(_this.locale, oldLocale);
        });
      }
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.locale;
    }
  }, {
    key: "watchLocale",
    value: function watchLocale(fn) {
      var _this2 = this;
      var index = this.watchers.push(fn) - 1;
      return function () {
        _this2.watchers.splice(index, 1);
      };
    }
  }, {
    key: "add",
    value: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message);
        } else {
          Object.keys(message).forEach(function (key) {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message[key];
            }
          });
        }
      } else {
        this.messages[locale] = message;
      }
    }
  }, {
    key: "f",
    value: function f(message, values, delimiters) {
      return this.formater.interpolate(message, values, delimiters).join('');
    }
  }, {
    key: "t",
    value: function t(key, locale, values) {
      var message = this.message;
      if (typeof locale === 'string') {
        locale = normalizeLocale(locale, this.messages);
        locale && (message = this.messages[locale]);
      } else {
        values = locale;
      }
      if (!hasOwn(message, key)) {
        console.warn("Cannot translate the value of keypath ".concat(key, ". Use the value of keypath as default."));
        return key;
      }
      return this.formater.interpolate(message[key], values).join('');
    }
  }]);
  return I18n;
}();
exports.I18n = I18n;
function watchAppLocale(appVm, i18n) {
  // 需要保证 watch 的触发在组件渲染之前
  if (appVm.$watchLocale) {
    // vue2
    appVm.$watchLocale(function (newLocale) {
      i18n.setLocale(newLocale);
    });
  } else {
    appVm.$watch(function () {
      return appVm.$locale;
    }, function (newLocale) {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof uni !== 'undefined' && uni.getLocale) {
    return uni.getLocale();
  }
  // 小程序平台，uni 和 uni-i18n 互相引用，导致访问不到 uni，故在 global 上挂了 getLocale
  if (typeof global !== 'undefined' && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale) {
  var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var fallbackLocale = arguments.length > 2 ? arguments[2] : undefined;
  var watcher = arguments.length > 3 ? arguments[3] : undefined;
  // 兼容旧版本入参
  if (typeof locale !== 'string') {
    var _ref4 = [messages, locale];
    locale = _ref4[0];
    messages = _ref4[1];
  }
  if (typeof locale !== 'string') {
    // 因为小程序平台，uni-i18n 和 uni 互相引用，导致此时访问 uni 时，为 undefined
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== 'string') {
    fallbackLocale = typeof __uniConfig !== 'undefined' && __uniConfig.fallbackLocale || LOCALE_EN;
  }
  var i18n = new I18n({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    watcher: watcher
  });
  var _t = function t(key, values) {
    if (typeof getApp !== 'function') {
      // app view
      /* eslint-disable no-func-assign */
      _t = function t(key, values) {
        return i18n.t(key, values);
      };
    } else {
      var isWatchedAppLocale = false;
      _t = function t(key, values) {
        var appVm = getApp().$vm;
        // 可能$vm还不存在，比如在支付宝小程序中，组件定义较早，在props的default里使用了t()函数（如uni-goods-nav），此时app还未初始化
        // options: {
        // 	type: Array,
        // 	default () {
        // 		return [{
        // 			icon: 'shop',
        // 			text: t("uni-goods-nav.options.shop"),
        // 		}, {
        // 			icon: 'cart',
        // 			text: t("uni-goods-nav.options.cart")
        // 		}]
        // 	}
        // },
        if (appVm) {
          // 触发响应式
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key, values);
      };
    }
    return _t(key, values);
  };
  return {
    i18n: i18n,
    f: function f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t: function t(key, values) {
      return _t(key, values);
    },
    add: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return i18n.add(locale, message, override);
    },
    watch: function watch(fn) {
      return i18n.watchLocale(fn);
    },
    getLocale: function getLocale() {
      return i18n.getLocale();
    },
    setLocale: function setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    }
  };
}
var isString = function isString(val) {
  return typeof val === 'string';
};
exports.isString = isString;
var formater;
function hasI18nJson(jsonObj, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  return walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        return true;
      }
    } else {
      return hasI18nJson(value, delimiters);
    }
  });
}
function parseI18nJson(jsonObj, values, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        jsonObj[key] = compileStr(value, values, delimiters);
      }
    } else {
      parseI18nJson(value, values, delimiters);
    }
  });
  return jsonObj;
}
function compileI18nJsonStr(jsonStr, _ref5) {
  var locale = _ref5.locale,
    locales = _ref5.locales,
    delimiters = _ref5.delimiters;
  if (!isI18nStr(jsonStr, delimiters)) {
    return jsonStr;
  }
  if (!formater) {
    formater = new BaseFormatter();
  }
  var localeValues = [];
  Object.keys(locales).forEach(function (name) {
    if (name !== locale) {
      localeValues.push({
        locale: name,
        values: locales[name]
      });
    }
  });
  localeValues.unshift({
    locale: locale,
    values: locales[locale]
  });
  try {
    return JSON.stringify(compileJsonObj(JSON.parse(jsonStr), localeValues, delimiters), null, 2);
  } catch (e) {}
  return jsonStr;
}
function isI18nStr(value, delimiters) {
  return value.indexOf(delimiters[0]) > -1;
}
function compileStr(value, values, delimiters) {
  return formater.interpolate(value, values, delimiters).join('');
}
function compileValue(jsonObj, key, localeValues, delimiters) {
  var value = jsonObj[key];
  if (isString(value)) {
    // 存在国际化
    if (isI18nStr(value, delimiters)) {
      jsonObj[key] = compileStr(value, localeValues[0].values, delimiters);
      if (localeValues.length > 1) {
        // 格式化国际化语言
        var valueLocales = jsonObj[key + 'Locales'] = {};
        localeValues.forEach(function (localValue) {
          valueLocales[localValue.locale] = compileStr(value, localValue.values, delimiters);
        });
      }
    }
  } else {
    compileJsonObj(value, localeValues, delimiters);
  }
}
function compileJsonObj(jsonObj, localeValues, delimiters) {
  walkJsonObj(jsonObj, function (jsonObj, key) {
    compileValue(jsonObj, key, localeValues, delimiters);
  });
  return jsonObj;
}
function walkJsonObj(jsonObj, walk) {
  if (isArray(jsonObj)) {
    for (var i = 0; i < jsonObj.length; i++) {
      if (walk(jsonObj, i)) {
        return true;
      }
    }
  } else if (isObject(jsonObj)) {
    for (var key in jsonObj) {
      if (walk(jsonObj, key)) {
        return true;
      }
    }
  }
  return false;
}
function resolveLocale(locales) {
  return function (locale) {
    if (!locale) {
      return locale;
    }
    locale = normalizeLocale(locale) || locale;
    return resolveLocaleChain(locale).find(function (locale) {
      return locales.indexOf(locale) > -1;
    });
  };
}
function resolveLocaleChain(locale) {
  var chain = [];
  var tokens = locale.split('-');
  while (tokens.length) {
    chain.push(tokens.join('-'));
    tokens.pop();
  }
  return chain;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 2)))

/***/ }),

/***/ 22:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 23:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 11);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 230:
/*!*****************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-icons/icons.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  "id": "2852637",
  "name": "uniui图标库",
  "font_family": "uniicons",
  "css_prefix_text": "uniui-",
  "description": "",
  "glyphs": [{
    "icon_id": "25027049",
    "name": "yanse",
    "font_class": "color",
    "unicode": "e6cf",
    "unicode_decimal": 59087
  }, {
    "icon_id": "25027048",
    "name": "wallet",
    "font_class": "wallet",
    "unicode": "e6b1",
    "unicode_decimal": 59057
  }, {
    "icon_id": "25015720",
    "name": "settings-filled",
    "font_class": "settings-filled",
    "unicode": "e6ce",
    "unicode_decimal": 59086
  }, {
    "icon_id": "25015434",
    "name": "shimingrenzheng-filled",
    "font_class": "auth-filled",
    "unicode": "e6cc",
    "unicode_decimal": 59084
  }, {
    "icon_id": "24934246",
    "name": "shop-filled",
    "font_class": "shop-filled",
    "unicode": "e6cd",
    "unicode_decimal": 59085
  }, {
    "icon_id": "24934159",
    "name": "staff-filled-01",
    "font_class": "staff-filled",
    "unicode": "e6cb",
    "unicode_decimal": 59083
  }, {
    "icon_id": "24932461",
    "name": "VIP-filled",
    "font_class": "vip-filled",
    "unicode": "e6c6",
    "unicode_decimal": 59078
  }, {
    "icon_id": "24932462",
    "name": "plus_circle_fill",
    "font_class": "plus-filled",
    "unicode": "e6c7",
    "unicode_decimal": 59079
  }, {
    "icon_id": "24932463",
    "name": "folder_add-filled",
    "font_class": "folder-add-filled",
    "unicode": "e6c8",
    "unicode_decimal": 59080
  }, {
    "icon_id": "24932464",
    "name": "yanse-filled",
    "font_class": "color-filled",
    "unicode": "e6c9",
    "unicode_decimal": 59081
  }, {
    "icon_id": "24932465",
    "name": "tune-filled",
    "font_class": "tune-filled",
    "unicode": "e6ca",
    "unicode_decimal": 59082
  }, {
    "icon_id": "24932455",
    "name": "a-rilidaka-filled",
    "font_class": "calendar-filled",
    "unicode": "e6c0",
    "unicode_decimal": 59072
  }, {
    "icon_id": "24932456",
    "name": "notification-filled",
    "font_class": "notification-filled",
    "unicode": "e6c1",
    "unicode_decimal": 59073
  }, {
    "icon_id": "24932457",
    "name": "wallet-filled",
    "font_class": "wallet-filled",
    "unicode": "e6c2",
    "unicode_decimal": 59074
  }, {
    "icon_id": "24932458",
    "name": "paihangbang-filled",
    "font_class": "medal-filled",
    "unicode": "e6c3",
    "unicode_decimal": 59075
  }, {
    "icon_id": "24932459",
    "name": "gift-filled",
    "font_class": "gift-filled",
    "unicode": "e6c4",
    "unicode_decimal": 59076
  }, {
    "icon_id": "24932460",
    "name": "fire-filled",
    "font_class": "fire-filled",
    "unicode": "e6c5",
    "unicode_decimal": 59077
  }, {
    "icon_id": "24928001",
    "name": "refreshempty",
    "font_class": "refreshempty",
    "unicode": "e6bf",
    "unicode_decimal": 59071
  }, {
    "icon_id": "24926853",
    "name": "location-ellipse",
    "font_class": "location-filled",
    "unicode": "e6af",
    "unicode_decimal": 59055
  }, {
    "icon_id": "24926735",
    "name": "person-filled",
    "font_class": "person-filled",
    "unicode": "e69d",
    "unicode_decimal": 59037
  }, {
    "icon_id": "24926703",
    "name": "personadd-filled",
    "font_class": "personadd-filled",
    "unicode": "e698",
    "unicode_decimal": 59032
  }, {
    "icon_id": "24923351",
    "name": "back",
    "font_class": "back",
    "unicode": "e6b9",
    "unicode_decimal": 59065
  }, {
    "icon_id": "24923352",
    "name": "forward",
    "font_class": "forward",
    "unicode": "e6ba",
    "unicode_decimal": 59066
  }, {
    "icon_id": "24923353",
    "name": "arrowthinright",
    "font_class": "arrow-right",
    "unicode": "e6bb",
    "unicode_decimal": 59067
  }, {
    "icon_id": "24923353",
    "name": "arrowthinright",
    "font_class": "arrowthinright",
    "unicode": "e6bb",
    "unicode_decimal": 59067
  }, {
    "icon_id": "24923354",
    "name": "arrowthinleft",
    "font_class": "arrow-left",
    "unicode": "e6bc",
    "unicode_decimal": 59068
  }, {
    "icon_id": "24923354",
    "name": "arrowthinleft",
    "font_class": "arrowthinleft",
    "unicode": "e6bc",
    "unicode_decimal": 59068
  }, {
    "icon_id": "24923355",
    "name": "arrowthinup",
    "font_class": "arrow-up",
    "unicode": "e6bd",
    "unicode_decimal": 59069
  }, {
    "icon_id": "24923355",
    "name": "arrowthinup",
    "font_class": "arrowthinup",
    "unicode": "e6bd",
    "unicode_decimal": 59069
  }, {
    "icon_id": "24923356",
    "name": "arrowthindown",
    "font_class": "arrow-down",
    "unicode": "e6be",
    "unicode_decimal": 59070
  }, {
    "icon_id": "24923356",
    "name": "arrowthindown",
    "font_class": "arrowthindown",
    "unicode": "e6be",
    "unicode_decimal": 59070
  }, {
    "icon_id": "24923349",
    "name": "arrowdown",
    "font_class": "bottom",
    "unicode": "e6b8",
    "unicode_decimal": 59064
  }, {
    "icon_id": "24923349",
    "name": "arrowdown",
    "font_class": "arrowdown",
    "unicode": "e6b8",
    "unicode_decimal": 59064
  }, {
    "icon_id": "24923346",
    "name": "arrowright",
    "font_class": "right",
    "unicode": "e6b5",
    "unicode_decimal": 59061
  }, {
    "icon_id": "24923346",
    "name": "arrowright",
    "font_class": "arrowright",
    "unicode": "e6b5",
    "unicode_decimal": 59061
  }, {
    "icon_id": "24923347",
    "name": "arrowup",
    "font_class": "top",
    "unicode": "e6b6",
    "unicode_decimal": 59062
  }, {
    "icon_id": "24923347",
    "name": "arrowup",
    "font_class": "arrowup",
    "unicode": "e6b6",
    "unicode_decimal": 59062
  }, {
    "icon_id": "24923348",
    "name": "arrowleft",
    "font_class": "left",
    "unicode": "e6b7",
    "unicode_decimal": 59063
  }, {
    "icon_id": "24923348",
    "name": "arrowleft",
    "font_class": "arrowleft",
    "unicode": "e6b7",
    "unicode_decimal": 59063
  }, {
    "icon_id": "24923334",
    "name": "eye",
    "font_class": "eye",
    "unicode": "e651",
    "unicode_decimal": 58961
  }, {
    "icon_id": "24923335",
    "name": "eye-filled",
    "font_class": "eye-filled",
    "unicode": "e66a",
    "unicode_decimal": 58986
  }, {
    "icon_id": "24923336",
    "name": "eye-slash",
    "font_class": "eye-slash",
    "unicode": "e6b3",
    "unicode_decimal": 59059
  }, {
    "icon_id": "24923337",
    "name": "eye-slash-filled",
    "font_class": "eye-slash-filled",
    "unicode": "e6b4",
    "unicode_decimal": 59060
  }, {
    "icon_id": "24923305",
    "name": "info-filled",
    "font_class": "info-filled",
    "unicode": "e649",
    "unicode_decimal": 58953
  }, {
    "icon_id": "24923299",
    "name": "reload-01",
    "font_class": "reload",
    "unicode": "e6b2",
    "unicode_decimal": 59058
  }, {
    "icon_id": "24923195",
    "name": "mic_slash_fill",
    "font_class": "micoff-filled",
    "unicode": "e6b0",
    "unicode_decimal": 59056
  }, {
    "icon_id": "24923165",
    "name": "map-pin-ellipse",
    "font_class": "map-pin-ellipse",
    "unicode": "e6ac",
    "unicode_decimal": 59052
  }, {
    "icon_id": "24923166",
    "name": "map-pin",
    "font_class": "map-pin",
    "unicode": "e6ad",
    "unicode_decimal": 59053
  }, {
    "icon_id": "24923167",
    "name": "location",
    "font_class": "location",
    "unicode": "e6ae",
    "unicode_decimal": 59054
  }, {
    "icon_id": "24923064",
    "name": "starhalf",
    "font_class": "starhalf",
    "unicode": "e683",
    "unicode_decimal": 59011
  }, {
    "icon_id": "24923065",
    "name": "star",
    "font_class": "star",
    "unicode": "e688",
    "unicode_decimal": 59016
  }, {
    "icon_id": "24923066",
    "name": "star-filled",
    "font_class": "star-filled",
    "unicode": "e68f",
    "unicode_decimal": 59023
  }, {
    "icon_id": "24899646",
    "name": "a-rilidaka",
    "font_class": "calendar",
    "unicode": "e6a0",
    "unicode_decimal": 59040
  }, {
    "icon_id": "24899647",
    "name": "fire",
    "font_class": "fire",
    "unicode": "e6a1",
    "unicode_decimal": 59041
  }, {
    "icon_id": "24899648",
    "name": "paihangbang",
    "font_class": "medal",
    "unicode": "e6a2",
    "unicode_decimal": 59042
  }, {
    "icon_id": "24899649",
    "name": "font",
    "font_class": "font",
    "unicode": "e6a3",
    "unicode_decimal": 59043
  }, {
    "icon_id": "24899650",
    "name": "gift",
    "font_class": "gift",
    "unicode": "e6a4",
    "unicode_decimal": 59044
  }, {
    "icon_id": "24899651",
    "name": "link",
    "font_class": "link",
    "unicode": "e6a5",
    "unicode_decimal": 59045
  }, {
    "icon_id": "24899652",
    "name": "notification",
    "font_class": "notification",
    "unicode": "e6a6",
    "unicode_decimal": 59046
  }, {
    "icon_id": "24899653",
    "name": "staff",
    "font_class": "staff",
    "unicode": "e6a7",
    "unicode_decimal": 59047
  }, {
    "icon_id": "24899654",
    "name": "VIP",
    "font_class": "vip",
    "unicode": "e6a8",
    "unicode_decimal": 59048
  }, {
    "icon_id": "24899655",
    "name": "folder_add",
    "font_class": "folder-add",
    "unicode": "e6a9",
    "unicode_decimal": 59049
  }, {
    "icon_id": "24899656",
    "name": "tune",
    "font_class": "tune",
    "unicode": "e6aa",
    "unicode_decimal": 59050
  }, {
    "icon_id": "24899657",
    "name": "shimingrenzheng",
    "font_class": "auth",
    "unicode": "e6ab",
    "unicode_decimal": 59051
  }, {
    "icon_id": "24899565",
    "name": "person",
    "font_class": "person",
    "unicode": "e699",
    "unicode_decimal": 59033
  }, {
    "icon_id": "24899566",
    "name": "email-filled",
    "font_class": "email-filled",
    "unicode": "e69a",
    "unicode_decimal": 59034
  }, {
    "icon_id": "24899567",
    "name": "phone-filled",
    "font_class": "phone-filled",
    "unicode": "e69b",
    "unicode_decimal": 59035
  }, {
    "icon_id": "24899568",
    "name": "phone",
    "font_class": "phone",
    "unicode": "e69c",
    "unicode_decimal": 59036
  }, {
    "icon_id": "24899570",
    "name": "email",
    "font_class": "email",
    "unicode": "e69e",
    "unicode_decimal": 59038
  }, {
    "icon_id": "24899571",
    "name": "personadd",
    "font_class": "personadd",
    "unicode": "e69f",
    "unicode_decimal": 59039
  }, {
    "icon_id": "24899558",
    "name": "chatboxes-filled",
    "font_class": "chatboxes-filled",
    "unicode": "e692",
    "unicode_decimal": 59026
  }, {
    "icon_id": "24899559",
    "name": "contact",
    "font_class": "contact",
    "unicode": "e693",
    "unicode_decimal": 59027
  }, {
    "icon_id": "24899560",
    "name": "chatbubble-filled",
    "font_class": "chatbubble-filled",
    "unicode": "e694",
    "unicode_decimal": 59028
  }, {
    "icon_id": "24899561",
    "name": "contact-filled",
    "font_class": "contact-filled",
    "unicode": "e695",
    "unicode_decimal": 59029
  }, {
    "icon_id": "24899562",
    "name": "chatboxes",
    "font_class": "chatboxes",
    "unicode": "e696",
    "unicode_decimal": 59030
  }, {
    "icon_id": "24899563",
    "name": "chatbubble",
    "font_class": "chatbubble",
    "unicode": "e697",
    "unicode_decimal": 59031
  }, {
    "icon_id": "24881290",
    "name": "upload-filled",
    "font_class": "upload-filled",
    "unicode": "e68e",
    "unicode_decimal": 59022
  }, {
    "icon_id": "24881292",
    "name": "upload",
    "font_class": "upload",
    "unicode": "e690",
    "unicode_decimal": 59024
  }, {
    "icon_id": "24881293",
    "name": "weixin",
    "font_class": "weixin",
    "unicode": "e691",
    "unicode_decimal": 59025
  }, {
    "icon_id": "24881274",
    "name": "compose",
    "font_class": "compose",
    "unicode": "e67f",
    "unicode_decimal": 59007
  }, {
    "icon_id": "24881275",
    "name": "qq",
    "font_class": "qq",
    "unicode": "e680",
    "unicode_decimal": 59008
  }, {
    "icon_id": "24881276",
    "name": "download-filled",
    "font_class": "download-filled",
    "unicode": "e681",
    "unicode_decimal": 59009
  }, {
    "icon_id": "24881277",
    "name": "pengyouquan",
    "font_class": "pyq",
    "unicode": "e682",
    "unicode_decimal": 59010
  }, {
    "icon_id": "24881279",
    "name": "sound",
    "font_class": "sound",
    "unicode": "e684",
    "unicode_decimal": 59012
  }, {
    "icon_id": "24881280",
    "name": "trash-filled",
    "font_class": "trash-filled",
    "unicode": "e685",
    "unicode_decimal": 59013
  }, {
    "icon_id": "24881281",
    "name": "sound-filled",
    "font_class": "sound-filled",
    "unicode": "e686",
    "unicode_decimal": 59014
  }, {
    "icon_id": "24881282",
    "name": "trash",
    "font_class": "trash",
    "unicode": "e687",
    "unicode_decimal": 59015
  }, {
    "icon_id": "24881284",
    "name": "videocam-filled",
    "font_class": "videocam-filled",
    "unicode": "e689",
    "unicode_decimal": 59017
  }, {
    "icon_id": "24881285",
    "name": "spinner-cycle",
    "font_class": "spinner-cycle",
    "unicode": "e68a",
    "unicode_decimal": 59018
  }, {
    "icon_id": "24881286",
    "name": "weibo",
    "font_class": "weibo",
    "unicode": "e68b",
    "unicode_decimal": 59019
  }, {
    "icon_id": "24881288",
    "name": "videocam",
    "font_class": "videocam",
    "unicode": "e68c",
    "unicode_decimal": 59020
  }, {
    "icon_id": "24881289",
    "name": "download",
    "font_class": "download",
    "unicode": "e68d",
    "unicode_decimal": 59021
  }, {
    "icon_id": "24879601",
    "name": "help",
    "font_class": "help",
    "unicode": "e679",
    "unicode_decimal": 59001
  }, {
    "icon_id": "24879602",
    "name": "navigate-filled",
    "font_class": "navigate-filled",
    "unicode": "e67a",
    "unicode_decimal": 59002
  }, {
    "icon_id": "24879603",
    "name": "plusempty",
    "font_class": "plusempty",
    "unicode": "e67b",
    "unicode_decimal": 59003
  }, {
    "icon_id": "24879604",
    "name": "smallcircle",
    "font_class": "smallcircle",
    "unicode": "e67c",
    "unicode_decimal": 59004
  }, {
    "icon_id": "24879605",
    "name": "minus-filled",
    "font_class": "minus-filled",
    "unicode": "e67d",
    "unicode_decimal": 59005
  }, {
    "icon_id": "24879606",
    "name": "micoff",
    "font_class": "micoff",
    "unicode": "e67e",
    "unicode_decimal": 59006
  }, {
    "icon_id": "24879588",
    "name": "closeempty",
    "font_class": "closeempty",
    "unicode": "e66c",
    "unicode_decimal": 58988
  }, {
    "icon_id": "24879589",
    "name": "clear",
    "font_class": "clear",
    "unicode": "e66d",
    "unicode_decimal": 58989
  }, {
    "icon_id": "24879590",
    "name": "navigate",
    "font_class": "navigate",
    "unicode": "e66e",
    "unicode_decimal": 58990
  }, {
    "icon_id": "24879591",
    "name": "minus",
    "font_class": "minus",
    "unicode": "e66f",
    "unicode_decimal": 58991
  }, {
    "icon_id": "24879592",
    "name": "image",
    "font_class": "image",
    "unicode": "e670",
    "unicode_decimal": 58992
  }, {
    "icon_id": "24879593",
    "name": "mic",
    "font_class": "mic",
    "unicode": "e671",
    "unicode_decimal": 58993
  }, {
    "icon_id": "24879594",
    "name": "paperplane",
    "font_class": "paperplane",
    "unicode": "e672",
    "unicode_decimal": 58994
  }, {
    "icon_id": "24879595",
    "name": "close",
    "font_class": "close",
    "unicode": "e673",
    "unicode_decimal": 58995
  }, {
    "icon_id": "24879596",
    "name": "help-filled",
    "font_class": "help-filled",
    "unicode": "e674",
    "unicode_decimal": 58996
  }, {
    "icon_id": "24879597",
    "name": "plus-filled",
    "font_class": "paperplane-filled",
    "unicode": "e675",
    "unicode_decimal": 58997
  }, {
    "icon_id": "24879598",
    "name": "plus",
    "font_class": "plus",
    "unicode": "e676",
    "unicode_decimal": 58998
  }, {
    "icon_id": "24879599",
    "name": "mic-filled",
    "font_class": "mic-filled",
    "unicode": "e677",
    "unicode_decimal": 58999
  }, {
    "icon_id": "24879600",
    "name": "image-filled",
    "font_class": "image-filled",
    "unicode": "e678",
    "unicode_decimal": 59000
  }, {
    "icon_id": "24855900",
    "name": "locked-filled",
    "font_class": "locked-filled",
    "unicode": "e668",
    "unicode_decimal": 58984
  }, {
    "icon_id": "24855901",
    "name": "info",
    "font_class": "info",
    "unicode": "e669",
    "unicode_decimal": 58985
  }, {
    "icon_id": "24855903",
    "name": "locked",
    "font_class": "locked",
    "unicode": "e66b",
    "unicode_decimal": 58987
  }, {
    "icon_id": "24855884",
    "name": "camera-filled",
    "font_class": "camera-filled",
    "unicode": "e658",
    "unicode_decimal": 58968
  }, {
    "icon_id": "24855885",
    "name": "chat-filled",
    "font_class": "chat-filled",
    "unicode": "e659",
    "unicode_decimal": 58969
  }, {
    "icon_id": "24855886",
    "name": "camera",
    "font_class": "camera",
    "unicode": "e65a",
    "unicode_decimal": 58970
  }, {
    "icon_id": "24855887",
    "name": "circle",
    "font_class": "circle",
    "unicode": "e65b",
    "unicode_decimal": 58971
  }, {
    "icon_id": "24855888",
    "name": "checkmarkempty",
    "font_class": "checkmarkempty",
    "unicode": "e65c",
    "unicode_decimal": 58972
  }, {
    "icon_id": "24855889",
    "name": "chat",
    "font_class": "chat",
    "unicode": "e65d",
    "unicode_decimal": 58973
  }, {
    "icon_id": "24855890",
    "name": "circle-filled",
    "font_class": "circle-filled",
    "unicode": "e65e",
    "unicode_decimal": 58974
  }, {
    "icon_id": "24855891",
    "name": "flag",
    "font_class": "flag",
    "unicode": "e65f",
    "unicode_decimal": 58975
  }, {
    "icon_id": "24855892",
    "name": "flag-filled",
    "font_class": "flag-filled",
    "unicode": "e660",
    "unicode_decimal": 58976
  }, {
    "icon_id": "24855893",
    "name": "gear-filled",
    "font_class": "gear-filled",
    "unicode": "e661",
    "unicode_decimal": 58977
  }, {
    "icon_id": "24855894",
    "name": "home",
    "font_class": "home",
    "unicode": "e662",
    "unicode_decimal": 58978
  }, {
    "icon_id": "24855895",
    "name": "home-filled",
    "font_class": "home-filled",
    "unicode": "e663",
    "unicode_decimal": 58979
  }, {
    "icon_id": "24855896",
    "name": "gear",
    "font_class": "gear",
    "unicode": "e664",
    "unicode_decimal": 58980
  }, {
    "icon_id": "24855897",
    "name": "smallcircle-filled",
    "font_class": "smallcircle-filled",
    "unicode": "e665",
    "unicode_decimal": 58981
  }, {
    "icon_id": "24855898",
    "name": "map-filled",
    "font_class": "map-filled",
    "unicode": "e666",
    "unicode_decimal": 58982
  }, {
    "icon_id": "24855899",
    "name": "map",
    "font_class": "map",
    "unicode": "e667",
    "unicode_decimal": 58983
  }, {
    "icon_id": "24855825",
    "name": "refresh-filled",
    "font_class": "refresh-filled",
    "unicode": "e656",
    "unicode_decimal": 58966
  }, {
    "icon_id": "24855826",
    "name": "refresh",
    "font_class": "refresh",
    "unicode": "e657",
    "unicode_decimal": 58967
  }, {
    "icon_id": "24855808",
    "name": "cloud-upload",
    "font_class": "cloud-upload",
    "unicode": "e645",
    "unicode_decimal": 58949
  }, {
    "icon_id": "24855809",
    "name": "cloud-download-filled",
    "font_class": "cloud-download-filled",
    "unicode": "e646",
    "unicode_decimal": 58950
  }, {
    "icon_id": "24855810",
    "name": "cloud-download",
    "font_class": "cloud-download",
    "unicode": "e647",
    "unicode_decimal": 58951
  }, {
    "icon_id": "24855811",
    "name": "cloud-upload-filled",
    "font_class": "cloud-upload-filled",
    "unicode": "e648",
    "unicode_decimal": 58952
  }, {
    "icon_id": "24855813",
    "name": "redo",
    "font_class": "redo",
    "unicode": "e64a",
    "unicode_decimal": 58954
  }, {
    "icon_id": "24855814",
    "name": "images-filled",
    "font_class": "images-filled",
    "unicode": "e64b",
    "unicode_decimal": 58955
  }, {
    "icon_id": "24855815",
    "name": "undo-filled",
    "font_class": "undo-filled",
    "unicode": "e64c",
    "unicode_decimal": 58956
  }, {
    "icon_id": "24855816",
    "name": "more",
    "font_class": "more",
    "unicode": "e64d",
    "unicode_decimal": 58957
  }, {
    "icon_id": "24855817",
    "name": "more-filled",
    "font_class": "more-filled",
    "unicode": "e64e",
    "unicode_decimal": 58958
  }, {
    "icon_id": "24855818",
    "name": "undo",
    "font_class": "undo",
    "unicode": "e64f",
    "unicode_decimal": 58959
  }, {
    "icon_id": "24855819",
    "name": "images",
    "font_class": "images",
    "unicode": "e650",
    "unicode_decimal": 58960
  }, {
    "icon_id": "24855821",
    "name": "paperclip",
    "font_class": "paperclip",
    "unicode": "e652",
    "unicode_decimal": 58962
  }, {
    "icon_id": "24855822",
    "name": "settings",
    "font_class": "settings",
    "unicode": "e653",
    "unicode_decimal": 58963
  }, {
    "icon_id": "24855823",
    "name": "search",
    "font_class": "search",
    "unicode": "e654",
    "unicode_decimal": 58964
  }, {
    "icon_id": "24855824",
    "name": "redo-filled",
    "font_class": "redo-filled",
    "unicode": "e655",
    "unicode_decimal": 58965
  }, {
    "icon_id": "24841702",
    "name": "list",
    "font_class": "list",
    "unicode": "e644",
    "unicode_decimal": 58948
  }, {
    "icon_id": "24841489",
    "name": "mail-open-filled",
    "font_class": "mail-open-filled",
    "unicode": "e63a",
    "unicode_decimal": 58938
  }, {
    "icon_id": "24841491",
    "name": "hand-thumbsdown-filled",
    "font_class": "hand-down-filled",
    "unicode": "e63c",
    "unicode_decimal": 58940
  }, {
    "icon_id": "24841492",
    "name": "hand-thumbsdown",
    "font_class": "hand-down",
    "unicode": "e63d",
    "unicode_decimal": 58941
  }, {
    "icon_id": "24841493",
    "name": "hand-thumbsup-filled",
    "font_class": "hand-up-filled",
    "unicode": "e63e",
    "unicode_decimal": 58942
  }, {
    "icon_id": "24841494",
    "name": "hand-thumbsup",
    "font_class": "hand-up",
    "unicode": "e63f",
    "unicode_decimal": 58943
  }, {
    "icon_id": "24841496",
    "name": "heart-filled",
    "font_class": "heart-filled",
    "unicode": "e641",
    "unicode_decimal": 58945
  }, {
    "icon_id": "24841498",
    "name": "mail-open",
    "font_class": "mail-open",
    "unicode": "e643",
    "unicode_decimal": 58947
  }, {
    "icon_id": "24841488",
    "name": "heart",
    "font_class": "heart",
    "unicode": "e639",
    "unicode_decimal": 58937
  }, {
    "icon_id": "24839963",
    "name": "loop",
    "font_class": "loop",
    "unicode": "e633",
    "unicode_decimal": 58931
  }, {
    "icon_id": "24839866",
    "name": "pulldown",
    "font_class": "pulldown",
    "unicode": "e632",
    "unicode_decimal": 58930
  }, {
    "icon_id": "24813798",
    "name": "scan",
    "font_class": "scan",
    "unicode": "e62a",
    "unicode_decimal": 58922
  }, {
    "icon_id": "24813786",
    "name": "bars",
    "font_class": "bars",
    "unicode": "e627",
    "unicode_decimal": 58919
  }, {
    "icon_id": "24813788",
    "name": "cart-filled",
    "font_class": "cart-filled",
    "unicode": "e629",
    "unicode_decimal": 58921
  }, {
    "icon_id": "24813790",
    "name": "checkbox",
    "font_class": "checkbox",
    "unicode": "e62b",
    "unicode_decimal": 58923
  }, {
    "icon_id": "24813791",
    "name": "checkbox-filled",
    "font_class": "checkbox-filled",
    "unicode": "e62c",
    "unicode_decimal": 58924
  }, {
    "icon_id": "24813794",
    "name": "shop",
    "font_class": "shop",
    "unicode": "e62f",
    "unicode_decimal": 58927
  }, {
    "icon_id": "24813795",
    "name": "headphones",
    "font_class": "headphones",
    "unicode": "e630",
    "unicode_decimal": 58928
  }, {
    "icon_id": "24813796",
    "name": "cart",
    "font_class": "cart",
    "unicode": "e631",
    "unicode_decimal": 58929
  }]
};
exports.default = _default;

/***/ }),

/***/ 238:
/*!********************************************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/@dcloudio/uni-ui/lib/uni-transition/createAnimation.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createAnimation = createAnimation;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 10));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 22));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 23));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// const defaultOption = {
// 	duration: 300,
// 	timingFunction: 'linear',
// 	delay: 0,
// 	transformOrigin: '50% 50% 0'
// }
var MPAnimation = /*#__PURE__*/function () {
  function MPAnimation(options, _this) {
    (0, _classCallCheck2.default)(this, MPAnimation);
    this.options = options;
    // 在iOS10+QQ小程序平台下，传给原生的对象一定是个普通对象而不是Proxy对象，否则会报parameter should be Object instead of ProxyObject的错误
    this.animation = uni.createAnimation(_objectSpread({}, options));
    this.currentStepAnimates = {};
    this.next = 0;
    this.$ = _this;
  }
  (0, _createClass2.default)(MPAnimation, [{
    key: "_nvuePushAnimates",
    value: function _nvuePushAnimates(type, args) {
      var aniObj = this.currentStepAnimates[this.next];
      var styles = {};
      if (!aniObj) {
        styles = {
          styles: {},
          config: {}
        };
      } else {
        styles = aniObj;
      }
      if (animateTypes1.includes(type)) {
        if (!styles.styles.transform) {
          styles.styles.transform = '';
        }
        var unit = '';
        if (type === 'rotate') {
          unit = 'deg';
        }
        styles.styles.transform += "".concat(type, "(").concat(args + unit, ") ");
      } else {
        styles.styles[type] = "".concat(args);
      }
      this.currentStepAnimates[this.next] = styles;
    }
  }, {
    key: "_animateRun",
    value: function _animateRun() {
      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var ref = this.$.$refs['ani'].ref;
      if (!ref) return;
      return new Promise(function (resolve, reject) {
        nvueAnimation.transition(ref, _objectSpread({
          styles: styles
        }, config), function (res) {
          resolve();
        });
      });
    }
  }, {
    key: "_nvueNextAnimate",
    value: function _nvueNextAnimate(animates) {
      var _this2 = this;
      var step = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var fn = arguments.length > 2 ? arguments[2] : undefined;
      var obj = animates[step];
      if (obj) {
        var styles = obj.styles,
          config = obj.config;
        this._animateRun(styles, config).then(function () {
          step += 1;
          _this2._nvueNextAnimate(animates, step, fn);
        });
      } else {
        this.currentStepAnimates = {};
        typeof fn === 'function' && fn();
        this.isEnd = true;
      }
    }
  }, {
    key: "step",
    value: function step() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.animation.step(config);
      return this;
    }
  }, {
    key: "run",
    value: function run(fn) {
      this.$.animationData = this.animation.export();
      this.$.timer = setTimeout(function () {
        typeof fn === 'function' && fn();
      }, this.$.durationTime);
    }
  }]);
  return MPAnimation;
}();
var animateTypes1 = ['matrix', 'matrix3d', 'rotate', 'rotate3d', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scale3d', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'translate', 'translate3d', 'translateX', 'translateY', 'translateZ'];
var animateTypes2 = ['opacity', 'backgroundColor'];
var animateTypes3 = ['width', 'height', 'left', 'right', 'top', 'bottom'];
animateTypes1.concat(animateTypes2, animateTypes3).forEach(function (type) {
  MPAnimation.prototype[type] = function () {
    var _this$animation;
    (_this$animation = this.animation)[type].apply(_this$animation, arguments);
    return this;
  };
});
function createAnimation(option, _this) {
  if (!_this) return;
  clearTimeout(_this.timer);
  return new MPAnimation(option, _this);
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 24:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2022 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue &&
    !value.__v_isMPComponent
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu' || vm.mpHost === 'mp-kuaishou' || vm.mpHost === 'mp-xhs'){//百度、快手、小红书 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
var NULLTYPE = '[object Null]';
var UNDEFINEDTYPE = '[object Undefined]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function nullOrUndefined(currentType, preType) {
    if(
        (currentType === NULLTYPE || currentType === UNDEFINEDTYPE) && 
        (preType === NULLTYPE || preType === UNDEFINEDTYPE)
    ) {
        return false
    }
    return true
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue !== pre[key] && nullOrUndefined(currentType, preType)) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"计院体育君","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"计院体育君","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"计院体育君","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function clearInstance(key, value) {
  // 简易去除 Vue 和小程序组件实例
  if (value) {
    if (value._isVue || value.__v_isMPComponent) {
      return {}
    }
  }
  return value
}

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret, clearInstance))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"计院体育君","VUE_APP_PLATFORM":"mp-weixin","NODE_ENV":"development","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      var triggerEvent = this.$scope['_triggerEvent'] || this.$scope['triggerEvent'];
      if (triggerEvent) {
        try {
          triggerEvent.call(this.$scope, event, {
            __args__: toArray(arguments, 1)
          });
        } catch (error) {

        }
      }
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize',
    'onUploadDouyinVideo'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 2)))

/***/ }),

/***/ 25:
/*!***********************************!*\
  !*** F:/uni-app/计院体育君/pages.json ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ 3:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 31:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 4:
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ 5);
var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ 6);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 7);
var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ 9);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 46:
/*!*******************************************!*\
  !*** F:/uni-app/计院体育君/common/athletes.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getList = getList;
var _pinyinPro = __webpack_require__(/*! pinyin-pro */ 47);
function getList(state) {
  var row = [];
  var rowArr = [];
  var athletes = [];
  uni.request({
    url: 'https://gfhcg.com:8081/api/administrator/allAthletes?state=' + state,
    method: 'GET',
    success: function success(res) {
      // console.log(res)
      if (res.data.code == 20000) {
        row = res.data.data;
        for (var i = 0; i < res.data.data.length; i++) {
          athletes.push(res.data.data[i].student_name + '-' + res.data.data[i].student_id);
          // +'-'+res.data.data[i].student_phone
        }
        // console.log(athletes)
      } else {
        uni.showToast({
          icon: 'error',
          title: '网络错误！',
          mask: true,
          duration: 1500,
          success: function success() {}
        });
      }
    },
    fail: function fail() {
      uni.showToast({
        icon: 'error',
        title: '网络错误！',
        mask: true,
        duration: 1500,
        success: function success() {}
      });
    }
  });
  var list = [{
    'letter': 'A',
    'data': []
  }, {
    'letter': 'B',
    'data': []
  }, {
    'letter': 'C',
    'data': []
  }, {
    'letter': 'D',
    'data': []
  }, {
    'letter': 'E',
    'data': []
  }, {
    'letter': 'F',
    'data': []
  }, {
    'letter': 'G',
    'data': []
  }, {
    'letter': 'H',
    'data': []
  }, {
    'letter': 'I',
    'data': []
  }, {
    'letter': 'J',
    'data': []
  }, {
    'letter': 'K',
    'data': []
  }, {
    'letter': 'L',
    'data': []
  }, {
    'letter': 'M',
    'data': []
  }, {
    'letter': 'N',
    'data': []
  }, {
    'letter': 'O',
    'data': []
  }, {
    'letter': 'P',
    'data': []
  }, {
    'letter': 'Q',
    'data': []
  }, {
    'letter': 'R',
    'data': []
  }, {
    'letter': 'S',
    'data': []
  }, {
    'letter': 'T',
    'data': []
  }, {
    'letter': 'U',
    'data': []
  }, {
    'letter': 'V',
    'data': []
  }, {
    'letter': 'W',
    'data': []
  }, {
    'letter': 'X',
    'data': []
  }, {
    'letter': 'Y',
    'data': []
  }, {
    'letter': 'Z',
    'data': []
  }];
  setTimeout(function () {
    for (var i = 0; i < athletes.length; i++) {
      var n = (0, _pinyinPro.pinyin)(athletes[i], {
        pattern: 'initial'
      });
      // console.log(n)
      switch (n.charAt(0).toUpperCase()) {
        case 'A':
          list[0].data.push(athletes[i]);
          break;
        case 'B':
          list[1].data.push(athletes[i]);
          break;
        case 'C':
          list[2].data.push(athletes[i]);
          break;
        case 'D':
          list[3].data.push(athletes[i]);
          break;
        case 'E':
          list[4].data.push(athletes[i]);
          break;
        case 'F':
          list[5].data.push(athletes[i]);
          break;
        case 'G':
          list[6].data.push(athletes[i]);
          break;
        case 'H':
          list[7].data.push(athletes[i]);
          break;
        case 'I':
          list[8].data.push(athletes[i]);
          break;
        case 'J':
          list[9].data.push(athletes[i]);
          break;
        case 'K':
          list[10].data.push(athletes[i]);
          break;
        case 'L':
          list[11].data.push(athletes[i]);
          break;
        case 'M':
          list[12].data.push(athletes[i]);
          break;
        case 'N':
          list[13].data.push(athletes[i]);
          break;
        case 'O':
          list[14].data.push(athletes[i]);
          break;
        case 'P':
          list[15].data.push(athletes[i]);
          break;
        case 'Q':
          list[16].data.push(athletes[i]);
          break;
        case 'R':
          list[17].data.push(athletes[i]);
          break;
        case 'S':
          list[18].data.push(athletes[i]);
          break;
        case 'T':
          list[19].data.push(athletes[i]);
          break;
        case 'U':
          list[20].data.push(athletes[i]);
          break;
        case 'V':
          list[21].data.push(athletes[i]);
          break;
        case 'W':
          list[22].data.push(athletes[i]);
          break;
        case 'X':
          list[23].data.push(athletes[i]);
          break;
        case 'Y':
          list[24].data.push(athletes[i]);
          break;
        case 'Z':
          list[25].data.push(athletes[i]);
          break;
      }
    }
    // console.log(list)

    // return list;
    // return 1;
  }, 1500);
  return list;
}

/* export default {
	'list': list,
	'rowArr':rowArr */
/* 'list': [{
	'letter': 'A',
	'data': [
		'阿克苏机场',
		'阿拉山口机场',
		'阿勒泰机场',
		'阿里昆莎机场',
		'安庆天柱山机场',
		'澳门国际机场'
	]
}, {
	'letter': 'B',
	'data': [
		'保山机场',
		'包头机场',
		'北海福成机场',
		'北京南苑机场',
		'北京首都国际机场'
	]
}, {
	'letter': 'C',
	'data': [
		'长白山机场',
		'长春龙嘉国际机场',
		'常德桃花源机场',
		'昌都邦达机场',
		'长沙黄花国际机场',
		'长治王村机场',
		'常州奔牛机场',
		'成都双流国际机场',
		'赤峰机场'
	]
}, {
	'letter': 'D',
	'data': [
		'大理机场',
		'大连周水子国际机场',
		'大庆萨尔图机场',
		'大同东王庄机场',
		'达州河市机场',
		'丹东浪头机场',
		'德宏芒市机场',
		'迪庆香格里拉机场',
		'东营机场',
		'敦煌机场'
	]
}, {
	'letter': 'E',
	'data': [
		'鄂尔多斯机场',
		'恩施许家坪机场',
		'二连浩特赛乌苏国际机场'
	]
}, {
	'letter': 'F',
	'data': [
		'阜阳西关机场',
		'福州长乐国际机场'
	]
}, {
	'letter': 'G',
	'data': [
		'赣州黄金机场',
		'格尔木机场',
		'固原六盘山机场',
		'广元盘龙机场',
		'广州白云国际机场',
		'桂林两江国际机场',
		'贵阳龙洞堡国际机场'
	]
}, {
	'letter': 'H',
	'data': [
		'哈尔滨太平国际机场',
		'哈密机场',
		'海口美兰国际机场',
		'海拉尔东山国际机场',
		'邯郸机场',
		'汉中机场',
		'杭州萧山国际机场',
		'合肥骆岗国际机场',
		'和田机场',
		'黑河机场',
		'呼和浩特白塔国际机场',
		'淮安涟水机场',
		'黄山屯溪国际机场'
	]
}, {
	'letter': 'I',
	'data': []
}, {
	'letter': 'J',
	'data': [
		'济南遥墙国际机场',
		'济宁曲阜机场',
		'鸡西兴凯湖机场',
		'佳木斯东郊机场',
		'嘉峪关机场',
		'锦州小岭子机场',
		'景德镇机场',
		'井冈山机场',
		'九江庐山机场',
		'九寨黄龙机场'
	]
}, {
	'letter': 'K',
	'data': [
		'喀什机场',
		'克拉玛依机场',
		'库车龟兹机场',
		'库尔勒机场',
		'昆明巫家坝国际机场'
	]
}, {
	'letter': 'L',
	'data': [
		'拉萨贡嘎机场',
		'兰州中川机场',
		'丽江三义机场',
		'黎平机场',
		'连云港白塔埠机场',
		'临沧机场',
		'临沂机场',
		'林芝米林机场',
		'柳州白莲机场',
		'龙岩冠豸山机场',
		'泸州蓝田机场',
		'洛阳北郊机场'
	]
}, {
	'letter': 'M',
	'data': [
		'满洲里西郊机场',
		'绵阳南郊机场',
		'漠河古莲机场',
		'牡丹江海浪机场'
	]
}, {
	'letter': 'N',
	'data': [
		'南昌昌北国际机场',
		'南充高坪机场',
		'南京禄口国际机场',
		'南宁吴圩机场',
		'南通兴东机场',
		'南阳姜营机场',
		'宁波栎社国际机场'
	]
}, {
	'letter': 'O',
	'data': []
}, {
	'letter': 'P',
	'data': [
		'普洱思茅机场'
	]
}, {
	'letter': 'Q',
	'data': [
		'齐齐哈尔三家子机场',
		'秦皇岛山海关机场',
		'青岛流亭国际机场',
		'衢州机场',
		'泉州晋江机场'
	]
}, {
	'letter': 'R',
	'data': [
		'日喀则和平机场'
	]
}, {
	'letter': 'S',
	'data': [
		'三亚凤凰国际机场',
		'汕头外砂机场',
		'上海虹桥国际机场',
		'上海浦东国际机场',
		'深圳宝安国际机场',
		'沈阳桃仙国际机场',
		'石家庄正定国际机场',
		'苏南硕放国际机场'
	]
}, {
	'letter': 'T',
	'data': [
		'塔城机场',
		'太原武宿国际机场',
		'台州路桥机场 (黄岩机场)',
		'唐山三女河机场',
		'腾冲驼峰机场',
		'天津滨海国际机场',
		'通辽机场',
		'铜仁凤凰机场'
	]
}, {
	'letter': 'U',
	'data': []
}, {
	'letter': 'V',
	'data': []
}, {
	'letter': 'W',
	'data': [
		'万州五桥机场',
		'潍坊机场',
		'威海大水泊机场',
		'文山普者黑机场',
		'温州永强国际机场',
		'乌海机场',
		'武汉天河国际机场',
		'乌兰浩特机场',
		'乌鲁木齐地窝堡国际机场',
		'武夷山机场',
		'梧州长洲岛机场'
	]
}, {
	'letter': 'X',
	'data': [
		'西安咸阳国际机场',
		'西昌青山机场',
		'锡林浩特机场',
		'西宁曹家堡机场',
		'西双版纳嘎洒机场',
		'厦门高崎国际机场',
		'香港国际机场',
		'襄阳刘集机场',
		'兴义机场',
		'徐州观音机场'
	]
}, {
	'letter': 'Y',
	'data': [
		'延安二十里堡机场',
		'盐城机场',
		'延吉朝阳川机场',
		'烟台莱山国际机场',
		'宜宾菜坝机场',
		'宜昌三峡机场',
		'伊春林都机场',
		'伊宁机场',
		'义乌机场',
		'银川河东机场',
		'永州零陵机场',
		'榆林榆阳机场',
		'玉树巴塘机场',
		'运城张孝机场'
	]
}, {
	'letter': 'Z',
	'data': [
		'湛江机场',
		'昭通机场',
		'郑州新郑国际机场',
		'芷江机场',
		'重庆江北国际机场',
		'中卫香山机场',
		'舟山朱家尖机场',
		'珠海三灶机场'
	]
}] */
/* } */
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),

/***/ 47:
/*!*****************************************************************!*\
  !*** F:/uni-app/计院体育君/node_modules/pinyin-pro/dist/index.es.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 3);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.customPinyin = l;
exports.match = void 0;
exports.pinyin = E;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 12));
var n = ["zh", "ch", "sh", "z", "c", "s", "b", "p", "m", "f", "d", "t", "n", "l", "g", "k", "h", "j", "q", "x", "r", "y", "w", ""],
  h = ["j", "q", "x"],
  g = ["uān", "uán", "uǎn", "uàn", "uan", "uē", "ué", "uě", "uè", "ue", "ūn", "ún", "ǔn", "ùn", "un", "ū", "ú", "ǔ", "ù", "u"],
  i = {
    "uān": "üān",
    "uán": "üán",
    "uǎn": "üǎn",
    "uàn": "üàn",
    uan: "üan",
    "uē": "üē",
    "ué": "üé",
    "uě": "üě",
    "uè": "üè",
    ue: "üe",
    "ūn": "ǖn",
    "ún": "ǘn",
    "ǔn": "ǚn",
    "ùn": "ǜn",
    un: "ün",
    "ū": "ǖ",
    "ú": "ǘ",
    "ǔ": "ǚ",
    "ù": "ǜ",
    u: "ü"
  },
  u = ["ia", "ian", "iang", "iao", "ie", "iu", "iong", "ua", "uai", "uan", "uang", "ue", "ui", "uo", "üan", "üe", "van", "ve"],
  z = {
    "南宫": "nán gōng",
    "第五": "dì wǔ",
    "万俟": "mò qí",
    "司马": "sī mǎ",
    "上官": "shàng guān",
    "欧阳": "ōu yáng",
    "夏侯": "xià hóu",
    "诸葛": "zhū gě",
    "闻人": "wén rén",
    "东方": "dōng fāng",
    "赫连": "hè lián",
    "皇甫": "huáng pǔ",
    "尉迟": "yù chí",
    "公羊": "gōng yáng",
    "澹台": "tán tái",
    "公冶": "gōng yě",
    "宗政": "zōng zhèng",
    "濮阳": "pú yáng",
    "淳于": "chún yú",
    "单于": "chán yú",
    "太叔": "tài shū",
    "申屠": "shēn tú",
    "公孙": "gōng sūn",
    "仲孙": "zhòng sūn",
    "轩辕": "xuān yuán",
    "令狐": "líng hú",
    "钟离": "zhōng lí",
    "宇文": "yǔ wén",
    "长孙": "zhǎng sūn",
    "慕容": "mù róng",
    "鲜于": "xiān yú",
    "闾丘": "lǘ qiū",
    "司徒": "sī tú",
    "司空": "sī kōng",
    "亓官": "qí guān",
    "司寇": "sī kòu",
    "仉督": "zhǎng dū",
    "子车": "zǐ jū",
    "颛孙": "zhuān sūn",
    "端木": "duān mù",
    "巫马": "wū mǎ",
    "公西": "gōng xī",
    "漆雕": "qī diāo",
    "乐正": "yuè zhèng",
    "壤驷": "rǎng sì",
    "公良": "gōng liáng",
    "拓跋": "tuò bá",
    "夹谷": "jiá gǔ",
    "宰父": "zǎi fǔ",
    "榖梁": "gǔ liáng",
    "段干": "duàn gān",
    "百里": "bǎi lǐ",
    "东郭": "dōng guō",
    "南门": "nán mén",
    "呼延": "hū yán",
    "羊舌": "yáng shé",
    "梁丘": "liáng qiū",
    "左丘": "zuǒ qiū",
    "东门": "dōng mén",
    "西门": "xī mén",
    "赵": "zhào",
    "钱": "qián",
    "孙": "sūn",
    "李": "lǐ",
    "周": "zhōu",
    "吴": "wú",
    "郑": "zhèng",
    "王": "wáng",
    "冯": "féng",
    "陈": "chén",
    "褚": "chǔ",
    "卫": "wèi",
    "蒋": "jiǎng",
    "沈": "shěn",
    "韩": "hán",
    "杨": "yáng",
    "朱": "zhū",
    "秦": "qín",
    "尤": "yóu",
    "许": "xǔ",
    "何": "hé",
    "吕": "lǚ",
    "施": "shī",
    "张": "zhāng",
    "孔": "kǒng",
    "曹": "cáo",
    "严": "yán",
    "华": "huà",
    "金": "jīn",
    "魏": "wèi",
    "陶": "táo",
    "姜": "jiāng",
    "戚": "qī",
    "谢": "xiè",
    "邹": "zōu",
    "喻": "yù",
    "柏": "bǎi",
    "水": "shuǐ",
    "窦": "dòu",
    "章": "zhāng",
    "云": "yún",
    "苏": "sū",
    "潘": "pān",
    "葛": "gě",
    "奚": "xī",
    "范": "fàn",
    "彭": "péng",
    "郎": "láng",
    "鲁": "lǔ",
    "韦": "wéi",
    "昌": "chāng",
    "马": "mǎ",
    "苗": "miáo",
    "凤": "fèng",
    "花": "huā",
    "方": "fāng",
    "俞": "yú",
    "任": "rèn",
    "袁": "yuán",
    "柳": "liǔ",
    "酆": "fēng",
    "鲍": "bào",
    "史": "shǐ",
    "唐": "táng",
    "费": "fèi",
    "廉": "lián",
    "岑": "cén",
    "薛": "xuē",
    "雷": "léi",
    "贺": "hè",
    "倪": "ní",
    "汤": "tāng",
    "滕": "téng",
    "殷": "yīn",
    "罗": "luó",
    "毕": "bì",
    "郝": "hǎo",
    "邬": "wū",
    "安": "ān",
    "常": "cháng",
    "乐": "yuè",
    "于": "yú",
    "时": "shí",
    "傅": "fù",
    "皮": "pí",
    "卞": "biàn",
    "齐": "qí",
    "康": "kāng",
    "伍": "wǔ",
    "余": "yú",
    "元": "yuán",
    "卜": "bǔ",
    "顾": "gù",
    "孟": "mèng",
    "平": "píng",
    "黄": "huáng",
    "和": "hé",
    "穆": "mù",
    "萧": "xiāo",
    "尹": "yǐn",
    "姚": "yáo",
    "邵": "shào",
    "湛": "zhàn",
    "汪": "wāng",
    "祁": "qí",
    "毛": "máo",
    "禹": "yǔ",
    "狄": "dí",
    "米": "mǐ",
    "贝": "bèi",
    "明": "míng",
    "臧": "zāng",
    "计": "jì",
    "伏": "fú",
    "成": "chéng",
    "戴": "dài",
    "谈": "tán",
    "宋": "sòng",
    "茅": "máo",
    "庞": "páng",
    "熊": "xióng",
    "纪": "jì",
    "舒": "shū",
    "屈": "qū",
    "项": "xiàng",
    "祝": "zhù",
    "董": "dǒng",
    "梁": "liáng",
    "杜": "dù",
    "阮": "ruǎn",
    "蓝": "lán",
    "闵": "mǐn",
    "席": "xí",
    "季": "jì",
    "麻": "má",
    "强": "qiáng",
    "贾": "jiǎ",
    "路": "lù",
    "娄": "lóu",
    "危": "wēi",
    "江": "jiāng",
    "童": "tóng",
    "颜": "yán",
    "郭": "guō",
    "梅": "méi",
    "盛": "shèng",
    "林": "lín",
    "刁": "diāo",
    "钟": "zhōng",
    "徐": "xú",
    "邱": "qiū",
    "骆": "luò",
    "高": "gāo",
    "夏": "xià",
    "蔡": "cài",
    "田": "tián",
    "樊": "fán",
    "胡": "hú",
    "凌": "líng",
    "霍": "huò",
    "虞": "yú",
    "万": "wàn",
    "支": "zhī",
    "柯": "kē",
    "昝": "zǎn",
    "管": "guǎn",
    "卢": "lú",
    "莫": "mò",
    "经": "jīng",
    "房": "fáng",
    "裘": "qiú",
    "缪": "miào",
    "干": "gān",
    "解": "xiè",
    "应": "yīng",
    "宗": "zōng",
    "丁": "dīng",
    "宣": "xuān",
    "贲": "bēn",
    "邓": "dèng",
    "郁": "yù",
    "单": "shàn",
    "杭": "háng",
    "洪": "hóng",
    "包": "bāo",
    "诸": "zhū",
    "左": "zuǒ",
    "石": "shí",
    "崔": "cuī",
    "吉": "jí",
    "钮": "niǔ",
    "龚": "gōng",
    "程": "chéng",
    "嵇": "jī",
    "邢": "xíng",
    "滑": "huá",
    "裴": "péi",
    "陆": "lù",
    "荣": "róng",
    "翁": "wēng",
    "荀": "xún",
    "羊": "yáng",
    "於": "yū",
    "惠": "huì",
    "甄": "zhēn",
    "曲": "qū",
    "家": "jiā",
    "封": "fēng",
    "芮": "ruì",
    "羿": "yì",
    "储": "chǔ",
    "靳": "jìn",
    "汲": "jí",
    "邴": "bǐng",
    "糜": "mí",
    "松": "sōng",
    "井": "jǐng",
    "段": "duàn",
    "富": "fù",
    "巫": "wū",
    "乌": "wū",
    "焦": "jiāo",
    "巴": "bā",
    "弓": "gōng",
    "牧": "mù",
    "隗": "kuí",
    "山": "shān",
    "谷": "gǔ",
    "车": "chē",
    "侯": "hóu",
    "宓": "mì",
    "蓬": "péng",
    "全": "quán",
    "郗": "xī",
    "班": "bān",
    "仰": "yǎng",
    "秋": "qiū",
    "仲": "zhòng",
    "伊": "yī",
    "宫": "gōng",
    "宁": "nìng",
    "仇": "qiú",
    "栾": "luán",
    "暴": "bào",
    "甘": "gān",
    "钭": "tǒu",
    "厉": "lì",
    "戎": "róng",
    "祖": "zǔ",
    "武": "wǔ",
    "符": "fú",
    "刘": "liú",
    "景": "jǐng",
    "詹": "zhān",
    "束": "shù",
    "龙": "lóng",
    "叶": "yè",
    "幸": "xìng",
    "司": "sī",
    "韶": "sháo",
    "郜": "gào",
    "黎": "lí",
    "蓟": "jì",
    "薄": "bó",
    "印": "yìn",
    "宿": "sù",
    "白": "bái",
    "怀": "huái",
    "蒲": "pú",
    "邰": "tái",
    "从": "cóng",
    "鄂": "è",
    "索": "suǒ",
    "咸": "xián",
    "籍": "jí",
    "赖": "lài",
    "卓": "zhuó",
    "蔺": "lìn",
    "屠": "tú",
    "蒙": "méng",
    "池": "chí",
    "乔": "qiáo",
    "阴": "yīn",
    "鬱": "yù",
    "胥": "xū",
    "能": "nài",
    "苍": "cāng",
    "双": "shuāng",
    "闻": "wén",
    "莘": "shēn",
    "党": "dǎng",
    "翟": "zhái",
    "谭": "tán",
    "贡": "gòng",
    "劳": "láo",
    "逄": "páng",
    "姬": "jī",
    "申": "shēn",
    "扶": "fú",
    "堵": "dǔ",
    "冉": "rǎn",
    "宰": "zǎi",
    "郦": "lì",
    "雍": "yōng",
    "郤": "xì",
    "璩": "qú",
    "桑": "sāng",
    "桂": "guì",
    "濮": "pú",
    "牛": "niú",
    "寿": "shòu",
    "通": "tōng",
    "边": "biān",
    "扈": "hù",
    "燕": "yān",
    "冀": "jì",
    "郏": "jiá",
    "浦": "pǔ",
    "尚": "shàng",
    "农": "nóng",
    "温": "wēn",
    "别": "bié",
    "庄": "zhuāng",
    "晏": "yàn",
    "柴": "chái",
    "瞿": "qú",
    "阎": "yán",
    "充": "chōng",
    "慕": "mù",
    "连": "lián",
    "茹": "rú",
    "习": "xí",
    "宦": "huàn",
    "艾": "ài",
    "鱼": "yú",
    "容": "róng",
    "向": "xiàng",
    "古": "gǔ",
    "易": "yì",
    "慎": "shèn",
    "戈": "gē",
    "廖": "liào",
    "庾": "yǔ",
    "终": "zhōng",
    "暨": "jì",
    "居": "jū",
    "衡": "héng",
    "步": "bù",
    "都": "dū",
    "耿": "gěng",
    "满": "mǎn",
    "弘": "hóng",
    "匡": "kuāng",
    "国": "guó",
    "文": "wén",
    "寇": "kòu",
    "广": "guǎng",
    "禄": "lù",
    "阙": "quē",
    "东": "dōng",
    "欧": "ōu",
    "殳": "shū",
    "沃": "wò",
    "利": "lì",
    "蔚": "wèi",
    "越": "yuè",
    "夔": "kuí",
    "隆": "lóng",
    "师": "shī",
    "巩": "gǒng",
    "厍": "shè",
    "聂": "niè",
    "晁": "cháo",
    "勾": "gōu",
    "敖": "áo",
    "融": "róng",
    "冷": "lěng",
    "訾": "zǐ",
    "辛": "xīn",
    "阚": "kàn",
    "那": "nā",
    "简": "jiǎn",
    "饶": "ráo",
    "空": "kōng",
    "曾": "zēng",
    "母": "mǔ",
    "沙": "shā",
    "乜": "niè",
    "养": "yǎng",
    "鞠": "jū",
    "须": "xū",
    "丰": "fēng",
    "巢": "cháo",
    "关": "guān",
    "蒯": "kuǎi",
    "相": "xiàng",
    "查": "zhā",
    "后": "hòu",
    "荆": "jīng",
    "红": "hóng",
    "游": "yóu",
    "竺": "zhú",
    "权": "quán",
    "逯": "lù",
    "盖": "gài",
    "益": "yì",
    "桓": "huán",
    "公": "gōng",
    "牟": "móu",
    "哈": "hǎ",
    "言": "yán",
    "福": "fú"
  },
  s = {
    "líng": [12295, 20278, 20940, 21026, 22265, 22397, 22796, 22984, 23112, 23361, 23738, 24446, 25493, 26148, 26382, 26563, 26818, 27386, 27422, 27872, 28137, 28586, 28789, 29167, 29223, 29393, 29618, 29708, 29940, 30346, 30769, 31102, 31202, 31451, 31533, 32055, 32190, 32491, 32656, 32666, 32718, 32838, 33330, 33491, 33777, 34020, 34054, 34166, 34505, 34897, 35052, 35397, 36297, 36584, 36632, 37187, 37309, 37428, 37634, 38083, 38301, 38517, 38646, 38666, 38679, 38683, 38685, 38728, 39382, 39807, 39914, 40110, 40210, 40496, 40567, 40610, 40801, 40802, 40836, 40855],
    "yī": [19968, 20042, 20234, 20381, 21307, 21530, 21695, 22123, 22769, 22777, 22785, 23259, 23300, 24332, 25558, 25742, 27321, 27593, 27938, 28175, 28458, 29823, 30057, 31054, 31125, 31270, 32324, 34524, 34916, 35689, 36791, 37116, 37291, 37541, 38129, 40406, 40549, 40671, 40691],
    "dīng zhēng": [19969],
    "kǎo qiǎo yú": [19970],
    "qī": [19971, 20507, 20699, 20932, 22017, 22660, 23096, 24765, 24956, 24957, 25114, 25471, 26578, 26724, 26748, 26866, 27071, 27450, 27791, 28114, 28422, 32042, 32192, 33803, 35076, 35526, 36809, 37098, 37850, 38667, 39756, 40328],
    "shàng": [19972, 23577, 23578, 24678, 32212, 32497],
    "xià": [19973, 19979, 20068, 22327, 22799, 22803, 25047, 26810, 30108, 30577, 32581, 37820, 37868],
    "hǎn": [19974, 21898, 28011, 32597, 35907],
    "wàn mò": [19975],
    "zhàng": [19976, 20183, 22663, 23938, 24080, 24115, 24155, 25177, 26454, 28081, 30190, 30252, 30260, 30613, 31872, 32960, 33081, 36076, 36134, 38556],
    "sān": [19977, 21377, 21441, 24334, 27637, 27638, 27647, 29337, 39702],
    "shàng shǎng shang": [19978],
    "qí jī": [19980, 20854, 22855],
    "bù fǒu": [19981],
    "yǔ yù yú": [19982],
    "miǎn": [19983, 20589, 20813, 20885, 21193, 21204, 21909, 23081, 24848, 27717, 27796, 28238, 30540, 32236, 32517, 33148, 33858, 38758, 39864],
    "gài": [19984, 20066, 21251, 21252, 25124, 27010, 27113, 27114, 28297, 28433, 29890, 33890, 37411, 38041],
    "chǒu": [19985, 19986, 20404, 21532, 26493, 30597, 30657, 37276, 39767],
    "zhuān": [19987, 21440, 23269, 23554, 23560, 29820, 29966, 30742, 30935, 30938, 34788, 35567, 37151, 38995, 39067, 40004],
    "qiě jū": [19988],
    "pī": [19989, 20243, 20286, 22140, 22383, 23727, 25013, 25209, 25259, 28811, 29385, 29395, 30738, 30919, 30996, 30997, 31195, 31200, 32794, 35966, 37043, 37402, 37471, 37524, 37635, 37645, 38713, 39379, 39660, 39806],
    "shì": [19990, 19991, 20106, 20107, 20181, 20365, 20895, 21183, 21218, 21323, 21609, 21980, 22124, 22763, 22893, 23317, 23460, 24066, 24335, 24337, 24338, 24640, 24643, 25146, 25325, 25555, 26159, 26160, 26558, 26623, 26683, 28584, 28882, 29046, 30466, 30478, 30497, 30551, 31034, 31035, 31598, 31789, 33296, 33299, 35179, 35222, 35270, 35298, 35430, 35475, 35553, 35610, 35797, 35877, 36016, 36147, 36606, 36732, 36893, 36990, 37320, 37322, 37323, 37424, 37443, 37501, 38088, 39166, 39193, 39197, 39280, 39960],
    "qiū": [19992, 2e4, 22389, 23197, 24664, 24695, 27e3, 31179, 31180, 31312, 31693, 32231, 33833, 34322, 34479, 34677, 34775, 34852, 36261, 37041, 38822, 38823, 39948, 39949, 40133, 40342, 40537, 40861],
    "bǐng": [19993, 23643, 24626, 25254, 26142, 26170, 26564, 26821, 28851, 31104, 31177, 31263, 33514, 34499, 37044, 37429, 38467, 38790, 39173, 39200, 39292],
    "yè": [19994, 20145, 20727, 22711, 22812, 23978, 23979, 25268, 25433, 25819, 25834, 25835, 26196, 26308, 26309, 26327, 26355, 26357, 26556, 26557, 26989, 27906, 28082, 28594, 28904, 29121, 29207, 29837, 30371, 30641, 30648, 30991, 33099, 33865, 35585, 35858, 37050, 37172, 37745, 37943, 38757, 38760, 38913, 39029, 39203, 39233, 39308, 39516, 40314, 40456],
    "cóng": [19995, 20174, 21474, 23107, 23406, 24467, 24468, 24470, 24752, 27191, 27401, 28121, 28743, 29212, 29742, 34242, 35508, 36072, 36073, 37661],
    "dōng": [19996, 20530, 20908, 21658, 22508, 23741, 23852, 24474, 26168, 26481, 27681, 27693, 28087, 31511, 33523, 33732, 34624, 39831, 39903, 40327, 40363, 40491, 40725],
    "sī": [19997, 20460, 20952, 21422, 21496, 21661, 22070, 22109, 23204, 24285, 24662, 25749, 26031, 26962, 27840, 28556, 29133, 31127, 31136, 31169, 31993, 32114, 32230, 32415, 32524, 32627, 34156, 34386, 34547, 34596, 34692, 34774, 34804, 37488, 37551, 37750, 37889, 38198, 39096, 39124, 39462, 40421, 40502, 40758],
    "chéng": [19998, 21576, 22478, 22485, 22552, 22605, 22614, 23468, 23800, 24809, 25074, 25104, 25215, 25392, 25473, 25576, 26536, 26838, 27225, 27289, 27910, 28311, 28546, 29685, 29689, 30075, 31243, 31386, 31596, 32126, 33069, 33663, 35488, 35802, 37077, 37234, 37614, 38102, 39468, 39886],
    "diū": [19999, 20002, 37545, 38117],
    "liǎng": [20001, 20004, 20841, 21858, 25498, 32201, 33084, 34621, 35058, 39753, 39758],
    "yǒu": [20003, 21347, 21451, 26756, 28277, 29270, 31113, 32657, 32840, 33475, 33696, 34575, 37193, 37546, 38101, 40669],
    "yán": [20005, 21427, 21873, 21926, 22196, 22633, 22747, 22759, 22925, 23032, 23083, 23086, 23721, 23890, 23891, 24012, 24022, 24023, 24310, 25541, 26134, 26956, 27280, 27369, 27413, 27839, 28814, 28815, 29439, 29698, 30416, 30878, 31605, 31799, 33690, 34053, 34404, 34578, 35328, 35329, 35374, 35453, 35744, 37076, 38278, 38331, 38379, 38414, 38991, 38996, 39068, 40573, 40611],
    "bìng": [20006, 20341, 20482, 20641, 22442, 25682, 26660, 30149, 31369, 31453, 35457, 38736, 39849],
    "sàng sāng": [20007],
    "gǔn": [20008, 24771, 28378, 28414, 30937, 32196, 32498, 34008, 34057, 34926, 34974, 36645, 36746, 39820, 39872, 40103],
    "jiū": [20009, 21244, 21886, 25578, 25579, 26427, 31350, 31998, 32416, 33819, 36211, 38404, 39695, 39726, 40169, 40480],
    "gè gě": [20010, 20491, 21508],
    "yā": [20011, 22311, 23410, 24216, 25276, 26514, 26720, 26895, 37647, 37914, 40201, 40232, 40310, 40486, 40493],
    "pán": [20012, 23227, 24139, 27075, 27904, 28682, 29247, 30424, 30436, 30928, 32271, 33968, 34784, 36434, 36451, 37788, 38838],
    "zhōng zhòng": [20013],
    "jǐ": [20014, 22912, 24049, 25119, 25380, 25486, 25760, 25824, 27254, 27890, 29361, 33034, 34414, 34787, 39778, 40062, 40578],
    "jiè": [20015, 20171, 20511, 21814, 22586, 23622, 23626, 23701, 24206, 24483, 25106, 26960, 29335, 29600, 29758, 30028, 30029, 30117, 30734, 34471, 34550, 34936, 35119, 35489, 35819, 37765, 39601, 39786],
    "fēng": [20016, 20217, 20561, 20732, 20968, 20972, 20974, 22950, 23543, 23553, 23791, 23792, 23862, 26539, 26963, 27282, 27811, 27816, 28194, 28739, 28925, 29326, 29478, 29714, 30127, 30219, 30461, 30748, 30904, 31688, 34356, 34562, 34861, 35920, 37175, 37190, 37586, 37821, 37856, 38155, 38715, 38730, 39116, 40631],
    "guàn kuàng": [20017],
    "chuàn": [20018, 27724, 29588, 36055, 37351, 38031],
    "chǎn": [20019, 20135, 20865, 21111, 22213, 23932, 26101, 27984, 28411, 28763, 29986, 29987, 31749, 33927, 34118, 35522, 35650, 35719, 35844, 37855, 38130, 38323, 38369, 38416, 39587],
    "lín": [20020, 20903, 22755, 23818, 23961, 26036, 26237, 26301, 26519, 28542, 28726, 29136, 29747, 29848, 30645, 30852, 30967, 31910, 31932, 32343, 32759, 33256, 36692, 36762, 36980, 37051, 37168, 37883, 38462, 38563, 38678, 39502, 40023, 40158, 40592, 40607],
    "zhuó": [20021, 21125, 21331, 21828, 22324, 22960, 23098, 25775, 25798, 25826, 26027, 26030, 26033, 26034, 26037, 26219, 26899, 27978, 27998, 28609, 28796, 28917, 29752, 30842, 31130, 31393, 31831, 31857, 32620, 33537, 34839, 34879, 35521, 35537, 35638, 35836, 37196, 37938, 38255, 40299, 40415],
    "zhǔ": [20022, 20027, 21167, 22065, 22225, 23444, 24126, 25284, 28186, 28624, 29009, 29038, 29149, 30633, 30682, 32604, 35421, 38524, 40448, 40584],
    "bā": [20023, 20168, 20843, 21485, 21749, 22847, 23708, 24052, 25420, 26419, 29584, 30116, 31494, 31889, 32659, 33453, 34438, 35933, 37343],
    "wán": [20024, 21011, 23436, 23695, 25231, 25430, 27725, 28919, 29609, 29715, 31490, 32008, 32424, 32747, 33412, 36006, 38929, 39037],
    "dān": [20025, 21231, 21296, 21336, 22921, 23173, 27546, 27563, 29972, 30472, 30723, 31658, 31774, 32828, 32829, 32835, 32888, 35101, 35148, 36525, 37112, 37170, 37206, 38933],
    "wèi wéi": [20026],
    "jǐng dǎn": [20028],
    "lì lí": [20029],
    "jǔ": [20030, 24326, 25369, 25831, 26887, 27017, 27032, 27384, 27397, 30697, 31589, 32869, 33289, 33682, 33951, 35191, 36413, 40799, 40835],
    "piě": [20031, 33508, 37893],
    "fú": [20032, 20239, 20440, 20971, 21020, 21264, 21640, 21753, 22424, 23386, 23722, 24063, 24087, 24133, 24158, 24343, 24447, 24619, 25206, 26603, 26687, 26740, 27679, 27885, 28014, 28074, 28563, 28837, 29624, 30006, 30025, 30273, 31059, 31119, 31274, 31526, 31641, 32049, 32060, 32101, 32141, 32450, 32459, 32600, 32614, 32711, 33344, 33433, 33443, 33531, 33536, 33583, 33748, 33869, 34393, 34472, 34569, 34656, 34970, 34993, 35142, 35173, 35560, 35943, 36414, 36667, 36752, 37083, 37464, 37468, 38861, 38888, 39083, 39668, 39812, 39858, 40167, 40172, 40212, 40297, 40699],
    "yí jí": [20033],
    "yì": [20034, 20041, 20100, 20134, 20159, 20231, 20287, 20350, 20427, 20740, 20863, 21e3, 21139, 21166, 21210, 21225, 21255, 21587, 21613, 21625, 21768, 22216, 22299, 22340, 22460, 22520, 22869, 23253, 23313, 23537, 23673, 23748, 23975, 24095, 24096, 24134, 24281, 24322, 24328, 24331, 24441, 24518, 24584, 24639, 24722, 24847, 25014, 25036, 25087, 25233, 25401, 25953, 26131, 26233, 26304, 26318, 26457, 26509, 26861, 27023, 27128, 27277, 27485, 27540, 27562, 27577, 27589, 27970, 28005, 28019, 28249, 28322, 28521, 28602, 28727, 28808, 28978, 29088, 29092, 29116, 29146, 29153, 29169, 29512, 29620, 30064, 30123, 30188, 30231, 30238, 30257, 30292, 30410, 30614, 31315, 31465, 31698, 32266, 32374, 32377, 32462, 32546, 32681, 32703, 32714, 32716, 32755, 32764, 32820, 32900, 32906, 33161, 33222, 33367, 33402, 33413, 33477, 33823, 34042, 34191, 34265, 34269, 34329, 34377, 34612, 34720, 34922, 34979, 35028, 35035, 35129, 35196, 35378, 35379, 35405, 35427, 35516, 35695, 35696, 35739, 35758, 35793, 35811, 35850, 35929, 35931, 35959, 35990, 36096, 36295, 36726, 36920, 37009, 37139, 37303, 37364, 37408, 37808, 37951, 38226, 38257, 38435, 38591, 38700, 39248, 39365, 39515, 39551, 39598, 39848, 40322, 40323, 40333, 40385, 40394, 40423, 40446, 40451, 40541, 40546, 40659, 40824],
    "nǎi": [20035, 20535, 22902, 23341, 24316, 27670, 30099, 33407, 36858, 37346],
    "wǔ": [20036, 20116, 20213, 20237, 20398, 20533, 20763, 21320, 21838, 22953, 23084, 23285, 24209, 24289, 24548, 24579, 25006, 25664, 27494, 28501, 29075, 29310, 29597, 29687, 29798, 29970, 30868, 33310, 36492, 36821, 36892, 38490, 40289, 40521],
    "jiǔ": [20037, 20038, 20061, 20067, 22906, 26470, 27747, 28792, 29590, 32036, 33295, 37202, 38265, 38893, 38894],
    "tuō zhé": [20039, 26452, 39346],
    "me mó ma yāo": [20040],
    "zhī": [20043, 20481, 21358, 24053, 25624, 25903, 26624, 26772, 26917, 27056, 27713, 27868, 30135, 31063, 31084, 31187, 31257, 32149, 32930, 32977, 32989, 33026, 33437, 34357, 34584, 34940, 38587, 40183, 40242, 40709],
    "wū wù": [20044],
    "zhà": [20045, 21668, 23473, 25662, 27048, 28320, 30148, 34481, 35408, 35784, 37281, 38661],
    "hū": [20046, 20079, 21282, 21291, 21628, 21823, 22033, 22400, 23523, 24160, 24573, 24794, 26130, 27473, 27864, 28148, 28409, 28864, 33528, 34381, 34390, 35644, 36580, 36727, 38608],
    "fá": [20047, 20240, 20640, 22394, 22433, 22690, 22978, 26672, 27980, 30594, 31529, 31567, 32602, 32624, 32632, 34245, 38309, 38400],
    "lè yuè yào lào": [20048, 27138],
    "yín": [20049, 21535, 22102, 22170, 22273, 22432, 22820, 23148, 23493, 23806, 23839, 23855, 27309, 27557, 27903, 28139, 28379, 28878, 29374, 29434, 29836, 30797, 30866, 33654, 34089, 35348, 35354, 35361, 35518, 37150, 37405, 37504, 38134, 38698, 40419, 40806],
    "pīng": [20050, 20444, 23049, 28036, 30009, 30767, 32864, 33397, 38953],
    "pāng": [20051, 28354, 33006, 33174, 38641, 38710],
    "qiáo": [20052, 20392, 20689, 23286, 24980, 26725, 27095, 27189, 27211, 27381, 29342, 30631, 30810, 30980, 33613, 33630, 34126, 34286, 35673, 36267, 37896, 38802, 38845, 39014],
    "hǔ": [20053, 29733, 33792, 34382, 34397, 37695, 39921],
    "guāi": [20054],
    "chéng shèng": [20055, 20056, 23053],
    "yǐ": [20057, 20059, 20197, 20506, 20591, 23327, 23866, 24050, 24225, 25158, 25914, 25980, 26065, 26070, 27301, 30691, 30994, 31510, 33315, 33380, 33505, 33506, 34433, 34712, 34811, 35071, 36390, 36642, 36697, 36888, 37199, 37332, 37400, 37487, 38023, 38999, 40166, 40814],
    "háo yǐ": [20058],
    "niè miē": [20060],
    "qǐ": [20062, 20225, 21551, 21784, 21843, 21844, 21855, 23117, 23674, 26462, 26856, 29592, 30400, 32186, 32494, 33425, 35564, 36215, 37012, 38361],
    "yě": [20063, 20918, 22050, 22492, 22724, 28444, 37326],
    "xí": [20064, 21946, 23219, 23949, 24109, 26938, 27268, 28445, 32722, 33990, 34989, 35186, 35233, 35275, 35637, 36248, 37067, 37812, 38576, 38699, 39105, 39473, 39485, 39528, 39996, 40155],
    "xiāng": [20065, 21410, 24258, 24512, 27007, 27392, 28248, 29910, 31269, 31665, 32215, 32515, 33207, 33431, 33835, 33881, 34188, 35140, 37111, 37129, 37130, 37141, 38002, 38262, 39321, 39524, 39591, 40028, 40600],
    "shū": [20070, 20495, 20496, 20789, 21460, 23005, 23575, 25234, 25491, 25669, 25860, 26360, 26530, 26803, 27166, 27530, 27571, 27641, 27642, 28113, 28717, 28930, 30094, 30095, 32019, 32128, 32446, 33298, 33789, 34092, 36360, 36567, 36664, 36755, 37123, 38478, 39835, 40296],
    "dǒu": [20071, 25238, 26515, 34474, 37380, 38439, 38497],
    "shǐ": [20072, 20351, 20824, 21490, 22987, 23465, 23630, 27009, 30690, 31542, 35925, 37442, 39387, 39542],
    "jī": [20073, 20703, 20987, 21001, 21007, 21086, 21501, 21799, 21918, 21976, 22064, 22334, 22522, 22716, 23020, 23632, 23878, 23879, 25731, 25802, 26398, 26426, 26501, 27181, 27231, 27588, 28608, 29316, 29585, 29859, 30072, 30079, 30314, 30710, 30959, 31215, 31309, 31492, 31571, 31637, 31754, 32193, 32641, 32647, 32648, 32813, 32908, 33448, 34368, 35209, 35210, 35663, 35684, 35749, 36075, 36087, 36173, 36347, 36369, 36491, 36536, 37512, 37668, 37910, 37959, 37977, 38574, 38622, 38847, 38898, 39138, 39249, 39269, 39765, 40174, 40335, 40378, 40388, 40452, 40481, 40782, 40783, 40785],
    "náng": [20074, 22178, 27420, 34864, 39266],
    "jiā": [20075, 20339, 20642, 21152, 22025, 25272, 26551, 26780, 27616, 27847, 27971, 28025, 29324, 29491, 29640, 30146, 31539, 31960, 32798, 33141, 33901, 34952, 35949, 35985, 36303, 36838, 37483, 37813, 38227, 40208, 40602],
    "jù": [20076, 20520, 20534, 20855, 21095, 21127, 21230, 22503, 22526, 22729, 22998, 23654, 23656, 23712, 24040, 24042, 24583, 24807, 24883, 25029, 25084, 25298, 25312, 26139, 27499, 27952, 28605, 28844, 28901, 29323, 31212, 31405, 31414, 31796, 31892, 32799, 32858, 34401, 34487, 35406, 35765, 35942, 36317, 36382, 36486, 36989, 37037, 37301, 37445, 37947, 38044, 39094, 39123, 39375, 39828],
    "shí": [20077, 21313, 22488, 22610, 23036, 23454, 23455, 23508, 23526, 23765, 23925, 26102, 26105, 26178, 27055, 28252, 28321, 28859, 31055, 31437, 34432, 34645, 36795, 36936, 37456, 39136, 39267, 39830, 39971, 40101, 40747, 40749],
    "mǎo": [20078, 20871, 21359, 23745, 25148, 26164, 27862, 31543, 34025, 37466, 38086],
    "mǎi": [20080, 22058, 33644, 34130, 36023, 40438],
    "luàn": [20081, 20098, 37344],
    "rǔ": [20083, 25833, 27741, 32919, 36785, 37135],
    "xué": [20084, 23398, 23416, 23747, 23976, 25992, 27894, 28585, 29154, 31348, 33555, 34965, 36357, 40445, 40500],
    "yǎn": [20085, 20456, 20547, 20796, 20822, 20823, 21411, 21428, 22110, 23373, 23875, 24024, 24026, 24327, 24861, 25133, 25162, 25217, 25513, 25564, 26350, 26940, 27327, 27783, 28215, 28436, 29744, 29975, 30524, 32616, 33810, 34648, 34893, 35095, 36541, 36931, 37118, 38546, 39017, 39751, 39768, 39947, 40352, 40673, 40676, 40684, 40685, 40694, 40756, 40761, 40820, 40849],
    "fǔ": [20086, 20428, 20443, 20463, 24220, 24355, 25242, 25290, 25771, 26023, 26920, 28367, 28964, 29995, 30425, 31776, 33104, 33105, 34565, 36628, 36741, 37081, 37340, 37345, 38429, 38955, 39732, 40700],
    "shā": [20087, 21798, 26432, 26732, 27578, 27630, 29440, 30183, 30722, 30832, 32023, 32378, 32433, 34097, 35039, 37801, 38121, 38327, 39679, 39782, 39882, 39883, 40104],
    "nǎ": [20088, 38635],
    "qián": [20089, 20097, 20209, 20546, 21069, 22680, 23178, 23698, 25297, 25518, 27049, 27244, 27500, 28507, 28508, 28659, 28746, 31645, 33893, 34388, 36577, 37392, 37463, 37549, 37666, 37766, 38052, 38065, 38067, 38764, 39450, 39453, 39980, 40660, 40666],
    "suǒ": [20090, 21794, 21993, 25152, 26267, 28305, 28345, 29712, 29713, 29795, 32034, 35112, 37782, 37819, 37825, 38145],
    "yú": [20091, 20110, 20112, 20227, 20313, 22563, 22572, 22948, 23067, 23087, 23089, 23337, 23859, 23886, 23899, 24858, 25205, 25540, 26079, 26977, 26992, 27014, 27428, 27464, 27487, 27510, 28180, 28189, 28257, 28417, 28574, 29263, 29427, 29591, 29593, 29788, 29877, 30402, 30574, 31404, 31485, 31813, 32685, 33140, 33278, 33281, 33286, 33349, 33584, 33838, 33848, 34125, 34331, 34398, 34422, 34643, 34744, 34919, 35093, 35238, 35278, 35547, 35619, 35840, 36400, 36671, 36701, 36926, 37016, 37201, 37725, 38533, 38611, 38633, 39192, 39296, 39455, 39596, 39619, 39770, 39779, 39869, 39922, 39941, 40060, 40416, 40454, 40821],
    "zhù": [20092, 20267, 20295, 20303, 22398, 22712, 22772, 23872, 25280, 26492, 26609, 27174, 27574, 27880, 28855, 30128, 30493, 31069, 31081, 31450, 31599, 31672, 31723, 31767, 32053, 32056, 32443, 32668, 32741, 33486, 33671, 34496, 35387, 36015, 36142, 36307, 36596, 37458, 37619, 37956, 38136, 39349, 39376, 39547],
    "zhě": [20093, 32773, 35126, 35189, 36205, 36407, 37754, 38167],
    "qián gān": [20094],
    "zhì luàn": [20095],
    "guī": [20096, 22317, 22955, 23215, 23266, 23296, 24112, 24402, 25707, 26909, 27131, 27132, 27383, 27512, 29674, 29808, 29853, 29900, 30344, 30625, 30789, 33573, 34348, 35215, 35268, 37053, 37068, 38312, 38394, 39465, 39734, 39737],
    "lǐn lìn": [20099],
    "jué": [20101, 20915, 21012, 21122, 21303, 21413, 22090, 23378, 23379, 23835, 23851, 23973, 24399, 24992, 25008, 25092, 25225, 25367, 25496, 25899, 26743, 27227, 27228, 27438, 27666, 27770, 28749, 28979, 29094, 29201, 29236, 29237, 29527, 29571, 29606, 29608, 29647, 29812, 30234, 30669, 30689, 30724, 32085, 32118, 32477, 33220, 33461, 34141, 34152, 34419, 34792, 34793, 35286, 35310, 35324, 35363, 35662, 35776, 35890, 35996, 36221, 36233, 36471, 36521, 37388, 37901, 37917, 38017, 38242, 40194, 40195, 40418],
    "le liǎo": [20102],
    "gè mā": [20103],
    "yǔ yú": [20104, 25049],
    "zhēng": [20105, 20290, 20967, 22979, 23196, 23781, 23837, 23842, 24449, 24496, 28833, 28893, 29229, 29424, 29465, 30309, 30480, 30529, 30556, 31581, 31631, 31708, 32839, 33024, 33976, 36397, 37478, 37658, 37875, 39687],
    "èr": [20108, 21045, 21665, 24333, 24336, 27186, 35456, 36014, 36019, 36144, 39670],
    "chù": [20109, 20631, 20746, 24629, 25015, 25616, 26038, 27484, 29695, 29729, 30679, 31436, 32064, 32460, 33221, 35302, 35320, 35926, 37136, 38310, 40668],
    "kuī": [20111, 21042, 23743, 24011, 30420, 31397, 31418, 32871, 34407, 38362, 39005],
    "yún": [20113, 20253, 21243, 21248, 22249, 22936, 24874, 25251, 26112, 27218, 27780, 28066, 28339, 28560, 29065, 30023, 31184, 31612, 31700, 32028, 32284, 32429, 32792, 33464, 33975, 34131, 37095, 37142, 37574, 38642],
    "hù": [20114, 20913, 21952, 22171, 23135, 23277, 23278, 23733, 24077, 24342, 24601, 25142, 25143, 25144, 25149, 25160, 25252, 26120, 27124, 27789, 27818, 28396, 29097, 29920, 31068, 31503, 31748, 31888, 32148, 34096, 35703, 35952, 37152, 37721, 38912, 40047, 40160, 40184, 40460, 40561],
    "qí": [20115, 21080, 22524, 23696, 23699, 23822, 23900, 24877, 25489, 25993, 25994, 26050, 26071, 26826, 26827, 27313, 27328, 27495, 28103, 28637, 29449, 29570, 29734, 29738, 29826, 30054, 30119, 30849, 30869, 31041, 31048, 31098, 31141, 31442, 31791, 31793, 31823, 31928, 32165, 32166, 32949, 33040, 33229, 33385, 33450, 33793, 33813, 34162, 34244, 34308, 34449, 34458, 34548, 34589, 34590, 34727, 34832, 35072, 36573, 37183, 37358, 37665, 38172, 38509, 38926, 39040, 39438, 39439, 39481, 39568, 39569, 39696, 39743, 39893, 39981, 40111, 40141, 40312, 40320, 40594, 40609],
    "jǐng": [20117, 20742, 21037, 21060, 22355, 23441, 24156, 25004, 26299, 27532, 27755, 27756, 28555, 29828, 29855, 29861, 31357, 32956, 34812, 35686, 38449, 38938, 38968],
    "sì": [20118, 20288, 20385, 20777, 20821, 21987, 22235, 22994, 23088, 23392, 23546, 24051, 26614, 27065, 27740, 27863, 27876, 27917, 27936, 28056, 28675, 29293, 31040, 31145, 31458, 31525, 32796, 32898, 32902, 34172, 35223, 35972, 37362, 37430, 37435, 39140, 39164, 39282, 39391, 39427, 39543],
    "suì": [20119, 23320, 23681, 23895, 26078, 27286, 27506, 27507, 28603, 29035, 29159, 29874, 30741, 30862, 31071, 31149, 31298, 31319, 31327, 32320, 32336, 32376, 35162, 35510, 35682, 35847, 36069, 36995, 37894, 37929, 38567, 38882],
    "gèn": [20120, 20121, 25583, 25604, 33563],
    "yà": [20122, 20124, 20473, 20916, 21148, 22292, 22304, 22497, 23045, 23149, 25568, 27689, 27692, 29373, 30737, 31247, 32848, 35198, 35200, 35357, 35766, 36711, 36819, 40830],
    "xiē suò": [20123],
    "qí zhāi": [20125, 40778],
    "yā yà": [20126, 21387, 22445, 22739, 38100],
    "jí qì": [20127, 28943],
    "tóu": [20128, 25237, 38957, 39600],
    "wáng wú": [20129],
    "kàng háng gāng": [20130],
    "dà": [20131, 30484],
    "jiāo": [20132, 20716, 23047, 23308, 23783, 23957, 23971, 24973, 26898, 27975, 28550, 28966, 30977, 31322, 31781, 33014, 33184, 33202, 33581, 33582, 34121, 34400, 34527, 34797, 36324, 36679, 37066, 37902, 39509, 39556, 39851, 40091, 40257, 40422, 40430, 40554],
    "hài": [20133, 21968, 23475, 27686, 39168, 39258, 39405, 39412, 39559],
    "hēng pēng": [20136],
    "mǔ": [20137, 22982, 23764, 25287, 27597, 29281, 29299, 30018, 30022, 30034, 30045, 30046, 30062, 30762, 32991, 36359, 37479],
    ye: [20138],
    "xiǎng": [20139, 20143, 21709, 24819, 26193, 34435, 34817, 38911, 39144, 39177, 39255, 39287, 39837, 39895, 40054, 40094],
    "jīng": [20140, 20144, 20834, 22357, 22361, 23131, 24778, 26060, 26061, 26230, 27256, 27902, 28039, 29444, 30555, 31188, 31241, 31923, 31934, 32076, 32147, 32161, 32857, 33096, 33550, 33606, 33610, 33729, 33871, 39514, 39912, 40120, 40321, 40324, 40598, 40608, 40753],
    "tíng": [20141, 20572, 23159, 23881, 24237, 24311, 26975, 27059, 31603, 32868, 33691, 33910, 34579, 34639, 35562, 37010, 38662, 40750],
    "liàng": [20142, 21928, 24738, 26238, 28280, 35538, 35845, 36620, 36635, 36742, 37700],
    "qīn qìng": [20146, 35242],
    "bó": [20147, 20194, 20412, 20720, 21338, 24091, 24893, 25066, 25388, 25615, 27394, 28001, 28159, 28196, 29055, 29268, 29403, 29917, 31028, 31201, 31636, 31769, 31978, 32969, 33046, 33162, 33334, 33354, 33825, 33895, 34991, 35151, 35182, 35592, 36387, 37091, 37432, 37457, 37581, 37787, 37998, 38073, 38082, 38216, 39226, 39310, 39323, 39326, 39361, 39406, 39539, 39622, 40275, 40513],
    "yòu": [20148, 20305, 20326, 20369, 21448, 21491, 21706, 21760, 22271, 23031, 23461, 23775, 24188, 29398, 31056, 34484, 35480, 35825, 35969, 36854, 37229, 37321, 40748],
    "xiè": [20149, 20275, 20574, 20592, 20673, 21352, 21368, 22119, 22638, 22801, 23199, 23633, 23655, 24296, 24482, 25032, 26284, 26800, 27021, 27053, 27899, 27945, 28203, 28581, 28681, 28707, 28794, 28839, 28840, 29166, 29205, 29548, 31044, 31164, 31951, 32050, 32079, 32108, 32370, 32392, 32449, 32567, 34210, 34212, 34809, 34831, 35081, 35131, 35613, 35874, 36510, 36994, 38782, 38896, 40770, 40792, 40795, 40805],
    "dǎn dàn": [20150, 39358],
    "lián": [20151, 21126, 21298, 21299, 22009, 22098, 22849, 22889, 23294, 24088, 24265, 24604, 24976, 28063, 28451, 28610, 28627, 28718, 29073, 29163, 31806, 31842, 31848, 32314, 32756, 32852, 32872, 32875, 32878, 32879, 33217, 33714, 34030, 34197, 34698, 34826, 35042, 35123, 35229, 35632, 36453, 36830, 36899, 37772, 37934, 38256, 39697, 39985, 40098],
    "duǒ": [20152, 21722, 22194, 22517, 23836, 26421, 26422, 32158, 32525, 36243, 36529, 36530, 36547],
    "wěi mén": [20153, 26006],
    "rén": [20154, 20155, 20161, 22764, 24520, 24526, 26418, 31170, 33442, 39772, 40256],
    "jí": [20156, 20157, 20235, 20342, 20590, 21337, 21363, 21373, 21450, 21469, 21513, 22578, 22601, 23006, 23241, 23692, 23924, 23983, 24438, 24547, 24613, 24881, 25122, 25572, 26497, 26840, 26987, 26997, 27081, 27293, 27547, 27762, 28242, 28503, 30142, 30240, 30349, 31496, 31679, 31821, 32026, 32423, 33164, 33381, 33978, 34112, 34170, 34637, 34703, 35147, 35289, 35899, 36374, 36432, 36516, 36655, 36698, 36753, 37062, 37537, 37715, 37878, 38598, 38631, 38709, 40545],
    "wáng": [20158, 20220, 20838, 33699, 34463],
    "shén shí": [20160],
    "lè": [20162, 21499, 24519, 27707, 27856, 29583, 30771, 31765, 33403, 38430, 38903, 39182, 39987, 40051, 40147],
    "dīng": [20163, 21486, 24068, 29582, 30100, 30447, 32821, 34416, 38762],
    "zè": [20164, 23857, 24194, 25425, 26115, 26135, 27716],
    "jǐn jìn": [20165, 20677, 23268],
    "pú pū": [20166],
    "chóu qiú": [20167],
    "zhǎng": [20169, 24165, 25484, 30979],
    "jīn": [20170, 22587, 24062, 24781, 26020, 27941, 29650, 29755, 29857, 30747, 31563, 33621, 34943, 35167, 35284, 37329, 37330, 37375, 38021, 40566, 40645],
    "bīng": [20172, 20178, 20853, 20907, 20912, 25508, 27703, 37618],
    "réng": [20173, 31037, 33471, 36792, 38526],
    "fó": [20175, 22386, 26811],
    "jīn sǎn": [20176],
    "lún": [20177, 20262, 20374, 20523, 22261, 22279, 23144, 23832, 23833, 26822, 27814, 28138, 30958, 33088, 33749, 34598, 36378, 36650, 36718, 37632, 38511, 39913],
    "cāng": [20179, 20218, 20489, 20948, 23906, 27815, 28356, 28664, 29514, 33329, 33369, 33485, 33980, 34725, 40487],
    "zǎi zǐ zī": [20180],
    "tā": [20182, 22604, 23427, 27033, 28347, 29280, 31042, 35103, 36287, 36962],
    "fù": [20184, 20585, 20613, 20904, 21103, 21648, 22399, 22797, 22919, 23142, 23181, 23316, 23500, 24489, 26929, 31060, 31139, 31438, 32238, 32283, 32538, 33145, 33839, 34151, 34489, 34519, 34652, 34670, 34973, 35079, 35204, 35206, 35331, 35394, 35747, 36e3, 36070, 36091, 36127, 36171, 36185, 36212, 36665, 37713, 37730, 38428, 38468, 39333, 39385, 39544, 39826, 39954, 40075, 40134],
    "xiān": [20185, 20186, 20321, 20682, 20722, 20808, 22037, 22910, 23667, 24303, 24570, 25016, 25472, 26297, 26484, 27673, 29655, 31046, 31176, 31868, 32330, 32398, 32406, 33518, 35132, 35187, 36345, 36462, 36506, 37232, 37697, 38184, 38895, 38897, 39334, 40059, 40369],
    "tuō chà duó": [20187],
    "hóng": [20188, 21552, 22444, 22917, 23042, 23439, 23446, 24344, 24395, 27759, 27859, 27946, 28004, 28209, 28482, 29586, 29596, 30804, 31441, 31460, 31690, 31904, 32024, 32045, 32139, 32430, 32707, 32733, 32830, 33520, 33645, 33874, 33875, 35897, 35900, 37404, 37495, 37584, 38286, 38387, 38672, 38687, 38787, 39775, 40251, 40511, 40649, 40652],
    "tóng": [20189, 20319, 21699, 23746, 23773, 24221, 24420, 26189, 26312, 26704, 27651, 28021, 28540, 29341, 29534, 30510, 30643, 30780, 31217, 31461, 31905, 33191, 33596, 34450, 35447, 36200, 37230, 37462, 37493, 37509, 38108, 39175, 39846, 40086],
    "rèn": [20190, 20205, 20995, 20996, 22922, 23001, 23675, 23683, 25192, 29283, 31053, 32009, 32029, 32077, 32427, 32436, 32917, 33101, 34941, 34997, 35346, 35469, 35748, 35761, 36564, 36715, 37395, 38765, 38769, 38860, 38887, 39146, 39169, 39274],
    "qiān": [20191, 20325, 20681, 21315, 22322, 22903, 23407, 23693, 24749, 24838, 24947, 25190, 25322, 25652, 25729, 25872, 25873, 25875, 26436, 27343, 27736, 27751, 29301, 29309, 31439, 31614, 31805, 31830, 31844, 31873, 33418, 33598, 34440, 35120, 35536, 35609, 35878, 35896, 36801, 36983, 37370, 37382, 37467, 37874, 38030, 38433, 38854, 38981, 39467, 39582, 39708, 39709, 40302, 40528],
    "gǎn hàn": [20192],
    "yì gē": [20193],
    "dài": [20195, 20386, 21447, 22408, 22509, 23729, 24082, 24102, 24111, 24118, 24279, 24608, 25140, 26307, 26571, 27526, 28731, 29619, 29767, 29977, 31780, 32063, 32255, 32464, 33372, 34675, 34955, 35190, 36003, 36151, 36443, 36561, 36570, 36585, 36714, 36840, 38708, 38726, 40207, 40667, 40689],
    "lìng líng lǐng": [20196],
    "chào": [20198, 32790, 35288],
    "cháng zhǎng": [20199, 20815, 38263, 38271],
    "sā": [20200],
    "cháng": [20201, 20607, 20767, 22039, 22160, 23270, 23581, 24120, 24476, 29818, 29946, 29982, 32928, 33144, 33171, 33484, 33799, 38264, 40040, 40127],
    "yí": [20202, 20359, 20736, 20893, 21276, 21670, 22319, 22839, 23016, 23440, 23452, 23463, 23538, 23763, 23980, 23991, 24056, 24411, 24412, 24413, 24414, 24609, 24670, 25157, 26246, 26648, 26924, 26936, 27778, 27935, 29098, 29941, 30157, 31227, 31747, 31822, 32672, 33008, 33811, 34534, 34708, 35322, 35643, 36029, 36155, 36320, 36859, 36986, 37844, 38921, 38948, 38949, 38986, 39056, 39284, 39847, 40250],
    "mù": [20203, 20969, 21215, 22675, 24149, 24153, 24916, 24917, 26286, 26287, 26408, 26968, 27619, 27792, 28817, 29287, 29383, 30446, 30566, 31302, 33362, 33500, 33711, 34462, 37484, 38076, 38638, 38658],
    "men mén": [20204],
    "fǎn": [20206, 21453, 27214, 36820],
    "chào miǎo": [20207],
    "yǎng áng": [20208],
    "zhòng": [20210, 20247, 22585, 22933, 23185, 29382, 30526, 31052, 31575, 33597, 34459, 34886, 34934, 35557],
    "pǐ pí": [20211],
    "wò": [20212, 20563, 21351, 23177, 24132, 25569, 26947, 27779, 28197, 28643, 29889, 30595, 30826, 32927, 33115, 33253, 40823, 40844],
    "jiàn": [20214, 20468, 20581, 20717, 21073, 21091, 21105, 21133, 21134, 21138, 21140, 22713, 23499, 24314, 24484, 25846, 26068, 26967, 27645, 27914, 28071, 28567, 29294, 29652, 30647, 30965, 30976, 31661, 31947, 32349, 33137, 33270, 33328, 33382, 33616, 34214, 35256, 35539, 35563, 35675, 35855, 36046, 36068, 36145, 36253, 36341, 36368, 36410, 36702, 37492, 37747, 37749, 37937, 37969, 37970, 37996, 38003, 38190, 38291, 39198, 39279],
    "jià jiè jie": [20215],
    "yǎo fó": [20216],
    "rèn rén": [20219],
    "fèn bīn": [20221],
    "dī": [20222, 20302, 21874, 22494, 22564, 23739, 24445, 27136, 28404, 30974, 31210, 32669, 34971, 36230, 38532, 38830],
    "fǎng": [20223, 20515, 26058, 26121, 26136, 29932, 30470, 32033, 32442, 33323, 35370, 35775, 39651, 40365],
    "zhōng": [20224, 21027, 22928, 24146, 24440, 24544, 26570, 27767, 27848, 28802, 30405, 31846, 32066, 32456, 33327, 34080, 34585, 34724, 34749, 34931, 34935, 36465, 37409, 37758, 37912, 38047, 38202, 40228, 40744],
    "pèi": [20226, 20329, 23029, 24084, 26046, 26054, 27803, 28031, 29678, 34012, 36705, 36756, 37197, 38664, 39351],
    "diào": [20228, 21514, 24340, 25481, 30265, 30404, 31374, 31413, 31464, 35339, 37347, 37407, 37553, 37629, 37955, 38035, 38110, 38655, 39777],
    "dùn": [20229, 28513, 28822, 29129, 30462, 30744, 30903, 36402, 36871, 36929, 36975, 37389, 38045],
    "wěn": [20230, 21006, 21563, 21573, 25222, 26749, 31283, 31311, 31337, 32010, 32947, 33047],
    "xǐn": [20232],
    "kàng": [20233, 21279, 22245, 25239, 28821, 37415, 38058],
    "ài": [20236, 20734, 22631, 22738, 23250, 23329, 24859, 25043, 26279, 26326, 29233, 29815, 29862, 30375, 30649, 30777, 30795, 30861, 31001, 34182, 35706, 36089, 37952, 38552, 38729, 39218, 39332, 40043, 40241],
    "jì qí": [20238, 34234],
    "xiū xǔ": [20241],
    "jìn yín": [20242],
    "dǎn": [20244, 21008, 25762, 29612, 29933, 32030, 32966, 33213, 34932, 36071, 36181, 40661],
    "fū": [20245, 21579, 23056, 23413, 23555, 24612, 25071, 25975, 26057, 29598, 30726, 31235, 31583, 31952, 32146, 32932, 33178, 33602, 33652, 34925, 36282, 36311, 37022, 37148, 37212, 37383, 40617, 40620, 40625, 40632],
    "tǎng": [20246, 20645, 20795, 22507, 25091, 26349, 29219, 30680, 36538, 37810, 38018, 38219],
    "yōu": [20248, 20778, 21606, 22168, 23795, 24189, 24551, 24736, 24962, 25912, 27340, 28410, 28672, 32395, 32682, 32816, 36876, 37182, 40576],
    "huǒ": [20249, 22821, 28779, 29047, 37033, 37413, 38060],
    "huì kuài": [20250, 26371, 27981, 29871],
    "yǔ": [20251, 20417, 20451, 20554, 20660, 21292, 22131, 22276, 22281, 23431, 23513, 23679, 23996, 24254, 25383, 25940, 26014, 26944, 29760, 30224, 31076, 31161, 31333, 31411, 32701, 33287, 33837, 35984, 37125, 38952, 40588, 40812, 40841],
    "cuì": [20252, 21851, 24560, 24756, 27635, 28140, 28960, 30121, 30209, 31425, 31883, 31929, 32035, 32183, 32710, 32736, 33027, 33030, 33082, 33196, 33205, 33230, 33795, 35146, 38983],
    "sǎn": [20254, 20632, 31972, 32342, 39242, 39315],
    "wěi": [20255, 20266, 20553, 20605, 20702, 20784, 23059, 23530, 23843, 23945, 24491, 24839, 25444, 26256, 26806, 27943, 27992, 28200, 28828, 29010, 29477, 29614, 29771, 30207, 32239, 32428, 33138, 33353, 33435, 33479, 33649, 33806, 33894, 33933, 34111, 34620, 35529, 35839, 36371, 37729, 38865, 38873, 38881, 38890, 38944, 39097, 39593, 39594, 39595, 39850, 40084],
    "chuán zhuàn": [20256, 20659],
    "chē jū": [20257, 20453, 36554, 36710],
    "yá": [20258, 21393, 21395, 22544, 23688, 23829, 23830, 28079, 28420, 29273, 29601, 29706, 30554, 31500, 33469, 34460, 34905, 40790],
    "qiàn": [20259, 20436, 20521, 20761, 21003, 22733, 23345, 24723, 26824, 26912, 27111, 27424, 27465, 30360, 31695, 31711, 32308, 33441, 33960, 34099, 36644],
    "shāng": [20260, 20663, 21830, 22674, 24943, 27527, 27556, 28403, 28449, 29109, 34063, 34730, 35294, 35316, 35626, 39738],
    "chāng": [20261, 20480, 23100, 26124, 26905, 28112, 29462, 29737, 33750, 35054, 37673, 38176, 38326, 38410, 39911, 40115, 40730],
    "chen cāng": [20263],
    "xùn": [20264, 20378, 21314, 22080, 24058, 24061, 24455, 24891, 27529, 27582, 27739, 28512, 29413, 34120, 35338, 35347, 35353, 35757, 35759, 36805, 36863, 36874, 36956, 37954, 39016, 39348, 39535],
    "xìn": [20265, 22239, 23390, 33066, 33291, 34885, 35371, 37313, 38432, 38998],
    "chǐ": [20268, 20360, 21366, 21498, 22417, 24677, 27503, 32827, 32916, 32995, 34439, 35053, 35115, 35913, 37497, 40786, 40831],
    "xián xuán": [20269],
    "nú nǔ": [20270],
    "bǎi bó": [20271],
    "gū gù": [20272],
    "nǐ": [20273, 20320, 20766, 23412, 25311, 25836, 26062, 26226, 29396, 33512, 34239, 38572],
    "nì ní": [20274],
    "bàn": [20276, 21150, 21322, 22981, 24593, 25198, 29923, 31194, 32070, 32458, 36774, 37473, 38781],
    "xù": [20277, 20368, 21206, 21207, 21369, 21465, 22463, 22779, 23167, 24207, 24676, 25933, 25944, 26093, 26155, 26370, 27090, 27440, 27528, 27775, 27776, 27947, 28294, 28469, 28490, 28869, 28924, 29030, 29533, 29676, 30434, 30593, 31288, 32110, 32154, 32210, 32214, 32396, 32490, 32493, 32851, 32863, 33988, 34266, 35385, 36041, 37207, 38922, 40046],
    "zhòu": [20279, 20733, 20881, 21610, 21650, 21678, 23449, 26172, 26205, 29955, 30385, 30394, 31808, 31826, 31829, 31897, 32002, 32272, 32419, 32457, 32964, 33646, 33892, 35403, 37198, 39374, 39519, 39588],
    "shēn": [20280, 20353, 20831, 21627, 22548, 22973, 23072, 23678, 23799, 25183, 25938, 26321, 26587, 27680, 28145, 29130, 29637, 29985, 29991, 30003, 30482, 30775, 31356, 31862, 31864, 31938, 32051, 32453, 32601, 32615, 33888, 34017, 34072, 34195, 35025, 35383, 35445, 35804, 36523, 39402, 39891, 39925, 39994, 40121, 40290],
    "qū": [20281, 20297, 21284, 21631, 22373, 23624, 23702, 23732, 23943, 24968, 25278, 25978, 27968, 28992, 31067, 31553, 31916, 32992, 34502, 34512, 34986, 35259, 35416, 35790, 36237, 36527, 36544, 38457, 39366, 39368, 39493, 39537, 39671, 39804, 39992, 40011, 40332, 40623, 40628, 40633, 40674],
    "sì cì": [20282],
    "bēng": [20283, 22051, 22879, 23849, 23917, 38285],
    "sì shì": [20284],
    "jiā qié gā": [20285],
    "yǐ chì": [20289],
    "diàn tián": [20291, 38079],
    "hān gàn": [20292],
    "mài": [20293, 21154, 21233, 21334, 21787, 22770, 33032, 34887, 36067, 36808, 36993, 38689, 38690, 40613, 40614],
    "dàn": [20294, 20708, 21846, 21847, 21887, 22089, 22186, 24078, 25018, 26086, 26598, 27694, 27786, 27897, 28129, 29402, 30093, 30298, 31147, 31390, 33093, 33807, 34014, 34507, 34577, 35291, 35345, 35477, 35806, 36105, 38702, 39204, 39247, 39411, 39655, 40224],
    "bù": [20296, 21199, 21541, 21656, 22487, 22496, 24067, 24269, 24598, 24721, 27493, 27496, 27497, 29951, 31728, 33657, 34048, 36356, 37096, 37110, 37384, 38042, 39202],
    "bǐ": [20298, 20478, 21269, 22838, 22947, 24444, 26428, 26560, 27604, 27614, 27800, 30101, 31189, 31508, 31558, 31875, 32859, 33325, 35983, 37145],
    "zhāo shào": [20299],
    "cǐ": [20300, 27492, 27866, 30345],
    "wèi": [20301, 21355, 21619, 21890, 22683, 23206, 24944, 25024, 26410, 28205, 29023, 29101, 29338, 29484, 30031, 32237, 32635, 32963, 33535, 33739, 34287, 34358, 34655, 34737, 34907, 34910, 35133, 35586, 35718, 35727, 35859, 36503, 36507, 36558, 36682, 37839, 38696, 39207, 39221, 39254, 39759, 39815, 40154],
    "zuǒ": [20304, 24038, 32339],
    "yǎng": [20306, 20639, 20859, 22385, 23711, 24899, 25065, 25857, 27687, 27697, 28852, 30162, 30306, 31010, 32059, 34630, 36590, 39178, 39386],
    "tǐ tī": [20307, 39636],
    "zhàn": [20308, 20577, 23960, 25112, 25126, 25136, 26632, 26719, 26855, 28251, 31449, 32187, 32509, 33754, 34360, 34405, 34406, 35687, 36687, 39503],
    "hé hē hè": [20309],
    "bì": [20310, 21639, 21716, 22006, 22354, 22555, 22721, 22896, 22972, 23138, 23318, 24065, 24163, 24164, 24199, 24243, 24294, 24330, 24379, 24380, 24387, 24517, 24621, 24842, 24846, 25949, 25987, 26768, 27605, 27606, 27609, 28258, 28375, 28397, 28535, 29007, 29082, 29428, 29528, 29529, 29644, 29863, 30016, 30050, 30122, 30201, 30202, 30357, 30564, 30887, 31578, 31621, 31622, 31718, 31731, 31882, 32188, 32298, 32372, 32636, 33143, 33534, 33628, 33798, 33822, 34006, 34045, 34109, 34204, 34572, 34960, 35141, 35166, 35171, 35313, 35414, 35792, 36017, 36116, 36177, 36344, 36437, 36483, 36484, 36991, 37042, 37160, 37162, 37453, 37838, 37940, 38091, 38279, 38281, 38303, 38381, 38491, 38880, 39158, 39238, 39325, 39388, 39494, 39616, 39763, 39813, 40413, 40425, 40714],
    "tuó": [20311, 22376, 22582, 23726, 27094, 27216, 27825, 30755, 30756, 30882, 32061, 35409, 36302, 37217, 38436, 38464, 38465, 39389, 39390, 39464, 39506, 39517, 39548, 39808, 40213, 40501, 40713, 40717, 40743],
    "shé": [20312, 33292, 34421, 34533],
    "yì dié": [20314, 26163, 27846, 36604],
    "fó fú bì bó": [20315],
    "zuò zuō": [20316],
    "gōu": [20317, 27807, 28317, 30144, 31709, 31804, 32241, 32529, 34983, 35104, 37390, 37476, 38057, 38834, 38877],
    "nìng": [20318, 20395, 20543, 23509, 27870, 28573, 28632],
    "qú": [20322, 21164, 25141, 26026, 27403, 27412, 27661, 28141, 28744, 29216, 29846, 29865, 30319, 30962, 31847, 32071, 32970, 33246, 33731, 33867, 34134, 34343, 34781, 34871, 34876, 34896, 34914, 36515, 36581, 38010, 40221, 40476, 40498, 40745],
    "yōng yòng": [20323],
    "wǎ": [20324, 21651, 30745, 37047],
    "kǎ": [20327, 22448, 33001, 35011, 37490],
    "bāo": [20328, 21241, 21253, 23394, 29042, 31523, 32990, 33502, 34132, 35046, 35090, 35139, 38337, 40793, 40837],
    "huái huí": [20330],
    "gé hè": [20331],
    "lǎo": [20332, 21694, 24645, 26675, 29419, 29679, 30803, 32769, 32770, 33622, 34543, 36689, 37536, 38097, 39857],
    "xiáng": [20333, 24224, 26649, 31077, 32116, 32724, 35443, 36333],
    "gé": [20334, 21260, 21572, 21981, 22629, 24837, 25356, 25663, 27077, 27338, 28358, 33160, 33269, 33558, 35297, 35581, 36661, 36693, 38307, 38401, 38548, 38839, 38864, 38874, 39444, 39612, 39855],
    "yáng": [20335, 21175, 22431, 23864, 24457, 25196, 25562, 25965, 26104, 26140, 26264, 26472, 26954, 27915, 28800, 29660, 30113, 30221, 30523, 34520, 35577, 36656, 37722, 38038, 38438, 38451, 38525, 38711, 39098, 39119, 39953, 40249, 40457],
    "bǎi": [20336, 25453, 25670, 25850, 26658, 30334, 31457, 31912, 35180],
    "fǎ": [20337, 23772, 27861, 28747, 30749, 37701],
    "mǐng": [20338, 20949, 23027, 24911, 37225],
    "èr nài": [20340],
    "hěn": [20343, 24456, 29408, 35434],
    "huó": [20344, 27963],
    "guǐ": [20345, 21286, 21293, 21420, 22429, 23037, 23428, 24203, 24234, 24657, 26231, 28224, 30328, 31082, 31755, 34539, 34785, 35300, 35437, 35809, 36556, 36712, 38482, 39740],
    "quán": [20346, 20840, 21875, 22498, 23038, 23761, 24015, 25331, 25660, 26435, 27006, 27177, 27402, 27849, 27940, 28278, 29303, 29320, 29780, 30154, 30786, 31564, 32275, 33603, 33906, 34615, 34872, 35296, 35438, 35808, 36327, 36385, 36615, 36737, 37275, 37523, 38120, 38350, 39028, 39079, 39401, 39457, 39688, 39937, 40136, 40804],
    "tiāo": [20347, 24227, 26091, 31079, 32846],
    "jiǎo": [20348, 20748, 23362, 25378, 25605, 25759, 25785, 25898, 25963, 25981, 25983, 26184, 26270, 26322, 28762, 29150, 29409, 29868, 30350, 30374, 32094, 32400, 32478, 33139, 33259, 34780, 35665, 36043, 36363, 37496, 38128, 39171, 39290, 40014, 40867],
    "cì": [20349, 21054, 24219, 26431, 26664, 27425, 32088, 33574, 33727, 34515, 34694, 36060, 36176],
    "xíng": [20352, 21009, 21720, 22411, 23065, 24418, 27920, 30798, 34549, 37026, 37065, 37379, 37494, 37522, 38040, 38095, 38473, 38488, 39219],
    "tuō": [20354, 21635, 21660, 22315, 25176, 25301, 25302, 27729, 33067, 33073, 33676, 34981, 35351, 35756, 39141, 39270, 39776, 39861],
    "kǎn": [20355, 20568, 20890, 22350, 24770, 30733, 33712, 36641, 36695, 38993],
    "zhí": [20356, 20516, 20540, 22516, 22519, 23018, 23298, 25120, 25191, 25709, 26893, 27188, 28116, 28432, 30452, 31107, 32119, 32310, 32832, 32844, 32887, 33201, 34777, 36310, 36399, 36448, 36497, 36548, 37342, 39357],
    "gāi": [20357, 22419, 23007, 23760, 26192, 30049, 31092, 33604, 35442, 35813, 35941, 36037, 36044, 36165, 38484],
    "lái": [20358, 20459, 20488, 23811, 23821, 24242, 26469, 26814, 26870, 28062, 28150, 29453, 29724, 31577, 31618, 33713, 33802, 36904, 37106, 37688, 38140, 39435, 39904, 40326, 40627],
    "kuǎ": [20361, 21685, 22446, 37529],
    "gōng": [20362, 20844, 21151, 21265, 21268, 22632, 23467, 23470, 24037, 24138, 24339, 24685, 25915, 26459, 30909, 31996, 31999, 32945, 35301, 35317, 36524, 36531, 39672, 40852, 40858],
    "lì": [20363, 20432, 20458, 20616, 20782, 20791, 20947, 21033, 21147, 21169, 21237, 21382, 21385, 21412, 21423, 21426, 21459, 21519, 21590, 21774, 21811, 22182, 22215, 22364, 22619, 22754, 23091, 23151, 23668, 23718, 24743, 24759, 24900, 25150, 25646, 26278, 26310, 26334, 26424, 26533, 26627, 26647, 26651, 27306, 27348, 27370, 27408, 27508, 27511, 27813, 27828, 28054, 28327, 28671, 28701, 29199, 29345, 29441, 29653, 29806, 29893, 29905, 29925, 30124, 30178, 30311, 30445, 30553, 30725, 30778, 30782, 30975, 31018, 31019, 31024, 31154, 31197, 31435, 31520, 31717, 31890, 31901, 31986, 33079, 33480, 33560, 33620, 33669, 33673, 33946, 33950, 34294, 34488, 34510, 34528, 34599, 34679, 34823, 34851, 35400, 35720, 36210, 36706, 36707, 36729, 37192, 37469, 38582, 38583, 38643, 38722, 38731, 39681, 40168, 40215, 40389, 40604],
    "yīn": [20364, 20944, 21905, 22142, 22233, 22240, 22420, 22553, 23035, 23139, 24852, 24903, 26678, 27684, 27911, 28341, 28646, 30230, 31115, 31221, 31555, 32106, 32248, 33589, 33937, 34093, 35008, 35570, 37542, 38111, 38345, 38437, 38452, 38512, 38523, 38530, 38674, 38688, 38791, 38899, 38910, 39408, 39555, 40791],
    "mǐ": [20366, 23370, 24365, 25929, 27939, 28211, 28758, 31859, 31886, 32651, 33042, 33416, 33886, 34077, 37540],
    "zhū": [20367, 26666, 27104, 27237, 27367, 27371, 27929, 28532, 28710, 29482, 29664, 30787, 31228, 32081, 33585, 34127, 34523, 34667, 34857, 35006, 35461, 35576, 35803, 35832, 35948, 36326, 37054, 37526, 38114, 39407, 39842, 39930, 40248, 40708],
    "ān": [20370, 20579, 23189, 23433, 23766, 24245, 26697, 27688, 30438, 30443, 33124, 33780, 33851, 33866, 34029, 35485, 35571, 35865, 38796, 38797, 38909, 39331, 39839, 40298, 40341, 40524],
    "lù": [20371, 20679, 21198, 21216, 22309, 22388, 22646, 23101, 23757, 24280, 24404, 24405, 25134, 25693, 26882, 27162, 28117, 28133, 28172, 28425, 28510, 29741, 29840, 29994, 30429, 30569, 30793, 31103, 31108, 31249, 31307, 31635, 31759, 31788, 31797, 31798, 31833, 31926, 34061, 34135, 34370, 34736, 36034, 36162, 36258, 36335, 36379, 36439, 36613, 36678, 36738, 36760, 36911, 37249, 37636, 37682, 37684, 37876, 38520, 39428, 39484, 39909, 40252, 40294, 40305, 40442, 40557, 40575, 40595],
    "móu": [20372, 21178, 24648, 30520, 34513, 35584, 35851, 36366, 37738, 40254, 40624],
    "ér": [20373, 20799, 20816, 20818, 23759, 26669, 27919, 31915, 32780, 33017, 33611, 35003, 36608, 36700, 38481, 38573, 39669, 39838, 40085, 40239, 40504],
    "dòng tǒng tóng": [20375],
    "chà": [20376, 22908, 23033, 23700, 27722, 35435, 35815],
    "chì": [20377, 20666, 21189, 21201, 21489, 21883, 24435, 24668, 24919, 24975, 25048, 25270, 25941, 26021, 26456, 28225, 28795, 28861, 28926, 29118, 30163, 30200, 30235, 32708, 32709, 32740, 32744, 33119, 36196, 36265, 36971, 37459, 38644, 39149, 39276, 40338, 40408],
    "gòng gōng": [20379, 20849],
    "zhōu": [20380, 21608, 21900, 24030, 24479, 27954, 28109, 28863, 28880, 29656, 30698, 33311, 35589, 35704, 35788, 36057, 36178, 36616, 36630, 36736, 36913, 37102, 37506, 38668, 39410, 39430, 40259, 40508],
    "rú": [20382, 20754, 22149, 22914, 23340, 23418, 24100, 26328, 26695, 28202, 28641, 31566, 33593, 34144, 34231, 34657, 34837, 35005, 35174, 37018, 37305, 37539, 38135, 39020, 39077, 40044, 40209, 40253],
    "jiàn cún": [20383],
    "xiá": [20384, 20448, 21283, 23777, 23805, 25966, 26247, 26585, 28832, 28890, 29390, 29421, 29433, 29672, 29781, 30806, 30820, 30892, 31083, 31594, 32278, 32712, 33309, 33338, 34168, 36206, 36676, 36758, 36944, 37724, 37771, 38492, 38527, 38686, 39458, 39803, 40375, 40672],
    "lǚ": [20387, 20406, 20770, 21525, 21570, 23649, 23650, 23653, 25364, 25435, 26053, 26784, 28946, 31075, 31238, 31341, 32125, 32311, 32533, 33154, 33168, 35099, 35128, 37080, 37569, 38109],
    ta: [20388],
    "jiǎo yáo": [20389, 20709, 24506],
    "zhēn": [20390, 20597, 23498, 24103, 24106, 24128, 25656, 26015, 26722, 26984, 27035, 27196, 27549, 27976, 28254, 28519, 28597, 29513, 29645, 29646, 29799, 29956, 30494, 30495, 30759, 30890, 31087, 31118, 31131, 31668, 32983, 33275, 33908, 33942, 33985, 34237, 35998, 36126, 36675, 36937, 37209, 37341, 37441, 37681, 37756, 38024, 40053],
    "cè zè zhāi": [20391, 20596],
    "kuài": [20393, 20744, 20983, 21721, 22130, 22310, 22359, 22602, 24028, 24293, 24555, 26077, 27443, 29423, 29546, 31607, 31977, 33037, 33214, 37072, 37174, 40032, 40089],
    "chái": [20394, 20757, 21901, 26612, 29362, 31073, 35962],
    "nóng": [20396, 20738, 20892, 21725, 22117, 27266, 27393, 27987, 28611, 29174, 31151, 31230, 31328, 33043, 33215, 34173, 35163, 35688, 36786, 36787, 37298, 39710],
    "jǐn": [20397, 20760, 21370, 21418, 24057, 27135, 28428, 29822, 32039, 32202, 33771, 34035, 35641, 35880, 37670, 38182, 39241, 39313],
    "hóu hòu": [20399, 30694],
    "jiǒng": [20400, 20690, 20879, 22247, 27842, 28547, 28847, 28913, 29018, 29019, 29106, 29147, 31384, 32151, 35111, 36837, 36872, 38984, 39054],
    "chěng tǐng": [20401],
    "zhèn zhēn": [20402, 25557],
    "zuò": [20403, 20570, 21777, 22352, 23709, 23710, 24231, 31066, 31987, 32985, 33859, 33860, 34009, 34959, 38460],
    "qīn": [20405, 20819, 23175, 23898, 23956, 27453, 34942, 35483, 38054, 38985, 39416, 39566, 39868],
    "jú": [20407, 21881, 23109, 23616, 24008, 26888, 27224, 27878, 28119, 28264, 28951, 29329, 29386, 31927, 33738, 34332, 36252, 36348, 36459, 36610, 37113, 38320, 39414, 39527, 40281, 40308, 40362, 40752, 40755],
    "shù dōu": [20408],
    "tǐng": [20409, 22306, 23063, 25402, 28047, 28918, 29693, 33057, 33351, 35476, 38962, 39051],
    "shèn": [20410, 24892, 24910, 26138, 28033, 28183, 28402, 30214, 30254, 30488, 31091, 32958, 32962, 33060, 33102, 34563, 34564, 37600],
    "tuì tuó": [20411],
    "nán": [20413, 21891, 23066, 25257, 26260, 26511, 26591, 26976, 30007, 30040, 33710, 33843, 36950],
    "xiāo": [20414, 21715, 22069, 22203, 22210, 23115, 23471, 23477, 24232, 24391, 25585, 26541, 26549, 26783, 27385, 27466, 27594, 28040, 28487, 28703, 28785, 28786, 28875, 28935, 29447, 29538, 30170, 30175, 30813, 30819, 31385, 31659, 31768, 31787, 32131, 32481, 32731, 33198, 33831, 34157, 34376, 34387, 34754, 34767, 34800, 34856, 36355, 36877, 37559, 38144, 38660, 39093, 39501, 39553, 39623, 39632, 39752, 40222, 40245, 40397, 40494],
    "biàn pián": [20415, 32246, 32527],
    "tuǐ": [20416, 33151, 36422, 39613],
    "xì": [20418, 21304, 21324, 21612, 22669, 23619, 23635, 23661, 24549, 24620, 24644, 26910, 28509, 28511, 28569, 29058, 29332, 30966, 31114, 32048, 32140, 32280, 32454, 32484, 33283, 33284, 34158, 34409, 34891, 35236, 36201, 36231, 37092, 37363, 38411, 38553, 38559, 38716, 39228, 39273, 39721, 40662],
    "cù": [20419, 23208, 25009, 29469, 30212, 30255, 31751, 32300, 33064, 34079, 35470, 36247, 36391, 36415, 36441, 36468, 36469, 37259, 39011, 40704],
    "é": [20420, 22254, 23077, 23753, 23784, 23785, 28048, 29684, 30354, 30539, 30912, 33706, 35355, 35472, 35660, 35769, 36823, 37387, 37608, 38151, 38943, 38989, 39069, 39780, 40285, 40286, 40517],
    "qiú": [20421, 21492, 21778, 22234, 23863, 24047, 24048, 25167, 26754, 27535, 27628, 27714, 27731, 27845, 27991, 28269, 29034, 29360, 29580, 29699, 29830, 30387, 30426, 32012, 32127, 32909, 33409, 33677, 34412, 34415, 34551, 35032, 35283, 35305, 35332, 35333, 36053, 36167, 36878, 36881, 36946, 37195, 37338, 37371, 37558, 38916, 39810, 39876, 39997, 40765],
    "xú": [20422, 24464, 31121],
    "guàng kuāng": [20423],
    "kù": [20424, 21950, 22195, 24211, 24235, 24292, 30228, 32093, 32468, 34996, 35044, 35122, 37239],
    "wù": [20425, 21153, 21209, 21247, 21372, 22366, 22626, 22886, 23162, 23524, 23676, 23689, 23912, 24546, 24734, 24735, 24750, 25098, 25188, 26212, 26444, 28329, 28944, 29059, 29289, 30182, 30713, 31417, 31877, 34305, 35492, 35823, 37576, 38434, 38550, 38654, 38682, 38695, 38768, 39446, 39579, 40361, 40540, 40767, 40768],
    "jùn": [20426, 20737, 21569, 22472, 23535, 23803, 25039, 25411, 25887, 26201, 26846, 29127, 29690, 30063, 31459, 31647, 34592, 36048, 37089, 38486, 39189, 39298, 39423, 39567, 40276, 40277, 40280],
    "liáng": [20429, 22682, 26753, 26891, 27153, 31918, 31921, 31975, 33391, 36652, 36748],
    "zǔ": [20430, 21800, 29244, 31062, 32068, 32452, 35419, 35781, 37818, 38459, 38779],
    "qiào xiào": [20431],
    "yǒng": [20433, 21191, 21192, 21647, 22471, 22606, 23921, 24430, 24634, 24703, 24704, 24805, 24849, 24889, 24898, 26593, 26640, 27704, 27891, 28263, 29996, 34553, 35424, 36362, 36404, 39890, 40108],
    "hùn": [20434, 20529, 22274, 23585, 24897, 25485, 28343, 28957, 30580, 35304, 35554, 35816],
    "jìng": [20435, 20665, 22659, 22924, 23129, 23143, 24362, 24371, 24452, 24465, 25964, 26324, 26737, 26807, 27972, 28702, 29517, 30153, 30169, 31454, 31455, 31467, 31478, 31480, 33003, 33051, 33686, 35497, 36353, 36851, 36885, 37857, 38236, 38742, 38745, 38748, 40283],
    "sàn": [20437, 38288],
    "pěi": [20438],
    "sú": [20439],
    "xī": [20441, 20694, 20846, 20958, 21349, 21376, 21560, 21775, 21821, 22075, 22095, 22193, 22805, 22874, 23302, 23305, 23638, 23904, 24007, 24076, 24454, 24495, 24687, 24713, 24725, 24769, 24796, 26132, 26206, 26224, 26227, 26342, 26512, 26744, 27069, 27176, 27200, 27447, 27685, 27728, 28e3, 28101, 28179, 28330, 28911, 28929, 28936, 28959, 29060, 29064, 29081, 29113, 29114, 29115, 29160, 29204, 29306, 29312, 29344, 29351, 29707, 30236, 30361, 30542, 30630, 30717, 30802, 30926, 30978, 31232, 31352, 31416, 31902, 31974, 32198, 32357, 32690, 32725, 32726, 32952, 32953, 33181, 33342, 33667, 33765, 33952, 34597, 34693, 34763, 34869, 35199, 35321, 35325, 35327, 35654, 35903, 35904, 35944, 35951, 35989, 36197, 37020, 37134, 37189, 37295, 37368, 37675, 37869, 37898, 38004, 38177, 38581, 39183, 39246, 39291, 39889, 40279, 40450, 40759],
    "lǐ": [20442, 23052, 23778, 23794, 26446, 27418, 28012, 28583, 29702, 31036, 31150, 31924, 35023, 35041, 35914, 36902, 37008, 37300, 37616, 38146, 39881, 40039, 40049, 40100, 40162],
    "bǎo": [20445, 22562, 23212, 23453, 23514, 23539, 23542, 29668, 32229, 33862, 34293, 35091, 36082, 38732, 39161, 39165, 39281, 39362, 40181, 40199, 40488],
    "yú shù yù": [20446],
    "sì qí": [20447],
    "xìn shēn": [20449],
    "xiū": [20450, 20462, 21691, 24229, 27143, 28876, 32670, 33049, 33065, 33273, 35973, 37533, 37760, 39117, 39240, 39312, 39652, 39673, 39860, 40003, 40258, 40506],
    "dì": [20452, 20569, 20672, 22474, 22673, 22700, 23075, 24093, 24607, 26099, 26762, 28941, 29587, 29963, 30513, 30535, 30898, 31094, 31128, 31532, 32224, 32532, 33123, 33730, 33922, 34069, 34627, 34669, 34734, 35558, 35867, 36406, 36882, 36883, 36958, 36976, 37482],
    "chóu": [20454, 20756, 23334, 24774, 24833, 25060, 26662, 29181, 30068, 30087, 30359, 31264, 31609, 31820, 32082, 32162, 32504, 33751, 35446, 35726, 35728, 36364, 36490, 37223, 37228, 37307, 38612, 38624, 38630],
    "zhì": [20455, 20587, 20776, 21046, 21141, 22401, 23073, 23512, 24089, 24092, 24159, 24226, 24228, 24268, 24408, 24463, 24477, 24535, 24558, 25061, 25067, 25347, 25370, 25527, 25711, 25842, 26072, 26186, 26234, 26633, 26702, 26813, 27341, 27355, 27835, 27959, 28365, 28382, 28399, 28492, 28676, 28825, 29099, 29438, 29464, 29839, 29894, 30164, 30179, 31017, 31057, 31209, 31223, 31258, 31290, 31305, 31378, 32041, 32251, 32622, 32720, 33187, 33267, 33268, 33430, 34541, 34975, 34976, 35069, 35231, 35287, 35311, 35318, 35468, 35921, 35922, 36013, 36074, 36100, 36136, 36157, 36337, 36396, 36499, 36618, 36734, 37061, 37517, 37589, 37973, 38106, 38183, 38495, 38578, 38601, 39396, 39469, 39482, 39495, 39576, 39919, 40217, 40409, 40503],
    "liǎ liǎng": [20457],
    "jiǎn": [20461, 20537, 20745, 20943, 21098, 22591, 24383, 24389, 25129, 25132, 25315, 25400, 25441, 25536, 25791, 26535, 26604, 26776, 26816, 26908, 27298, 28187, 28245, 28733, 29776, 30545, 30652, 30839, 30897, 30982, 31509, 31591, 31616, 31777, 32120, 32365, 32742, 33575, 34246, 34834, 35045, 35143, 35145, 35194, 35395, 35591, 35629, 35710, 35883, 36284, 36423, 37911, 39691, 39950, 40568, 40571, 40572],
    "huò": [20464, 21663, 22191, 22207, 22895, 24416, 24785, 25110, 25837, 26084, 26340, 27316, 27790, 28273, 28694, 29554, 30312, 30483, 30672, 31096, 31117, 31339, 31394, 32815, 33243, 33383, 33719, 33958, 34303, 34838, 35595, 36008, 36135, 37699, 37962, 38252, 38616, 38669, 38723, 38852],
    "jù jū": [20465, 25454, 37624, 38191],
    "xiào": [20466, 20634, 21177, 21682, 21742, 21880, 22027, 22056, 22063, 23389, 25928, 25989, 25990, 27479, 28045, 29117, 31505, 35432, 35487],
    "pái": [20467, 24472, 29260, 29348, 29445, 31792, 31794, 36651],
    "biào": [20469, 39998, 40148],
    "chù tì": [20470],
    "fèi": [20471, 21077, 21406, 21536, 23645, 24223, 24259, 24290, 26162, 26314, 27360, 27832, 28663, 29394, 30280, 32954, 33801, 36027, 36153, 37928, 38212, 38507, 38725, 40739],
    "fèng": [20472, 20964, 22857, 28247, 28968, 29e3, 36085, 36183, 40175, 40179, 40204],
    "ǎn": [20474, 21813, 22511, 25566, 32623, 37544, 38133],
    "bèi": [20475, 20493, 20573, 20601, 20633, 20675, 22791, 24726, 24811, 24834, 24970, 26113, 26774, 28953, 29292, 29333, 29384, 29437, 29692, 29746, 30874, 31129, 31954, 33501, 34003, 34557, 35097, 35997, 36125, 36592, 36649, 36744, 37046, 37093, 37121, 37575, 37950, 38049, 38785, 38836],
    "yù": [20476, 20773, 21893, 21929, 21947, 22495, 22537, 22954, 23255, 23507, 23786, 23950, 24253, 24423, 24481, 24840, 24958, 25131, 26161, 26843, 26844, 26859, 27378, 27406, 27421, 27442, 27603, 28020, 28143, 28394, 28495, 28582, 28778, 28980, 29020, 29135, 29152, 29225, 29425, 29508, 29577, 29721, 30217, 30290, 30753, 30818, 30834, 30983, 30998, 31004, 31142, 31191, 31266, 31286, 31741, 31838, 31858, 31894, 32206, 32621, 32895, 32896, 33352, 33419, 33420, 33567, 33966, 34019, 34041, 34167, 34316, 34591, 34606, 34988, 35029, 35465, 35565, 35709, 35861, 35947, 36553, 36621, 36915, 36935, 36985, 37057, 37287, 37434, 37578, 37669, 37933, 38064, 38334, 38408, 38628, 38705, 38928, 39044, 39147, 39239, 39275, 39341, 39496, 39533, 39728, 39729, 39739, 39754, 40010, 40191, 40229, 40231, 40234, 40274, 40440, 40466, 40518, 40556],
    "xīn": [20477, 22138, 22945, 23324, 24286, 24515, 24516, 24571, 24798, 26032, 26133, 26490, 27427, 27462, 28824, 30458, 34218, 35362, 36763, 37028, 37386, 37573, 37995, 38156, 39336, 39339],
    "hǔ chí": [20479],
    "jiù": [20483, 20710, 21267, 21275, 21302, 21417, 21646, 23601, 24260, 24271, 24272, 24934, 25412, 25937, 26087, 26601, 26622, 26709, 27405, 27559, 30106, 33276, 33285, 33290, 39910, 40434, 40555, 40596, 40808],
    "yáo": [20484, 20636, 21954, 22426, 22575, 23002, 23217, 23591, 23597, 23779, 23970, 23972, 24493, 25594, 25622, 25671, 25727, 26266, 27043, 28391, 28881, 29243, 29498, 29671, 29796, 29814, 30936, 31377, 31407, 31408, 32948, 34344, 35616, 35617, 35875, 36602, 36730, 36953, 36965, 37006, 39012, 39099, 39126, 39174, 39194, 39977, 40025, 40144],
    "cuì zú": [20485],
    "liǎng liǎ": [20486],
    "wǎn": [20487, 21773, 23113, 24779, 25405, 26202, 26213, 26217, 26236, 26778, 26880, 29740, 30073, 30358, 30412, 30871, 32169, 32176, 32510, 33048, 33814, 36384, 36627, 37588],
    "zǒng": [20490, 20588, 20655, 23928, 24635, 24803, 25460, 25603, 25696, 29162, 32207, 32235, 32258, 32317, 34007],
    "guān": [20492, 20851, 23448, 26874, 30237, 30287, 31396, 33924, 38306, 38359, 38364, 39973, 40030, 40143],
    "tiǎn": [20494, 21818, 24541, 24767, 26218, 27524, 28127, 30547, 33094, 33300, 35237, 35277, 36063, 37674, 39170],
    "mén": [20497, 25194, 25451, 29834, 33755, 34379, 37702, 38036, 38272, 38277, 38376],
    "dǎo dào": [20498],
    "tán tàn": [20499, 22510],
    "juè jué": [20500],
    "chuí": [20501, 22402, 22464, 25462, 25637, 26712, 26864, 27084, 31648, 33092, 33753, 37656, 37786, 38180, 38514, 38976],
    "xìng": [20502, 22995, 23134, 23353, 24184, 24615, 24763, 26447, 28076, 32200, 33238, 33607, 33685, 33877],
    "péng": [20503, 20656, 22620, 22643, 24376, 24969, 25408, 26379, 26842, 26902, 27173, 30844, 31261, 31484, 31735, 32388, 33192, 33411, 34028, 34325, 34778, 34779, 34998, 36643, 37643, 37981, 38904, 38908, 39471, 39676, 39685, 39700, 40300, 40527],
    "tǎng cháng": [20504],
    "hòu": [20505, 21402, 21518, 22421, 22560, 24460, 27913, 33577, 35934, 36869, 37064, 39836, 40031, 40078, 40088],
    "tì": [20508, 21059, 22159, 22164, 23625, 23644, 24716, 24720, 24789, 24790, 25147, 25510, 26367, 26385, 27474, 27554, 28053, 29899, 31545, 31818, 34201, 35077, 36886, 36919, 39664, 39680, 39684],
    "gàn": [20509, 20942, 24185, 27046, 27274, 28134, 28776, 30448, 32058, 32448, 35404, 36113, 36195, 39597],
    "liàng jìng": [20510, 38739],
    "suī": [20512, 21752, 22794, 28374, 28617, 30509, 30562, 33429, 33661, 33662, 34429, 38614, 38806],
    "chàng chāng": [20513],
    "jié": [20514, 20604, 20625, 21030, 21031, 21052, 21163, 21180, 21353, 21354, 23125, 23211, 23377, 23690, 23848, 23909, 23995, 24e3, 24175, 25130, 25463, 25526, 25838, 26117, 26466, 26480, 26688, 26717, 26988, 26998, 27044, 27905, 28368, 28500, 29412, 30571, 30989, 31469, 31680, 32687, 33709, 34037, 34531, 34576, 34840, 34846, 34877, 34929, 35002, 35344, 35440, 35505, 35750, 36373, 36860, 37475, 37755, 38268, 38945, 39834, 40082],
    "kǒng kōng": [20517],
    "juàn": [20518, 21173, 22854, 24955, 26698, 28099, 29431, 29543, 30519, 30538, 30560, 32109, 32121, 32482, 32613, 32642, 33091, 34088, 37124, 39179],
    "zōng": [20519, 22571, 23447, 23887, 23893, 24830, 26401, 26837, 26934, 29095, 29475, 30955, 32195, 32746, 33113, 33916, 34668, 35957, 36392, 36394, 36452, 37712, 37953, 39436, 39459, 39572, 39683, 39689, 39735, 39918, 39932],
    "ní": [20522, 22381, 22527, 23612, 23636, 24617, 28131, 29450, 31870, 32867, 34477, 34618, 35308, 35982, 36316, 36631, 37107, 37422, 38092, 38675, 39324, 39906, 40117, 40593, 40815],
    "zhuō": [20524, 25305, 25417, 26700, 26802, 26817, 26867, 27093, 28095, 31399, 37935],
    "wō wēi": [20525],
    "luǒ": [20526, 21062, 26346, 30256, 30323, 33245, 33999, 34819, 35064, 36534],
    "sōng": [20527, 20935, 23040, 23847, 23913, 24250, 25021, 26494, 26496, 26537, 26583, 26789, 27303, 28126, 28621, 30841, 33752, 39686],
    "lèng": [20528, 22542, 24867, 30550, 36380],
    "zì": [20531, 21082, 23383, 24675, 28173, 28460, 29304, 30501, 30502, 32980, 33022, 33258, 33569, 33634],
    "bèn": [20532, 22348, 25465, 25770, 28160, 31528, 36905],
    "cǎi": [20536, 21835, 23111, 24425, 25505, 26828, 27613, 30572, 32181, 36340, 36393],
    "zhài": [20538, 20661, 23528, 30261, 30758],
    "yē": [20539, 21524, 22094, 25832, 26253, 26928, 27467, 28529, 34862],
    "shà": [20541, 21820, 21922, 27459, 31633, 32732, 32739, 33808, 38319, 38670],
    "qīng": [20542, 20670, 21375, 22282, 23496, 27682, 27691, 28152, 28165, 34619, 36605, 36629, 36731, 37100, 37638, 37963, 38737, 38738, 39894],
    "yīng": [20544, 22052, 22111, 22198, 23156, 23190, 23240, 23344, 23366, 23422, 24869, 25732, 25878, 26400, 26716, 27185, 27387, 28214, 29008, 29681, 29787, 29838, 29908, 29959, 29974, 30884, 31023, 32211, 32403, 32492, 32552, 32578, 32579, 32588, 33210, 33521, 33722, 34337, 34663, 34867, 35118, 35707, 36047, 36552, 37965, 38195, 38681, 38906, 40236, 40337, 40359, 40367, 40426, 40441, 40462, 40474, 40550, 40560],
    "chēng chèn": [20545, 29231],
    "ruǎn": [20548, 26378, 29772, 29888, 30877, 31005, 33117, 36575, 36653, 36719, 38446],
    "zhòng tóng": [20549],
    "chǔn": [20550, 24823, 30582, 33846, 34850, 36080],
    "jiǎ jià": [20551],
    "jì jié": [20552],
    "bǐng bìng": [20555],
    "ruò": [20556, 21458, 23926, 24369, 26953, 28971, 29191, 31660, 31707, 33979, 37120, 39961, 39983, 40376],
    "tí": [20557, 21399, 21884, 21953, 23865, 28477, 29765, 30588, 31157, 31242, 32249, 32519, 32612, 34139, 35078, 35605, 36263, 36420, 36431, 37261, 37719, 38988, 39064, 39456, 39863, 39927, 40128, 40284, 40420, 40520],
    "wēi": [20558, 21361, 21940, 23041, 23193, 23990, 24013, 24494, 24836, 25547, 25595, 26931, 26994, 28326, 28883, 29032, 29168, 30291, 32261, 33896, 33907, 34183, 34610, 34651, 35235, 35444, 36918, 38535, 38536, 38714, 39939, 39940, 40130],
    "piān": [20559, 22248, 23205, 26948, 29327, 31687, 32745, 37698],
    "yàn": [20560, 21388, 21421, 21761, 21933, 22152, 22181, 22576, 22943, 23026, 23306, 23359, 23476, 24421, 24422, 25957, 26191, 26277, 26325, 26339, 28383, 28750, 28756, 28775, 28777, 28948, 28976, 28977, 29078, 29124, 29290, 29458, 30746, 30831, 33395, 33398, 33399, 35214, 35267, 35326, 35578, 35724, 35742, 35866, 35891, 35923, 35924, 36107, 36119, 36189, 36549, 37184, 37245, 37308, 37317, 38593, 39181, 39260, 39440, 39443, 39476, 39511, 39520, 39564, 39731, 40171, 40200, 40243, 40387, 40432, 40798],
    "tǎng dàng": [20562],
    "è": [20564, 21262, 21374, 21380, 21597, 21666, 22121, 22441, 22538, 22574, 23691, 23871, 24261, 24746, 24853, 25145, 25212, 25636, 25657, 25820, 27374, 27486, 27514, 28226, 29735, 30728, 30736, 30790, 33133, 33482, 33852, 34138, 34437, 34625, 35240, 35556, 35725, 35860, 35935, 36571, 36598, 36717, 36940, 36943, 36987, 37122, 37418, 37716, 37993, 38199, 38440, 38456, 38942, 38990, 39066, 39187, 39209, 39295, 39952, 39978, 40055, 40132, 40346, 40535, 40771, 40822],
    "xié": [20565, 21232, 21327, 21332, 21963, 22437, 22858, 24650, 24886, 25337, 25658, 25783, 25813, 25847, 25884, 26012, 26090, 29057, 29170, 32138, 32243, 32256, 32556, 32723, 32961, 33029, 33031, 33035, 33166, 34658, 34938, 35181, 35559, 35735, 35856, 38795, 38837, 40868],
    "chě": [20566, 25199, 25766],
    "shěng": [20567, 28219, 30490],
    "chā": [20571, 21967, 25184, 25407, 25554, 25591, 30080, 33279, 33366, 37535, 37732, 38200, 39223],
    "huáng": [20575, 20976, 21924, 22573, 22708, 23187, 23858, 24488, 24822, 27003, 28255, 29004, 29530, 29789, 29852, 30272, 30343, 30970, 31316, 31681, 31783, 33358, 33887, 34647, 34789, 35579, 36266, 36945, 37728, 37892, 38205, 38541, 38905, 39213, 39452, 39945, 40017, 40135, 40428, 40643, 40644],
    "yǎo": [20576, 21676, 23161, 23438, 23686, 26483, 26620, 27034, 28308, 29397, 31365, 31368, 33280, 33517, 38340, 39445, 40405, 40809],
    "chǒu qiào": [20578],
    "yóu": [20580, 23588, 24238, 24611, 27787, 27833, 27999, 28216, 29369, 29494, 29495, 30001, 30115, 31198, 32940, 33692, 33720, 34133, 34480, 34659, 35367, 36623, 36662, 36912, 36938, 37038, 37109, 37438, 38080, 39360, 39799, 39819, 40063, 40073],
    "xū": [20582, 22687, 23213, 23299, 26952, 27432, 27476, 29176, 30110, 30449, 32135, 32259, 32379, 32997, 34150, 34391, 34394, 34395, 34641, 35015, 35343, 35377, 35549, 35651, 35870, 37968, 38656, 38920, 39035, 39036, 39497, 39706, 39750, 39766],
    "zhā": [20583, 21747, 25263, 25363, 25592, 25699, 27165, 28195, 30390, 35312, 35655, 40772, 40775],
    "cī": [20584, 30133, 34816, 36224, 39604, 39626, 40825],
    "bī": [20586, 23620, 26949, 27636, 35917, 36924, 39951, 40126, 40278],
    "xún": [20593, 22106, 23547, 23563, 23755, 24033, 24309, 24490, 24642, 25559, 25907, 26092, 26442, 26642, 26730, 27187, 27957, 27988, 28527, 29125, 29142, 29667, 29845, 30019, 32003, 33600, 34803, 35426, 35810, 37161, 40015, 40024, 40095],
    "cāi sī": [20594],
    "duān": [20595, 23183, 31471, 35085, 37748],
    "ǒu": [20598, 21528, 22036, 32806, 33122, 34117, 34261],
    "tōu": [20599, 20600, 37742],
    "zán zá zǎ": [20602],
    "lǚ lóu": [20603, 20674],
    "fèn": [20606, 20712, 22859, 22894, 24325, 24575, 24868, 24996, 28725, 30611, 31182, 31914, 31966, 33209, 40029, 40124],
    "kuǐ guī": [20608],
    "sǒu": [20609, 21468, 21471, 22014, 27362, 30605, 34222, 34282],
    "zhì sī tí": [20610],
    "sù": [20611, 20723, 21961, 22608, 22609, 22809, 23242, 24875, 24991, 27041, 27150, 27157, 27536, 27869, 28049, 28335, 28344, 28506, 28517, 29578, 29663, 29851, 31756, 31899, 31903, 32032, 32292, 32899, 32901, 33158, 34060, 34263, 35307, 35380, 35606, 35785, 35873, 36250, 36444, 36895, 36961, 36972, 37577, 39191, 39500, 39573, 40016, 40427, 40532],
    "xiā": [20612, 28998, 30606, 35898, 39084, 39957],
    "yuàn yuán": [20614, 23195],
    "rǒng": [20615, 20887, 23426, 27652, 36597],
    "nù": [20617, 24594],
    "yùn": [20618, 23381, 24701, 24818, 24864, 24909, 26527, 33130, 34164, 34176, 34292, 34314, 35102, 35999, 36816, 36939, 37075, 37126, 37213, 37270, 37278, 38871, 38878, 38901, 38907, 39211],
    "gòu jiǎng": [20619],
    "mà": [20620, 22044, 27050, 30576, 31043, 31137, 32629, 38273, 39393, 39554, 39701],
    "bàng": [20621, 22621, 26834, 29604, 31254, 33365, 33953, 34607, 35607, 35876, 37770, 38225],
    "diān": [20622, 21415, 23918, 24005, 24019, 24020, 25474, 25895, 25921, 27079, 28359, 30315, 30322, 36430, 39002, 39003, 39072, 40827],
    "táng": [20623, 21776, 21882, 22371, 22530, 22616, 25642, 26848, 27062, 28303, 28447, 29051, 29805, 30916, 31135, 31702, 31939, 31958, 31963, 33157, 33179, 33998, 34711, 34739, 36207, 36412, 37132, 37283, 37781, 38554, 39225, 39236, 40374],
    "hào": [20624, 21728, 24655, 26122, 26150, 26215, 26272, 26276, 26285, 26317, 28009, 28111, 28564, 28751, 28765, 30355, 30364, 30366, 30369, 30373, 32791, 32853, 34179, 34399, 37143, 39013, 39074, 39965],
    "xī xì": [20626],
    "shān": [20627, 21024, 21034, 21116, 22328, 23665, 25403, 25639, 26613, 27270, 28536, 28568, 29053, 29414, 29642, 31512, 32319, 32692, 32694, 33056, 33314, 33439, 34923, 36314, 36565, 37014, 38282, 39877],
    "qiàn jiān": [20628],
    "què jué": [20629, 22470],
    "cāng chen": [20630],
    "róng": [20635, 23222, 23238, 23339, 23481, 23797, 23896, 23992, 25102, 25608, 26343, 26628, 27029, 27054, 27061, 27623, 28342, 28700, 28927, 29076, 29416, 29794, 31297, 32104, 32466, 32674, 32924, 33561, 33592, 33635, 33993, 34686, 34701, 34702, 34833, 35107, 37780, 38229, 39397],
    "tà tàn": [20637],
    "suō": [20638, 21766, 21965, 21990, 23057, 25677, 26731, 26797, 30531, 31761, 31764, 32679, 33679, 34001, 36246, 39867],
    "dǎi": [20643, 27513],
    "zài": [20644, 20750, 20877, 22312, 25175, 27909, 36617, 37224],
    "gǔ": [20646, 21476, 21842, 23603, 24882, 27030, 27070, 27753, 28104, 28658, 28692, 29295, 30391, 30396, 30444, 30653, 31296, 32607, 32662, 32929, 33077, 33228, 34211, 34506, 34865, 35393, 35778, 36674, 36903, 37431, 38068, 39222, 39305, 40723, 40724],
    "bīn": [20647, 23486, 24428, 25996, 26901, 28392, 28626, 28657, 28661, 28693, 32381, 32548, 34408, 35945, 35955, 36051, 36052, 37024, 37964, 38228, 38694, 39022],
    "chǔ": [20648, 20786, 26485, 26904, 26970, 26990, 27290, 28619, 29876, 30784, 30990, 31111, 34389, 40813, 40828],
    "nuó": [20649, 20794, 25386, 26779, 27232],
    "cān càn": [20650],
    "lěi": [20651, 20769, 21437, 22418, 22593, 22744, 22760, 27344, 28741, 30295, 30667, 30922, 31016, 32786, 34124, 34174, 34271, 34365, 34845, 35460, 35716, 35796, 38008, 40467],
    "cuī": [20652, 20951, 22676, 23828, 23903, 24923, 25703, 27057, 29525, 30954, 37849],
    "yōng": [20653, 21960, 22665, 22725, 23262, 24248, 24305, 24949, 25317, 25793, 28413, 28745, 29253, 30152, 30293, 30320, 33219, 37013, 37114, 37144, 37854, 38235, 38605, 38621, 39252, 40005, 40153, 40411],
    "zāo cáo": [20654],
    "sǒng": [20657, 23927, 24578, 24730, 24879, 24939, 31462, 32824, 32883, 39415],
    "ào": [20658, 22387, 22407, 22714, 22881, 23279, 23705, 23728, 23988, 25034, 25817, 28595, 37834, 39489, 39580],
    "qī còu": [20662],
    "chuǎng": [20664, 30946, 38358, 38383],
    "shǎ": [20667, 20749],
    "hàn": [20668, 22462, 24717, 25022, 25182, 25421, 25750, 25788, 26097, 26200, 26293, 27721, 28038, 28450, 28698, 28938, 29442, 30356, 30533, 32752, 33695, 33761, 34559, 34605, 34706, 35648, 36634, 37356, 37554, 37582, 38615, 38967, 38980, 39060, 39419, 40382],
    "zhāng": [20669, 23260, 24352, 24373, 24432, 24926, 26290, 27167, 28467, 29520, 29835, 31456, 31931, 34049, 34769, 36967, 37155, 37873, 39206, 39487, 40006, 40606],
    "yān yàn": [20671, 22677, 23342],
    "piào biāo": [20676, 39584],
    "liàn": [20678, 22556, 23201, 24651, 25088, 26973, 27539, 27566, 28229, 28491, 28592, 28722, 28860, 29001, 29779, 32244, 32414, 32451, 33840, 37676, 37706, 37832, 38142, 39946],
    "màn": [20680, 22657, 24148, 24930, 26364, 28459, 28599, 29107, 29516, 32309, 32550, 34052, 34352, 37156, 37853, 38232],
    "tàn tǎn": [20683],
    "yíng": [20684, 21942, 22603, 23348, 25869, 27001, 27391, 28289, 28299, 28386, 28486, 28633, 28634, 28660, 28677, 28699, 28704, 28719, 28752, 28764, 29074, 29151, 29801, 30401, 30408, 31132, 31837, 31855, 32264, 33556, 33639, 33721, 33828, 33829, 33830, 33854, 34021, 34240, 34509, 34631, 34687, 34722, 34821, 35597, 36111, 36194, 36814, 37795],
    "dòng": [20685, 20923, 20941, 21160, 21205, 23003, 25113, 25359, 26635, 26847, 28265, 30800, 33e3, 33012, 33110, 36853, 38680, 39399],
    "zhuàn": [20686, 21869, 22208, 22559, 25776, 28791, 29777, 31686, 33118, 33923, 35144, 35668, 39244, 39316],
    "xiàng": [20687, 21224, 21521, 22190, 23008, 23953, 26319, 27233, 29670, 32575, 34771, 34902, 35152, 35937, 37900, 38917, 39033, 40012],
    "shàn": [20688, 21892, 22688, 22689, 23319, 25797, 25982, 26923, 27199, 27482, 27733, 28759, 30109, 30960, 32341, 32558, 33203, 34798, 34810, 35349, 35590, 35697, 35754, 36109, 36193, 36216, 37167, 37925, 39245, 39480, 39583, 40019, 40020, 40157],
    "tuí tuǐ": [20691],
    "zǔn": [20692, 22082, 25753, 35664],
    "pú": [20693, 21261, 22308, 22691, 28654, 29531, 29854, 30632, 31321, 33670, 33744, 33769, 33889, 33969, 33970, 36108, 37242, 37879, 38244],
    "láo": [20695, 21171, 21172, 21214, 21744, 23810, 23959, 24997, 26405, 28022, 29282, 30184, 30278, 31362, 31785, 37290, 37906, 38137, 39007, 39645],
    "chǎng": [20696, 21424, 24288, 25950, 26166, 27653, 37625],
    "guāng": [20697, 20809, 21667, 22425, 23023, 27960, 28782, 28823, 28826, 28827, 28897, 29654, 33009, 33578, 36612, 37543, 40646],
    "liáo": [20698, 22073, 23293, 23525, 23534, 23582, 23658, 23930, 23962, 23963, 24299, 24960, 25977, 26296, 27217, 29536, 29849, 30103, 30274, 31426, 31773, 32346, 32557, 32842, 33163, 33195, 34260, 34783, 35906, 36095, 36440, 36797, 36988, 39113, 39630, 40431, 40553],
    "dèng": [20700, 20979, 22705, 23965, 27336, 30634, 30964, 35252, 37011, 37159, 38565],
    "chán zhàn zhuàn": [20701],
    "bō": [20704, 23955, 25320, 25765, 25773, 27874, 28298, 29627, 30326, 30411, 30773, 30854, 31009, 32573, 33760, 34992, 36467, 37474, 38069, 39185, 39293, 39499, 40013],
    "huì": [20705, 21295, 21321, 21913, 22034, 22166, 22298, 23314, 23533, 23670, 23671, 24407, 24409, 24410, 24507, 24666, 24693, 24800, 24935, 24979, 25075, 26214, 26291, 27109, 27230, 27269, 27352, 27719, 27851, 28377, 28499, 28905, 29172, 29545, 29860, 30650, 30794, 31229, 31330, 31730, 32117, 32362, 32472, 32729, 32765, 33631, 34087, 34137, 34184, 34185, 34794, 35439, 35496, 35569, 35667, 35711, 35763, 35826, 36036, 36159, 37932, 38368, 38419, 38759, 38958, 39018, 39058, 39215],
    "chuǎn": [20706, 21912, 33307, 33608, 36403],
    "tiě jiàn": [20707],
    "sēng": [20711, 39705],
    "xiàn": [20713, 20724, 21743, 22455, 22634, 23021, 23050, 23466, 23704, 23796, 25010, 25738, 26203, 27212, 27258, 28032, 28695, 29486, 29563, 29616, 29694, 30476, 30541, 31919, 31982, 32100, 32171, 32218, 32447, 32528, 32673, 32680, 33146, 33236, 33277, 33483, 33703, 35490, 35919, 37607, 37646, 38480, 38501, 38519, 38704, 39201, 39301, 40626, 40760],
    "yù jú": [20714],
    "è wū": [20715],
    "tóng zhuàng": [20718],
    "lǐn": [20719, 20955, 20956, 24297, 24298, 25037, 25044, 25755, 27265, 27305, 28575, 30299, 30301],
    "gù": [20721, 20933, 22266, 22540, 23827, 23854, 25925, 26767, 26845, 29311, 30204, 31099, 37678, 38178, 38599, 39015, 39038, 39901, 40116],
    "jiāng": [20725, 22723, 23004, 27263, 27565, 27743, 30037, 30085, 30995, 32366, 32560, 32734, 33587, 33857, 34193, 34688, 34751, 35911, 38849, 40002, 40137],
    "mǐn": [20726, 20922, 21025, 21188, 24751, 24829, 24845, 24924, 25003, 25279, 25923, 25935, 25967, 27887, 28515, 30399, 31522, 31549, 31778, 34848, 38292, 38313, 38389, 38397, 39989, 40152, 40701],
    "jìn": [20728, 20954, 22116, 22157, 22672, 22743, 22935, 23335, 25634, 26185, 26187, 26499, 27555, 27989, 28024, 28301, 28613, 28636, 28908, 29025, 29180, 29710, 29800, 29878, 30433, 31090, 32265, 32537, 33641, 34254, 35250, 35280, 36078, 36112, 36166, 36817, 36827, 36914, 38771, 40829],
    "jià jie": [20729],
    "qiào": [20730, 23789, 24105, 25772, 27579, 31373, 31429, 35482, 35822, 36488, 38487, 38825, 38866, 39642],
    "pì": [20731, 23218, 23251, 23617, 28604, 29971, 30088, 35692, 38370, 40447, 40458],
    "sài": [20735, 31802, 36093, 36187],
    "chán tǎn shàn": [20739],
    "dāng dàng": [20741, 24403, 38371],
    "xuān": [20743, 21927, 22599, 23191, 23459, 24835, 24843, 25550, 26125, 26244, 29002, 29014, 29764, 30587, 30670, 31140, 31662, 32743, 32766, 33841, 33842, 34002, 34175, 34300, 34320, 34646, 34825, 35552, 35580, 35678, 35862, 36562, 36713, 37753, 39421, 39962],
    "dān dàn": [20747, 25812, 30213],
    "càn": [20751, 28591, 28799, 29158, 29864, 31922, 34194, 35634],
    "bīn bìn": [20752],
    "án àn": [20753],
    "tái": [20755, 22382, 23343, 25260, 25825, 27311, 28849, 28850, 31817, 33274, 34233, 36294, 37040, 39089, 39824, 40080],
    "lán": [20758, 20848, 22226, 23146, 23706, 23888, 24177, 25318, 25876, 26003, 26005, 26639, 27396, 27415, 28572, 28734, 28742, 28769, 29155, 29175, 29884, 31726, 31811, 31843, 32383, 33915, 34013, 34253, 34347, 34349, 35124, 35157, 35172, 35188, 35197, 35659, 35733, 35888, 36509, 37997, 38247, 38348, 38417, 38858],
    "nǐ yì ài yí": [20759],
    "méng": [20762, 24170, 26330, 26406, 27223, 27308, 27659, 28309, 28635, 29965, 30015, 30431, 31006, 33384, 33684, 33804, 34116, 34427, 34673, 37171, 37176, 38719, 38720, 39021, 39259, 39885, 40463, 40562],
    "níng": [20764, 20957, 21659, 22144, 23331, 26592, 27235, 27320, 29406, 29552, 32845, 32889, 34228, 37967, 39713, 40459],
    "qióng": [20765, 21357, 23430, 24824, 24972, 26703, 27241, 28970, 28973, 29026, 29069, 29756, 29898, 30552, 31351, 31353, 31406, 31430, 31547, 31559, 33340, 33557, 34257, 34285, 34537, 34540, 36217, 36331, 37019, 37518],
    "liè": [20768, 20925, 21015, 21155, 21181, 22482, 22483, 23028, 23771, 24036, 25362, 25449, 26677, 27916, 27990, 28872, 28910, 29037, 29347, 29454, 29471, 29557, 32855, 33055, 33570, 34522, 36244, 36496, 36862, 39090, 39707, 39715, 39844, 40050, 40247],
    "kuǎng": [20771, 22844, 25069],
    "bào": [20772, 21245, 22577, 24513, 25253, 25265, 26323, 29190, 29350, 33762, 34403, 34475, 35961, 37451, 37988, 38087, 39602, 39665, 39825, 40077],
    "biāo": [20774, 22658, 24150, 24426, 26631, 27161, 28398, 28684, 29083, 29186, 29451, 30253, 30950, 33176, 33237, 35620, 36102, 37858, 37987, 38230, 38259, 39086, 39095, 39110, 39111, 39112, 39114, 39121, 39129, 39130, 39531, 39561, 39647],
    "zǎn": [20775, 20793, 22086, 25861, 26141, 36273, 36274],
    "háo": [20779, 21989, 22071, 22097, 22158, 22741, 26883, 27612, 27627, 28640, 29510, 29524, 31443, 31815, 34461, 34836, 35705, 35946],
    "qìng": [20780, 20938, 24198, 24950, 27366, 28650, 30851, 30956, 32580, 38744],
    "chèn": [20781, 22187, 27015, 27372, 30114, 34924, 35183, 35734, 35894, 36225, 36226, 40787, 40788, 40832],
    "téng": [20783, 24144, 28373, 28443, 30140, 31824, 31832, 32290, 33150, 34276, 34373, 34723, 35466, 35588, 36998, 39398, 39472, 39523, 39975],
    "lǒng lóng lòng": [20785],
    "chán chàn": [20787],
    "ráng xiāng": [20788, 21239],
    "huì xié": [20790],
    "luó": [20792, 25886, 26916, 27407, 29473, 29568, 31657, 31854, 32599, 32645, 33078, 33121, 33821, 34367, 34746, 35260, 36923, 37007, 37837, 38012, 38179, 38233, 39264, 39486, 39512, 39585, 40449],
    "léi": [20797, 23256, 27281, 27417, 29891, 30078, 32306, 32397, 32413, 32551, 32589, 32696, 34050, 34354, 34374, 36704, 37939, 37976, 38253, 38647, 38721, 40041, 40762],
    "nàng nāng": [20798],
    "wù wū": [20800],
    "yǔn": [20801, 21911, 22845, 25230, 27538, 27550, 29377, 30930, 33658, 36081, 37399, 38445, 38504, 38549, 38691, 39355, 40811, 40819],
    "zān": [20802, 27253, 31786, 31790, 31948, 37909, 37919, 40292],
    "yuán": [20803, 20870, 21407, 21409, 21429, 22253, 22278, 22286, 22290, 22291, 22435, 22636, 23220, 23236, 25588, 27038, 27052, 27260, 27358, 27781, 28274, 28304, 28306, 29232, 29480, 29503, 31502, 32227, 32257, 32536, 32689, 33554, 34199, 34653, 34671, 34696, 34945, 35108, 35612, 36677, 36757, 37005, 37031, 37211, 37416, 37809, 39477, 39789, 40354, 40368, 40703, 40715],
    "xiōng": [20804, 20807, 20982, 21250, 21256, 21701, 24567, 24671, 27769, 27958, 33015, 33016, 33422, 35369, 35454, 35771],
    "chōng": [20805, 22019, 24545, 24963, 24999, 25679, 27798, 28026, 29675, 32639, 32704, 33282, 33375, 33594, 34909, 36438],
    "zhào": [20806, 22423, 26064, 26316, 26523, 27330, 29031, 29171, 29411, 30654, 31498, 32576, 32617, 32644, 32897, 32903, 32904, 35412, 35791, 36213, 36249, 39841],
    "duì ruì yuè": [20810, 20812, 20817],
    "kè": [20811, 21051, 21184, 21194, 22529, 23060, 23458, 24682, 24857, 27690, 28312, 30886, 32217, 32514, 33360, 34889, 35506, 35838, 37633, 38174, 39437, 39570],
    "tù": [20814, 20820, 22541, 36812, 40309],
    "dǎng": [20826, 25897, 27411, 35681, 35740, 35872, 40680],
    "dōu": [20828, 20832, 21783, 27255, 31740, 34104],
    "huǎng": [20836, 22875, 24140, 24627, 24653, 26180, 28862, 29056, 32296, 35428, 35594, 35854],
    "rù": [20837, 21973, 23223, 25174, 26433, 27955, 28349, 32287, 32539, 34e3, 35109, 40176],
    "nèi": [20839, 27677, 27678, 37655],
    "yú shù": [20842],
    "liù lù": [20845],
    han: [20847, 29235],
    "tiān": [20850, 22825, 23126, 28155, 37215, 38740, 38749, 40647],
    "xīng xìng": [20852],
    "diǎn": [20856, 22200, 22860, 23152, 25951, 26915, 28857, 30872, 33959, 34119, 36398, 40670],
    "zī cí": [20857],
    "jiān": [20860, 20927, 22223, 22362, 22533, 22904, 23014, 23015, 23574, 24181, 24804, 25099, 25108, 25627, 26942, 27179, 27388, 27516, 27569, 27570, 28244, 28688, 28728, 29006, 29086, 29112, 29259, 29770, 30583, 31003, 31031, 31546, 31627, 32216, 32273, 32516, 32547, 32937, 33392, 33393, 33733, 33786, 33868, 33977, 34090, 34129, 34163, 34371, 35708, 35932, 37999, 38595, 38831, 38848, 38857, 39216, 39330, 39956, 39964, 39993, 40099, 40146, 40273, 40307, 40380, 40547, 40585],
    "shòu": [20861, 21463, 21806, 22781, 22784, 23551, 25480, 29417, 29539, 29560, 30185, 30246, 32172, 32502, 33156],
    "jì": [20862, 20864, 21058, 21092, 21137, 21219, 22358, 22413, 22600, 22931, 23395, 23490, 23492, 24301, 24401, 24475, 24524, 24760, 24782, 25083, 25216, 26081, 26082, 26083, 26280, 26281, 26305, 26782, 27285, 27317, 27918, 28419, 28424, 28721, 30197, 30304, 31133, 31273, 31287, 31300, 31306, 31335, 32e3, 32153, 32318, 32331, 32380, 32487, 32489, 32637, 33262, 33456, 33549, 33572, 33898, 34015, 34055, 34186, 34318, 34350, 34363, 35034, 35136, 35244, 35274, 35336, 35352, 35467, 35745, 35760, 36321, 36349, 36447, 36857, 38469, 38555, 38657, 38717, 39525, 39589, 39675, 39742, 39773, 39781, 39898, 39933, 39990, 39999, 4e4, 40045, 40090, 40107, 40267, 40401, 40780],
    "jiōng": [20866, 20875, 22384, 22491, 25155, 34319, 34324, 39369, 39403],
    "mào": [20867, 20880, 23202, 24125, 24855, 25035, 26259, 26581, 26969, 27639, 29761, 30339, 30474, 30592, 32772, 33538, 33850, 34640, 34980, 35218, 35980, 36031, 36152, 37146, 37166],
    "rǎn": [20868, 20873, 22988, 23203, 26579, 29635, 33490, 33925],
    "nèi nà": [20869],
    "gāng": [20872, 20910, 21018, 21083, 22536, 22589, 23713, 25478, 25667, 26849, 29288, 29317, 30104, 32177, 32434, 32568, 32577, 32609, 32923, 37357, 37792],
    "cè": [20874, 20876, 21397, 21408, 22824, 24257, 24699, 24827, 24993, 25927, 27979, 28204, 31527, 31574, 31582, 31604, 31651, 33629, 33815, 33844, 34011],
    "guǎ": [20878, 21072, 21102, 21479, 23521],
    "mào mò": [20882],
    "gòu": [20883, 21826, 22392, 22434, 22815, 22816, 23230, 24384, 25606, 25728, 26500, 27083, 29049, 35247, 35279, 35389, 35436, 35807, 36092, 36141, 36952, 38602],
    "xǔ": [20884, 21923, 26250, 26665, 29661, 30440, 31944, 35425, 35583, 35817, 37158, 37265],
    "mì": [20886, 20906, 22055, 22611, 23483, 23494, 23770, 24130, 24142, 24166, 24637, 27027, 27154, 27329, 27752, 28135, 28405, 28446, 28631, 29072, 32643, 34084, 34588, 35219, 35220, 35227, 35269, 35600, 35879, 40719],
    "yóu yín": [20888],
    "xiě": [20889, 20905, 34267],
    "jūn": [20891, 21531, 22343, 26750, 27758, 30386, 30392, 30393, 30853, 33689, 34448, 34944, 35232, 36557, 37406, 37505, 37534, 37717, 38055, 38965, 39862, 40106, 40591],
    "mí": [20894, 25823, 28720, 29218, 29461, 29564, 31074, 31152, 32315, 33982, 34252, 34346, 34364, 34990, 35448, 35598, 36855, 37274, 37310, 37311, 37316, 38270, 40461, 40586, 40587, 40603],
    "guān guàn": [20896, 35212, 35251, 35264, 35266],
    "měng": [20897, 21200, 25077, 25529, 29467, 29556, 33355, 34594, 34835, 37683, 38192, 39917, 40710],
    "zhǒng": [20898, 22618, 23600, 27505, 28996, 30215, 32959, 33131, 36405],
    "zuì": [20899, 23989, 26220, 26368, 26668, 27100, 27271, 27276, 31101, 32074, 32618, 34142, 36768, 37204, 37243, 37257, 37642],
    "yuān": [20900, 21064, 22246, 23357, 23491, 26857, 28149, 28161, 28166, 28170, 28181, 28737, 30498, 32921, 33918, 33964, 34574, 34613, 39372, 40182, 40219, 40311, 40482, 40499, 40531, 40728, 40733],
    "míng": [20901, 21517, 26126, 26269, 26393, 27040, 27962, 28319, 29501, 30464, 30515, 30609, 33559, 34719, 35245, 35450, 37133, 37528, 38125, 40180, 40483],
    "kòu": [20902, 21481, 23484, 23495, 25187, 25922, 28401, 31387, 31576, 31750, 34098, 34107, 37350, 40391],
    "tài": [20909, 22826, 22835, 24562, 24577, 24907, 27760, 27761, 27888, 28313, 32957, 33318, 37214, 37414, 38043],
    "féng píng": [20911, 39342],
    "chōng chòng": [20914],
    "kuàng": [20917, 22329, 22745, 23730, 25068, 26103, 26175, 26336, 26694, 27841, 29196, 30486, 30518, 30719, 30783, 31014, 31340, 32075, 32086, 32394, 32425, 36026, 36150, 36582, 37021, 37178, 37489, 37595, 37979, 40651],
    "lěng": [20919],
    "pàn": [20920, 21028, 21467, 27804, 27886, 28351, 28813, 29257, 30036, 30460, 34978, 35195, 35402, 37612, 38011, 38934, 40293],
    "fā": [20921, 24386, 27831, 30330, 30332],
    "xiǎn": [20924, 23583, 23584, 23812, 23982, 24176, 25863, 26174, 27382, 27624, 28774, 28877, 29177, 29405, 29443, 29547, 29550, 29569, 31122, 31557, 31666, 34259, 34330, 34476, 34566, 35683, 36219, 36323, 37708, 38505, 38522, 38570, 38853, 38997, 39023],
    "qià": [20926, 22326, 24098, 24688, 27534, 27965, 30792, 32994, 39618],
    "jìng chēng": [20928, 20936, 28136],
    "sōu": [20929, 21974, 24256, 24267, 25436, 25628, 25673, 28338, 29504, 33368, 33936, 34699, 37131, 37273, 37802, 38204, 39100, 39125, 39231, 39306, 39466],
    "měi": [20930, 23172, 23226, 23309, 23876, 25396, 27598, 27599, 28028, 28220, 29144, 32654, 36542, 37762, 38209, 40675],
    "tú": [20931, 22259, 22270, 22294, 22295, 22615, 23648, 23801, 23902, 24233, 24284, 24466, 24711, 25580, 28034, 30223, 31585, 33135, 33660, 33956, 36351, 36884, 37236, 37423, 37710, 39327, 39420, 40268, 40351, 40395, 40437],
    "zhǔn": [20934, 20950, 22523, 28310],
    "liáng liàng": [20937, 28092, 37327],
    "diāo": [20939, 20993, 21023, 21500, 22877, 24372, 24427, 27720, 29745, 30857, 31763, 34413, 34497, 35970, 37677, 38613, 39817, 39899, 40119, 40304, 40742],
    "còu": [20945, 28234, 33120, 36659, 36751],
    "ái": [20946, 21824, 22026, 25457, 28336, 30284, 30353, 30362],
    "duó": [20953, 21099, 22842, 22890, 30181, 36401, 37420, 37944, 38094],
    "dú": [20959, 21301, 23355, 26911, 27357, 27568, 28060, 29261, 29272, 29322, 29346, 29420, 29544, 29892, 30398, 35067, 35501, 35712, 35743, 35908, 36117, 37654, 37983, 38855, 38883, 38885, 39475, 39633, 40681, 40695],
    "jǐ jī": [20960],
    "fán": [20961, 20962, 20963, 21285, 22694, 26443, 26569, 26853, 27146, 28735, 28902, 29033, 29140, 29856, 30718, 31020, 31538, 31861, 32208, 32691, 33316, 33319, 34208, 34345, 34844, 35150, 36463, 37353, 37895, 37922, 38034, 40429],
    "jū": [20965, 21258, 23093, 23150, 23621, 23820, 25221, 25398, 25516, 26798, 26896, 27275, 27625, 27633, 27843, 28090, 29401, 29722, 30141, 30752, 32605, 33106, 33357, 34587, 35070, 35530, 36308, 36376, 36537, 38513, 38606, 38816, 38827, 39378, 39545, 39816, 40225, 40331],
    "chù chǔ": [20966, 22788],
    "zhǐ": [20970, 21159, 21675, 22336, 22375, 24075, 24649, 25210, 25351, 26088, 26547, 27490, 27750, 27802, 27924, 28157, 30139, 30731, 31049, 31190, 32025, 32440, 33463, 33547, 34274, 34937, 35175, 35368, 36286, 36601, 36725, 37231, 38447, 40697],
    "píng": [20973, 20980, 21615, 22378, 22592, 23740, 24097, 24114, 24136, 24179, 24959, 24977, 26544, 27956, 28969, 29622, 29942, 29953, 31470, 31667, 31752, 32574, 33619, 33805, 34033, 34482, 34530, 35413, 35780, 36607, 36647, 37105, 39811, 40070],
    "kǎi": [20975, 20977, 21056, 21108, 22450, 22607, 24698, 24887, 24936, 26271, 33928, 36614, 37703, 37799, 38112, 38196, 38355, 38399, 39101],
    "gān": [20978, 22377, 23602, 23604, 23606, 23607, 26577, 27860, 28455, 29589, 29976, 30131, 30712, 31487, 31608, 31891, 32925, 33527, 36800, 37200, 39760],
    "kǎn qiǎn": [20981],
    "tū": [20984, 22551, 23936, 25464, 28043, 28261, 30172, 31167, 31171, 31361, 33878, 37621, 40282, 40757],
    "āo wā": [20985],
    "chū": [20986, 21021, 23680, 25716, 27019, 27159, 35993, 40803],
    "dàng": [20988, 22325, 22449, 22731, 26723, 27284, 27705, 29847, 29949, 30442, 30602, 30720, 30893, 30993, 31772, 33633, 33770, 34153, 34351, 36260, 36927, 38652],
    "hán": [20989, 20990, 21547, 22277, 23074, 23506, 23841, 26199, 26770, 27995, 28085, 28559, 28947, 29696, 29981, 31592, 34604, 37015, 37039, 37601, 38867, 38889],
    "záo": [20991, 38015],
    "dāo": [20992, 20994, 24521, 27672, 33312, 34729, 37334, 39771, 40061],
    "chuāng": [20997, 25680, 29262, 29269, 30126, 30241, 31379, 31383, 31419],
    "fēn fèn": [20998],
    "qiè qiē": [20999],
    "kān": [21002, 21208, 22570, 25121, 26654, 40853, 40859],
    "cǔn": [21004, 24534],
    "chú": [21005, 21416, 24174, 24282, 27249, 27337, 27365, 28353, 29331, 31720, 32801, 33467, 33954, 33965, 34573, 34805, 35936, 36238, 36464, 36487, 36501, 37455, 37604, 38148, 38500, 38607, 38619, 40373],
    "huà huá": [21010],
    "lí": [21013, 21075, 21114, 21145, 21400, 21937, 22175, 22212, 23264, 23415, 24306, 24737, 26792, 26808, 26819, 28435, 28757, 29313, 29314, 29432, 29709, 29827, 29896, 30432, 30557, 31163, 31346, 31472, 31587, 31729, 31852, 31950, 32301, 32545, 32633, 33347, 33650, 33758, 34016, 34110, 34268, 34362, 34570, 34765, 34808, 34859, 35125, 35623, 35981, 37288, 37611, 37637, 37867, 37975, 38626, 39530, 39562, 39887, 39916, 40058, 40097, 40313, 40477, 40514, 40654, 40679],
    "yuè": [21014, 23347, 23684, 23731, 23997, 24689, 24709, 24742, 25097, 25224, 25459, 26376, 27198, 28729, 29210, 29605, 31039, 31156, 31703, 31814, 31845, 31856, 31908, 31925, 34341, 34446, 34447, 35500, 36234, 36288, 36291, 36493, 36559, 37381, 37470, 38e3, 38074, 38321, 38322, 38405, 40465, 40473, 40678, 40864],
    "liú": [21016, 21129, 22176, 23225, 23911, 26056, 26066, 27060, 27210, 27969, 27983, 28687, 29705, 29792, 29804, 29858, 30020, 30041, 30065, 30081, 30244, 30277, 30827, 33957, 33989, 34761, 35031, 37775, 37840, 37890, 38240, 39104, 39109, 39127, 39392, 39413, 39470, 39505, 39581, 39969, 40377, 40544, 40589],
    "zé": [21017, 21063, 21863, 22038, 23271, 24123, 24152, 25246, 27149, 27509, 27810, 27854, 28333, 30367, 30612, 30688, 30987, 31654, 31744, 33332, 34102, 34828, 35159, 35630, 36094, 36188, 36846, 40453, 40794, 40816],
    "chuàng chuāng": [21019, 21109],
    "qù": [21022, 21434, 21435, 38324, 38339, 38418, 40622, 40705],
    "bié biè": [21029, 21035],
    "páo bào": [21032],
    "chǎn chàn": [21036, 21079, 24157],
    "guā": [21038, 21120, 26736, 27460, 29041, 29916, 32973, 36411, 39082, 39091, 39463, 40240, 40505],
    "gēng": [21039, 24218, 26921, 28013, 28991, 30026, 32090, 32686, 32697, 32789, 33774, 36065, 36179, 40330, 40530],
    "dào": [21040, 22133, 24764, 26913, 27300, 29182, 29913, 30423, 30428, 31282, 31291, 32411, 32767, 33364, 33791, 34908, 34911, 36551, 36947],
    "chuàng": [21041, 21071, 21081, 24582, 24884],
    "kū": [21043, 21741, 22288, 22528, 26543, 26701, 30715, 31391, 36301, 37056, 39607, 39852],
    "duò": [21044, 21057, 22703, 23598, 24816, 24988, 25349, 26711, 33333, 36325, 36346, 38474, 38479, 39167, 39283, 40317],
    "shuā shuà": [21047],
    "quàn xuàn": [21048],
    "chà shā": [21049, 21070],
    "cì cī": [21050],
    "guì": [21053, 21055, 21130, 21132, 25740, 25904, 26123, 26690, 26914, 27126, 27195, 27331, 29476, 31148, 31552, 34005, 35160, 36020, 36149, 36330, 37888, 37966, 38844, 40022, 40037],
    "lóu": [21061, 23044, 23105, 24276, 27004, 27155, 28295, 28426, 29089, 32807, 32812, 33371, 33932, 34078, 34684, 34747, 35633, 36545, 36977, 38843, 39621, 39631],
    "cuò": [21065, 21074, 21405, 22798, 25387, 25514, 26852, 33693, 33697, 33996, 36906, 37564, 37679, 38153, 38169],
    "xiāo xuē": [21066],
    "kēi kè": [21067, 23557],
    "là lá": [21068],
    "tī": [21076, 26799, 36386, 37563, 38161, 40392, 40393],
    "pōu": [21078],
    "wān": [21084, 22598, 22762, 24117, 24367, 24398, 28286, 28523, 28771, 30549, 34623, 35916],
    "bāo bō": [21085, 21093],
    "duō": [21087, 21636, 21702, 22153, 22810, 22811, 25479, 27634, 30035, 35056],
    "qíng": [21088, 21197, 22813, 24773, 25806, 26228, 26258, 26878, 27144, 27296, 27696, 29984, 30808, 33885, 40677],
    "yǎn shàn": [21089],
    "dū zhuó": [21090],
    "yān": [21094, 23267, 23846, 23958, 24697, 25045, 25064, 27182, 28106, 28153, 28473, 28895, 28937, 28945, 29017, 29658, 31734, 33005, 33241, 33784, 37154, 37251, 38329, 38409, 40683],
    "huō": [21096, 21136, 21529, 25865, 31220, 32800, 38186, 39454],
    "shèng": [21097, 21104, 21213, 22307, 22701, 23882, 26208, 27066, 27251, 29726, 32854, 34114, 36025, 36088],
    "duān zhì": [21100],
    "wū": [21101, 21596, 21978, 22316, 23627, 24043, 24345, 26439, 27469, 27737, 27738, 27745, 27967, 28879, 31375, 31676, 34704, 35464, 35491, 35820, 37036, 37140, 37794, 38056, 39966, 40238],
    "gē": [21106, 21733, 22314, 24385, 25096, 25107, 25128, 27468, 28370, 29365, 32912, 35004, 35596, 37814, 40218, 40255, 40509],
    "dá zhá": [21107],
    "chuán": [21110, 26295, 26941, 31685, 33313, 33321, 33337, 36658, 36932],
    "tuán zhuān": [21112, 28441, 31743],
    "lù jiū": [21113],
    "pēng": [21115, 21257, 22061, 24614, 24690, 25256, 26760, 28921, 30768, 36591, 39373],
    "piāo": [21117, 21217, 24915, 26074, 29349, 32754, 34741, 39107, 39108, 39128, 39762],
    "kōu": [21118, 24388, 25248, 25715, 30477, 30616, 33444],
    "jiǎo chāo": [21119, 21131, 21222, 25719],
    "qiāo": [21121, 21226, 22685, 24167, 25970, 27207, 27587, 29126, 30807, 30973, 32337, 36268, 36343, 36365, 36474, 36475, 37115, 37153, 37157, 37739, 37740, 37936, 38201, 38941],
    "huá huà": [21123],
    "zhā zhá": [21124],
    "pī pǐ": [21128, 24706],
    "tāng": [21135, 22049, 32688, 34202, 34666, 36442, 38842, 40734],
    "chán": [21142, 22197, 22757, 23157, 23307, 24009, 24283, 26830, 27610, 28281, 28537, 28538, 28598, 28685, 28730, 29016, 29521, 30939, 32254, 32399, 32402, 32544, 33388, 34633, 34768, 34796, 34814, 35479, 35730, 35863, 36500, 37181, 37185, 37579, 38001, 38261, 39262, 39307],
    "zuān": [21143, 36508, 36518, 37446, 37978],
    "mó": [21144, 23275, 23332, 23351, 23579, 25721, 25845, 27205, 31970, 33180, 34278, 34321, 35624, 35625, 35871, 39235, 39261, 39309, 39629, 39764, 39801],
    "zhú": [21146, 26040, 26351, 27416, 28767, 28834, 28891, 29165, 29221, 30211, 31481, 31489, 31516, 33331, 33599, 34027, 34827, 34878, 36485, 36880, 36907, 38019, 40001],
    "quàn": [21149, 21223, 21240, 29302, 38863],
    "jìn jìng": [21156, 21170, 21185],
    "kēng": [21157, 22353, 29308, 30785, 30812, 35481, 37557, 37726, 37847, 38143, 38444],
    "xié liè": [21158],
    "zhù chú": [21161],
    "nǔ": [21162, 24361, 30766, 33004],
    "shào": [21165, 21362, 21736, 28530, 32057, 32164, 32461, 34961, 37045],
    "miǎo": [21168, 26474, 28156, 28218, 30471, 31186, 31694, 32242, 32520, 34256, 37e3],
    "kǒu": [21174, 21475],
    "wā": [21176, 22380, 23090, 23207, 23666, 25366, 25896, 27964, 28315, 28453, 29950, 30038, 31349, 31370, 31402, 34521, 38856, 40707],
    "kuāng": [21179, 21281, 21289, 21712, 24647, 27949, 31568, 31610, 35462, 35795, 36589, 37052],
    "hé": [21182, 21642, 21853, 22976, 23750, 25926, 26359, 26567, 26945, 27644, 27827, 28088, 28206, 28565, 29062, 30380, 30407, 30409, 30413, 30418, 31166, 31701, 31866, 31917, 32750, 33743, 33794, 35208, 35384, 35429, 37059, 37339, 37452, 37961, 38305, 38356, 38402, 38422, 38824, 38940, 39172, 39288, 39802, 40534, 40615, 40789, 40833, 40866],
    "gào": [21186, 21567, 21578, 23804, 31086, 31088, 31134, 31606, 35493, 35824, 37084, 37615, 38150],
    "bó bèi": [21187],
    "láng": [21190, 23247, 24266, 25999, 26745, 27028, 27139, 27444, 29436, 29701, 29807, 30816, 31234, 33350, 33992, 34571, 34690, 36532, 37074, 37086, 37571, 37807, 38162],
    "xūn": [21195, 21211, 21234, 21235, 22161, 22339, 22489, 22628, 22734, 22758, 26331, 29179, 29551, 30660, 32385, 33232, 34219, 34224, 34317, 37306],
    "juàn juān": [21196, 29945],
    "lè lēi": [21202],
    "kài": [21203, 28812, 28887, 37774],
    "wěng yǎng": [21212],
    "qín": [21220, 21994, 22105, 23964, 24200, 25027, 25028, 25446, 25810, 26035, 27278, 28607, 29665, 29748, 29753, 30269, 31165, 31206, 32825, 33449, 33465, 33766, 34707, 34820, 37401, 37419, 38594, 38770, 40185, 40301],
    "jiàng": [21221, 21278, 21280, 23929, 24348, 24374, 25726, 27364, 27930, 28400, 29343, 31969, 31976, 32115, 32475, 35645, 37233, 37284, 37292],
    "fān": [21227, 23311, 24070, 24161, 24539, 24995, 26073, 26075, 32345, 32763, 34281, 36691, 39103, 39132, 40021],
    "juān": [21228, 23010, 23071, 25424, 28051, 34866, 35024, 37816, 37931, 38220, 40515],
    "tóng dòng": [21229, 28884, 29137, 29418],
    "lǜ": [21236, 22415, 23874, 24459, 24942, 27695, 28388, 28670, 29192, 31675, 32160, 32322, 33183, 33870, 34385, 37986],
    "chè": [21238, 22396, 24443, 24505, 25507, 25764, 28552, 28898, 29217, 30638, 30825, 32837, 36832, 38937],
    "sháo": [21242, 29631, 38902],
    "gōu gòu": [21246],
    "cōng": [21254, 22250, 22257, 24553, 24625, 24740, 26288, 27180, 28439, 29821, 29825, 30619, 31733, 32369, 32865, 32870, 32874, 32880, 33473, 33552, 33905, 34031, 34085, 34764, 37743, 37843, 37862, 39448, 39492, 39586],
    "táo yáo": [21259, 38518],
    "páo": [21263, 21638, 22409, 24214, 29230, 29389, 34957, 35100, 36595, 38788, 40581],
    "dá": [21266, 22962, 24603, 28831, 29173, 30051, 31530, 32653, 33625, 34200, 34813, 35418, 36798, 36815, 36822, 36826, 36921, 36948, 37949, 38780, 38801, 38851, 40854, 40856],
    "huà huā": [21270],
    "běi bèi": [21271],
    "nǎo": [21272, 22452, 22550, 23248, 24700, 24745, 24817, 29785, 30895, 33041, 33075, 33126],
    "chí shi": [21273],
    "fāng": [21274, 22543, 26041, 28115, 29285, 33459, 37025, 37377, 37690, 38059, 40203],
    "zā": [21277, 21634, 24064, 27806, 33244, 33250, 36810, 37460, 39795],
    "qiè": [21287, 21394, 22974, 24623, 24719, 24812, 24860, 25352, 31317, 31363, 31434, 31521, 31655, 31691, 31841, 36389, 37733, 38194, 39900],
    "zāng cáng": [21288],
    "fěi": [21290, 22876, 24753, 26832, 27047, 31706, 32737, 34140, 35513, 35837],
    "kuì guì": [21294, 21297],
    "suǎn": [21300],
    "pǐ": [21305, 22141, 22189, 22318, 24192, 30174, 30294, 33076, 33481, 37538, 40196],
    "qū ōu": [21306, 21312],
    "kē qià": [21308],
    "yǎn yàn": [21309, 26858],
    "biǎn": [21310, 24828, 25561, 30885, 31272, 31366, 34250, 35082, 36022, 36140, 40216],
    "nì": [21311, 22532, 23263, 23354, 24772, 24885, 26165, 26289, 27708, 30500, 30568, 32268, 32978, 33147, 33193, 36870],
    "niàn": [21316, 21816, 22493, 24319, 24565, 24791, 33356],
    "sà": [21317, 27346, 33038, 33832, 34159, 34217, 37394, 38561, 39087, 39122, 39354],
    "zú": [21318, 21739, 23850, 26063, 31652, 36275, 36388, 38238],
    "shēng": [21319, 21583, 22768, 26008, 26119, 26363, 26529, 27525, 27881, 28262, 28986, 29298, 29636, 29983, 29989, 31444, 31513, 32882, 37454, 37727, 38441, 38494, 38521, 40319, 40746],
    "wàn": [21325, 21328, 24552, 26468, 30627, 33045, 33109, 33836, 34755, 36110, 36624, 37693],
    "huá huà huā": [21326, 33775],
    "bēi": [21329, 24754, 25593, 26479, 26734, 30403, 30865, 34275, 40303, 40526],
    "zú cù": [21330],
    "dān shàn chán": [21333, 21934],
    "nán nā": [21335],
    "shuài lǜ": [21339],
    "bǔ bo pú": [21340],
    "kuàng guàn": [21341],
    "biàn": [21342, 21464, 22793, 23749, 24321, 24487, 24557, 25219, 26154, 27763, 27764, 29603, 33361, 33476, 35213, 35546, 35722, 36769, 36775, 36776, 36777, 36779, 36782, 36783, 36941, 37318],
    "bǔ": [21343, 21754, 25429, 34917, 35036, 40468],
    "zhàn zhān": [21344, 35249],
    "kǎ qiǎ": [21345],
    "lú": [21346, 22183, 22406, 22746, 24208, 24300, 26341, 26534, 26636, 27368, 27896, 28696, 28809, 29200, 29561, 29576, 29904, 30439, 30673, 31834, 32401, 32591, 33002, 33242, 33326, 33339, 33387, 33446, 34310, 34854, 36708, 36723, 37417, 37994, 39025, 39045, 39359, 39639, 39794, 40056, 40072, 40469, 40492, 40696],
    "lǔ": [21348, 22647, 25523, 25796, 27152, 27257, 27347, 27660, 28407, 28571, 28674, 30837, 30944, 31326, 33379, 33386, 34046, 34383, 34396, 37824, 37930, 37989, 38245, 39791, 40065, 40565],
    "guà": [21350, 21865, 25346, 25499, 32611, 35074, 35455, 35798],
    "áng yǎng": [21356],
    "yìn": [21360, 22461, 22583, 24277, 24941, 24982, 24983, 25050, 27925, 28250, 29452, 30282, 32996, 33562, 37235, 39843],
    "què": [21364, 21371, 22617, 23813, 24747, 24872, 24932, 25609, 27063, 29161, 29751, 30389, 30830, 30906, 31021, 38347, 38421, 40306, 40522],
    "luǎn": [21365],
    "juàn juǎn": [21367, 24059],
    "chǎng ān hàn": [21378],
    "wěi yán": [21379],
    "tīng": [21381, 21403, 21548, 24193, 24304, 24307, 27712, 28867, 28916, 32142, 32787, 32884, 32892, 32893, 38803],
    "zhé zhái": [21383],
    "hàn àn": [21384, 23677],
    "yǎ": [21386, 21782, 24204, 30166, 30210, 34149],
    "shè": [21389, 21401, 24381, 24913, 24948, 25086, 25666, 27399, 28041, 28091, 28169, 28384, 28740, 31038, 33294, 34062, 34818, 35373, 35774, 36198, 39431, 40605],
    "dǐ": [21390, 21607, 22360, 24356, 25269, 25310, 25483, 29300, 30757, 33767, 35293, 35398, 35787, 36583, 37048, 38458, 39606, 39923],
    "zhǎ zhǎi": [21391],
    "páng": [21392, 23246, 24222, 24492, 33152, 33341, 34691, 36868, 39967, 40145, 40846, 40848],
    "zhì shī": [21396],
    "máng": [21398, 21506, 21732, 23055, 24537, 24702, 26455, 26471, 27730, 27997, 29307, 30173, 30450, 30829, 31488, 33426, 33579, 34313, 37017, 37359, 37609, 38099, 39417],
    "zuī": [21404, 27190, 32407, 34773],
    "shà xià": [21414, 24264],
    "áo": [21419, 22007, 22008, 24274, 25942, 28406, 29522, 29523, 29832, 32753, 32758, 32762, 32881, 34076, 34735, 35639, 35640, 36968, 37846, 38558, 39986, 40140, 40404, 40711],
    "lán qiān": [21425],
    "sī mǒu": [21430],
    "gōng hóng": [21431],
    "lín miǎo": [21432],
    "qiú róu": [21433],
    "dū": [21438, 22047, 30563, 37263],
    "xiàn xuán": [21439, 32291],
    "cān shēn cēn sān": [21442, 21443, 21444, 21445],
    "ài yǐ": [21446],
    "chā chà chǎ chá": [21449],
    "shuāng": [21452, 23360, 23367, 27398, 31029, 33389, 38617, 38684, 39483, 39526, 39590, 40414, 40472, 40564],
    "shōu": [21454, 25910],
    "guái": [21455],
    "bá": [21456, 22957, 25244, 25300, 28838, 30329, 32968, 33543, 33757, 35417, 36299, 36599, 39747, 40741],
    "fā fà": [21457],
    "zhuó yǐ lì jué": [21461],
    "qǔ": [21462, 23094, 31468, 34682, 35411, 40818, 40843],
    "jiǎ xiá": [21466, 24486],
    "wèi yù": [21470, 23561, 34074],
    "dié": [21472, 22436, 22558, 23756, 24137, 24654, 24821, 25116, 26337, 27548, 27662, 29251, 29266, 29918, 30067, 30082, 30089, 30090, 30879, 32112, 32470, 32778, 32779, 32965, 33363, 33525, 34600, 34678, 35083, 35396, 35548, 35853, 36334, 36416, 36845, 38267, 39944, 40125, 40233],
    "ruì": [21473, 26520, 27757, 29790, 30591, 33454, 34443, 34617, 37555, 37613, 38160],
    "jù gōu": [21477],
    "lìng": [21478, 21604, 28841, 34342],
    "dāo dáo tāo": [21480],
    "zhī zhǐ": [21482],
    "jiào": [21483, 21580, 22018, 22054, 22093, 23315, 25997, 26016, 28376, 28438, 29541, 29651, 30381, 31382, 34272, 35334, 35685, 36269, 36611, 36686, 36735, 36739, 37237, 37294, 37314],
    "zhào shào": [21484],
    "kě kè": [21487],
    "tái tāi": [21488, 33492],
    "pǒ": [21493, 23552, 31544, 31653, 37461, 38071, 39370],
    "yè xié": [21494],
    "hào háo": [21495],
    "tàn": [21497, 22022, 25506, 27470, 28256, 28845, 30899, 33301],
    "hōng hóng": [21503],
    "miē": [21504, 21673, 21750, 23405],
    "xū yū yù": [21505],
    "chī": [21507, 21735, 21931, 21988, 22084, 22939, 23224, 24424, 24434, 25691, 25889, 27558, 29947, 30196, 30305, 30517, 30621, 31518, 31898, 33013, 34473, 34733, 35381, 39761, 40223, 40260, 40497, 40656, 40797],
    "xuān sòng": [21509],
    "yāo": [21510, 21907, 22829, 22934, 24186, 26950, 27520, 31045, 33136, 33917, 35358, 36992, 40193, 40226],
    "zǐ": [21511, 22985, 22986, 23376, 26445, 26771, 27039, 27252, 28371, 30711, 31213, 31531, 31869, 32043, 32788, 34424, 35391, 37352],
    "hé gě": [21512, 40068],
    "cùn yīngcùn": [21515],
    "tóng tòng": [21516],
    "tǔ tù": [21520, 21771],
    "zhà zhā": [21522, 22867],
    "xià hè": [21523],
    "ā yā": [21526],
    "ma má mǎ": [21527],
    "lìn": [21533, 24673, 24715, 27209, 28955, 29968, 33190, 34106, 34298, 36035, 36161, 36472, 36495, 36505, 36522, 36709, 38325],
    "tūn": [21534, 26302, 26396, 28958],
    "bǐ pǐ": [21537],
    "qìn": [21538, 21539, 21786, 25227, 25599, 25607, 25779, 27777, 28697, 33763, 34301],
    "jiè gè": [21540],
    "fǒu pǐ": [21542],
    "ba bā": [21543],
    "dūn": [21544, 22136, 22697, 22698, 24775, 25737, 25780, 29340, 29540, 30981, 34611, 36478, 39504],
    "fēn": [21545, 24073, 26128, 26374, 26788, 26875, 27675, 31445, 32027, 32439, 32706, 33452, 34927, 35356, 36526, 37210, 37398, 38640, 39220, 39257, 39322],
    "é huā": [21546],
    "kēng háng": [21549, 22932],
    "shǔn": [21550],
    "zhī zī": [21553],
    "yǐn shěn": [21554],
    "wú": [21555, 21556, 21577, 22706, 23807, 26791, 27206, 27595, 27926, 28015, 28961, 29688, 29841, 31078, 33436, 33571, 33665, 34154, 34568, 34801, 35669, 37082, 37593, 38139, 39875, 40272, 40417, 40512, 40751],
    "chǎo chāo": [21557],
    "nà nè": [21558],
    "xuè chuò jué": [21559],
    "chuī": [21561, 28810, 40865],
    "dōu rú": [21562],
    "hǒu": [21564, 29372],
    "hōng hǒu ōu": [21565],
    "wú yù": [21566],
    "ya yā": [21568],
    "è e": [21571],
    "dāi": [21574, 25051, 29507],
    "mèn qǐ": [21575],
    "hōng": [21581, 22173, 25544, 28788, 28888, 28962, 30817, 34216, 35335, 35902, 36579, 36663, 36703, 36720, 37735],
    "chǐ yīngchǐ": [21582],
    "nà": [21584, 25466, 31517, 32013, 32435, 32941, 33971, 34930, 35965, 35968, 36572, 37069, 37385, 38048, 38777, 39798],
    "tūn tiān": [21585],
    "ḿ": [21586],
    "dāi tǎi": [21588],
    "ǒu ōu òu": [21589],
    "bài bei": [21591],
    "yuán yún yùn": [21592, 21729],
    "guō": [21593, 21871, 22035, 22490, 22557, 22670, 23838, 24393, 24397, 25046, 29459, 30225, 32850, 34632, 34760, 37101, 37403, 37707, 38149],
    "huá qì": [21594],
    "qiàng qiāng": [21595, 36292],
    "shī": [21598, 22833, 23608, 23629, 24072, 24107, 26045, 27977, 28260, 28287, 28334, 28348, 28629, 29422, 29509, 29793, 32065, 33913, 33938, 33997, 34417, 34664, 35127, 35193, 35433, 35799, 37055, 37315, 37447, 37734, 39924, 39972, 40122, 40178, 40190, 40371, 40484],
    "juǎn": [21599, 22477, 33223, 33764, 37640, 38185],
    "pěn": [21600, 32760],
    "wěn mǐn": [21601],
    "ne ní": [21602],
    "ḿ m̀": [21603],
    "rán": [21605, 22059, 28982, 29123, 32334, 32944, 34470, 34490, 34939, 34951, 34977, 39653, 39663],
    "tiè chè": [21611],
    "qì zhī": [21614],
    "zǐ cī": [21616],
    "guā gū guǎ": [21617],
    "cī zī": [21618],
    "hǒu xǔ gòu": [21620],
    "hē ā á ǎ à a": [21621],
    "náo": [21622, 22802, 23793, 23977, 24014, 25376, 25747, 29489, 30791, 34546, 34799, 35401, 35658, 37891, 38105],
    "xiā gā": [21623],
    "pēi": [21624, 24588, 32935, 32986, 34883, 37253],
    "háo xiāo": [21626],
    "mìng": [21629, 25525],
    "dá dàn": [21630],
    "zuǐ jǔ": [21632],
    "xián gān": [21633],
    "pǒu": [21637, 21731, 29315],
    "yǎng yāng": [21641],
    "zǎ zé zhā": [21643],
    "hé hè huó huò hú": [21644],
    "hāi": [21645],
    "dā": [21649, 21714, 22112, 22710, 25645, 25752, 32823, 35105, 37789],
    "kǎ kā": [21652],
    "gū": [21653, 21762, 21763, 22993, 23284, 23396, 24044, 24045, 26599, 27245, 27837, 27858, 31250, 31519, 31629, 31643, 31696, 32603, 33533, 33735, 33776, 33991, 35290, 36593, 36594, 36721, 36764, 37220, 37426, 39829, 40227, 40490],
    "kā gā": [21654],
    zuo: [21655],
    "lóng": [21657, 22184, 23952, 24003, 24004, 26173, 26344, 26407, 26634, 27102, 27379, 28272, 28381, 28427, 29206, 29649, 29903, 30275, 30508, 30675, 30779, 31025, 31026, 31423, 31452, 32843, 32894, 32999, 33551, 34338, 34858, 34860, 35185, 35909, 37863, 37992, 38707, 38727, 39521, 40471, 40845, 40850, 40857],
    "xiàn xián": [21662],
    "qì": [21664, 21805, 22096, 22120, 22817, 24323, 24967, 25001, 26275, 26820, 27435, 27668, 27671, 27683, 27732, 27773, 27875, 28230, 28231, 28801, 29960, 30453, 30709, 30875, 30902, 30940, 30951, 32586, 33438, 33914, 34258, 34815, 35350, 35755, 36804, 37905],
    "xì dié": [21669],
    "liē liě lié lie": [21671],
    "zī": [21672, 21982, 22997, 23039, 23388, 23411, 23414, 23856, 23915, 26661, 26900, 28100, 28285, 28363, 28588, 29574, 31116, 31222, 31906, 32014, 32199, 32213, 32387, 32513, 33546, 33586, 33880, 35566, 35864, 36018, 36039, 36160, 36164, 36220, 36241, 36262, 36636, 36666, 36750, 37137, 37421, 37657, 37759, 37793, 38193, 38211, 38974, 38975, 39661, 39892, 39974, 40123, 40325, 40722, 40781, 40796, 40839],
    "mī": [21674],
    "jī xī qià": [21677],
    "gē luò kǎ lo": [21679],
    "shù xún": [21680],
    "zán zá zǎ zan": [21681],
    "hāi ké": [21683],
    "huī": [21684, 22085, 22101, 23118, 23176, 24145, 24509, 24674, 25339, 25381, 25582, 26198, 26249, 26958, 27907, 28680, 28784, 28787, 28899, 30579, 31112, 32730, 32748, 34355, 34950, 35096, 35452, 35801, 35927, 36637, 36745, 39988, 40638],
    "huài shì": [21686],
    "táo": [21687, 21845, 26691, 27310, 27950, 28120, 31097, 32175, 32505, 33796, 34602, 35050, 36847, 36867, 37252, 37630, 38784, 38793, 39232, 39395, 39434, 40727],
    "xián": [21688, 21859, 23092, 23097, 23153, 23244, 23290, 23291, 24358, 25382, 25743, 28046, 28282, 28566, 29961, 30187, 30279, 30286, 32067, 32984, 33335, 34262, 34495, 34525, 34900, 34904, 35512, 35572, 36066, 36114, 36132, 36657, 37262, 37532, 37990, 38289, 38386, 40435, 40436, 40444, 40519, 40569, 40601],
    "è àn": [21689],
    "xuān xuǎn": [21690, 28892],
    "wāi hé wǒ guǎ guō": [21692],
    "yàn yè yān": [21693],
    "āi": [21696, 21710, 22467, 28350, 37552, 37764, 38207],
    "pǐn": [21697, 27008],
    "shěn": [21698, 23158, 23352, 23457, 23479, 23529, 24350, 26315, 28182, 28683, 30635, 30692, 30695, 35262, 35360, 35543, 35717, 35842, 35849, 37029, 38947, 39787],
    "hǒng hōng hòng": [21700],
    "wā wa": [21703],
    "hā hǎ hà": [21704],
    "zāi": [21705, 26685, 28221, 28328, 28797, 28798, 28886, 30581, 36083],
    "dì diè": [21707],
    "pài": [21708, 27808, 27966, 28178, 28227, 33934, 37763],
    "gén hěn": [21711],
    "yǎ yā": [21713, 38597],
    "yuě huì": [21717, 22118],
    "nián": [21718, 24180, 31178, 31205, 39822, 39920, 40071, 40118, 40263, 40655],
    "huá huā": [21719, 22057],
    "jì jiē zhāi": [21724, 22156],
    "mōu": [21726],
    "yō yo": [21727, 21938],
    "lòng": [21730, 26759, 36122],
    "ò ó é": [21734],
    "lī lǐ li": [21737],
    "nǎ na nǎi né něi": [21738],
    "hè": [21740, 22414, 22737, 23497, 24786, 28931, 28994, 29178, 29184, 30283, 30859, 32751, 35088, 35614, 36032, 36154, 36203, 38733, 38734, 38735, 40372, 40470, 40548],
    "bō pò bā": [21745],
    "zhé": [21746, 21856, 21894, 22174, 22481, 24714, 25722, 26210, 26211, 27517, 30714, 30739, 30932, 31863, 31885, 34420, 34544, 34756, 34985, 35423, 35627, 35642, 35713, 35723, 35882, 36626, 36633, 36685, 36740, 36761, 39871],
    "liàng láng": [21748],
    "liè lǜ": [21751],
    "hān": [21755, 25e3, 34486, 35901, 37219, 38919, 39032, 39328, 39805, 40766],
    "hēng hng": [21756],
    "gěng": [21757, 22466, 23802, 25389, 26775, 32134, 32480, 32831, 33668, 37088, 39614, 39873, 40096],
    "chuò yuè": [21758],
    "gě jiā": [21759],
    "bei bài": [21764],
    "hán hàn": [21765],
    "chún": [21767, 28017, 28283, 28387, 28440, 29321, 32020, 32431, 33059, 33724, 33939, 34036, 37255, 37269, 37662, 38489, 39897, 40329, 40529],
    "ài āi": [21769],
    "jiá qiǎn": [21770],
    "yán dàn xián": [21772],
    "chē": [21779, 30743, 30824, 33687, 34556],
    "wú ńg ń": [21780],
    "zào": [21781, 21795, 22122, 24933, 26765, 28790, 29040, 29157, 30337, 30338, 31427, 31432, 31753, 33345, 35679, 36270, 36481, 36896],
    "dí": [21785, 21831, 22016, 22145, 23265, 24312, 25932, 25973, 26769, 28068, 28364, 29380, 31515, 31860, 31988, 33494, 33659, 34059, 34064, 34273, 35263, 35276, 35956, 36842, 38766, 38932, 39344, 39650, 40464],
    "gòng hǒng gǒng": [21789, 21962],
    "dóu": [21790],
    "lào láo": [21792, 22062, 24998],
    "liǎng yīngliǎng": [21793],
    "huàn": [21796, 21914, 22850, 22864, 23462, 23880, 24187, 24739, 24844, 25442, 25563, 25808, 25868, 26777, 27125, 28003, 28067, 28185, 28470, 28579, 28873, 28949, 29029, 29773, 30186, 30227, 30534, 32914, 34279, 35938, 36696, 36909, 39879, 39926, 39936, 40105],
    "léng": [21797, 22596, 26974, 30864, 34192],
    "wō wěi": [21801],
    "fěng": [21802, 35202, 35575, 35773],
    "yín jìn": [21803],
    "hǔ xià": [21804],
    "wéi": [21807, 22260, 22285, 22749, 23767, 23774, 23916, 24079, 24119, 24131, 24799, 26693, 27817, 27912, 28064, 28235, 28296, 28493, 28505, 28543, 28656, 29353, 30656, 32173, 32500, 34038, 35257, 36829, 36949, 37164, 37248, 37711, 38344, 38385, 38859, 38886, 39840],
    "shuā": [21808],
    "chàng": [21809, 24581, 24757, 26274, 28987, 30021, 30076, 35503, 38868, 39727],
    "ér wā": [21810],
    "qiàng": [21812, 28829, 29079, 32699],
    "yō": [21815],
    "yū": [21817, 28132, 30208, 30419, 31626, 32006, 32417, 36796, 36802, 36803, 38483],
    "lài": [21819, 28625, 28712, 28716, 30302, 30313, 30544, 30558, 31809, 31839, 34302, 36058, 36084, 36169, 36182, 38972, 38978, 40291],
    "tuò": [21822, 23966, 26589, 27620, 27643, 31656, 31836, 33818, 34304, 36293],
    "zhōu zhāo tiào": [21825],
    "kěn": [21827, 22438, 22718, 24691, 25031, 32910, 32943, 32955, 35940, 37689],
    "zhuó zhào": [21829, 28655],
    "hēng hèng": [21832, 24729],
    "lín lán": [21833],
    "a ā á ǎ à": [21834],
    "qiāng": [21836, 22004, 23944, 25109, 25700, 26024, 26538, 27085, 28332, 29252, 29456, 29511, 32652, 32663, 33108, 34595, 35602, 37848, 38166, 38197],
    "tūn zhūn xiāng duǐ": [21837],
    "wèn": [21839, 22927, 25598, 25653, 29882, 38382, 38992],
    "cuì qi": [21840],
    "dié shà jié tì": [21841],
    "yuē wā": [21848],
    "zǐ cǐ": [21849],
    "bǐ tú": [21850],
    "chuò chuài": [21852],
    "yǎ yā è": [21854],
    "fēi": [21857, 23123, 23124, 25161, 26243, 28164, 29446, 32203, 32495, 35062, 38671, 38750, 38751, 39131, 39133, 39134, 39205, 39329, 39441, 39451, 39905, 40113],
    "pí": [21860, 22720, 26503, 27607, 27608, 28983, 29749, 30130, 30382, 31738, 32628, 32646, 33086, 33111, 33165, 34445, 34493, 34609, 34743, 34863, 35964, 35988, 37099, 37433, 38448, 38516, 38566, 39790, 39821, 40079, 40295, 40729],
    "shá": [21861],
    "lā la": [21862],
    "yīng qíng": [21864],
    "pā": [21866, 22929, 33317, 33897, 36276],
    "zhě shì": [21867],
    "sè": [21868, 21959, 25038, 25804, 26652, 27502, 28073, 28171, 28544, 28545, 28615, 28623, 28690, 29791, 29873, 30263, 31313, 31329, 31343, 32364, 35653, 36694, 37547, 37884, 38127, 39115],
    "niè": [21870, 21995, 22107, 22169, 22209, 22227, 22332, 23420, 23421, 23922, 23981, 24021, 24071, 25948, 26559, 27127, 27377, 28037, 28284, 30150, 31710, 31819, 31985, 31989, 32834, 32886, 33260, 33266, 34326, 34853, 35736, 36354, 36375, 36377, 36433, 36513, 37660, 37811, 37960, 38007, 38016, 38218, 38221, 38353, 38503, 38537, 39027, 39070, 40807],
    "luō luó luo": [21872, 22217],
    "tān chǎn tuō": [21876],
    bo: [21877, 34068],
    "dìng": [21878, 23450, 26903, 30708, 30855, 30880, 30968, 32866, 33114, 33827, 35330, 35746, 37664, 38189, 38977, 39139, 39268],
    "lāng": [21879],
    "án ān": [21885],
    "kā": [21888, 25814],
    "yóng yú": [21889],
    "lā lá lǎ": [21895],
    "jiē": [21896, 21948, 21983, 22566, 23192, 25509, 25522, 25809, 28253, 29039, 30102, 30158, 30308, 30342, 31224, 31277, 33083, 34644, 34903, 35631, 38454, 38542, 38786, 40347],
    "hóu": [21897, 24127, 29492, 30218, 30586, 31692, 31943, 32749, 33876, 37127, 37741, 39217, 39610, 39928],
    "dié zhá": [21899],
    "wāi": [21902, 27498, 31477],
    "nuò rě": [21903],
    "xù huò guó": [21904],
    "zán": [21906],
    "wō ō": [21908],
    "hú": [21910, 22045, 22251, 22774, 22775, 22778, 23209, 24359, 25648, 26011, 26972, 27122, 28246, 28715, 28928, 29043, 29392, 29474, 29786, 29939, 31670, 32087, 32288, 32993, 33899, 34075, 34676, 34716, 34906, 35315, 37264, 37752, 38966, 39212, 39693, 39793, 39959, 40288, 40344, 40358, 40533],
    "huàn yuán xuǎn hé": [21915],
    "xǐ": [21916, 22221, 22736, 23651, 24473, 24985, 26546, 27250, 27478, 28423, 29626, 29885, 30678, 31143, 32304, 33864, 33912, 34032, 34786, 35601, 36445, 36519, 37410, 37480, 37481, 40026],
    "hē hè yè": [21917],
    "kuì": [21919, 22067, 23231, 23303, 24870, 24871, 24978, 31697, 31779, 31812, 32873, 32877, 32885, 33197, 34146, 35593, 39229, 39243, 39304],
    "zhǒng chuáng": [21920],
    "wéi wèi": [21921, 28858, 29234],
    "duó zhà": [21925],
    "sāng sàng": [21930],
    "qiáo jiāo": [21932],
    "pèn bēn": [21935],
    "cān sūn qī": [21936],
    "zhā chā": [21939],
    "miāo": [21941],
    "pēn pèn": [21943],
    "kuí": [21945, 22804, 22862, 24025, 25123, 25542, 26182, 26252, 26959, 26961, 27334, 29354, 30589, 33909, 34248, 34359, 34369, 34672, 36520, 36917, 37128, 37736, 37751, 38959, 39319, 39460, 39577, 39745],
    "lou lóu": [21949],
    "zào qiāo": [21951],
    "hè xiāo xiào hù": [21955],
    "á shà": [21956],
    "xiù": [21957, 23723, 23744, 28340, 29659, 29703, 29843, 31168, 32137, 32333, 32353, 32483, 34705, 34966, 35086, 35087, 37561, 37861, 37885, 38152, 40773],
    "qiāng qiàng": [21958, 25111, 25127, 36428, 36449],
    "ài yì": [21964, 33406],
    "má mǎ ma": [21966],
    "kè kē": [21969],
    "dā tà": [21970, 37769],
    "sǎng": [21971, 25633, 30921, 35116, 37791, 39001, 39073],
    "chēn": [21972, 25275, 29723, 30603, 35523, 35603, 36061, 37108],
    "wā gǔ": [21975],
    "pǎng bēng": [21977],
    "xián qiǎn qiān": [21979],
    "lào": [21984, 23274, 27247, 28061, 28551, 32802, 32814, 36540, 36546, 37226],
    "wēng": [21985, 32705, 32876, 34697, 37779, 40370, 40543],
    "wà": [21986, 33149, 33155, 34972, 35178, 38884],
    "hēi hāi": [21992],
    "hē": [21996, 27441, 34842, 35382, 35779],
    zi: [21997],
    "sǎi": [21998],
    "ǹg ńg ňg": [21999],
    "gě": [22e3, 33336],
    "ná": [22001, 25295, 25343, 37823, 38222],
    "diǎ": [22002],
    "ài ǎi āi": [22003],
    "tōng": [22005, 27147, 28853, 34026],
    "zuī suī": [22010],
    "zhē zhè zhù zhe": [22011],
    "mò": [22012, 22333, 22651, 22696, 22970, 23292, 23518, 24094, 26153, 26411, 26554, 27519, 27521, 27819, 28448, 29189, 29519, 30268, 30348, 30525, 30527, 30608, 30617, 30750, 31027, 31203, 32072, 32390, 32817, 33545, 33672, 34022, 34536, 34772, 35971, 35978, 35992, 37510, 37836, 38214, 38476, 38778, 39488, 39785, 40664, 40665],
    "sòu": [22013, 30262],
    "tǎn": [22015, 22374, 24528, 25011, 25019, 26298, 27631, 29870, 33788, 34962, 35170, 37267, 37485, 38077],
    "jiào dǎo": [22020],
    "kǎi gě": [22021],
    "shān càn": [22023],
    "cáo": [22024, 23942, 26361, 26362, 27133, 28437, 33370, 34040, 34732, 35135, 37866],
    "piào": [22028, 24497, 34056, 39491],
    "lóu lou": [22029],
    "gǎ": [22030, 23573, 29581],
    "gǔ jiǎ": [22031],
    "jiāo xiāo": [22032],
    "xū shī": [22040, 22099],
    "pó": [22041, 22185, 23110, 27335, 30372, 37169],
    "dē dēi": [22042],
    "ma má": [22043],
    "lē lei": [22046],
    "gā gá gǎ": [22048],
    "sāi": [22053, 22139, 27618, 33134, 38987, 39955],
    "zuō chuài": [22060],
    "cháo zhāo": [22066, 26397, 40706],
    "zuǐ": [22068, 22143, 23946, 29883],
    "fǔ ḿ": [22072],
    "qiáo qiào": [22074, 32761, 35887],
    "chù xù shòu": [22076],
    "tān chǎn": [22077],
    "dàn tán": [22078, 24382, 24392, 24788, 28601],
    "hēi mò": [22079],
    "ě": [22081, 30760, 38923, 39424, 40264],
    "fān bo": [22083],
    "chuáng": [22087, 24202, 29248],
    "cù zā hé": [22088],
    "tūn kuò": [22091],
    "cēng chēng": [22092],
    "dēng": [22100, 23297, 28783, 29128, 29842, 30331, 31475, 31782, 33376, 35915],
    "pū": [22103, 25169, 25778, 25908, 25909, 28541, 28807, 38496],
    "juē": [22104, 23657, 23659, 25767],
    "lū": [22108, 22165, 25784, 25852, 35618],
    "zhān": [22113, 23742, 24777, 26051, 26076, 26540, 26676, 27617, 27656, 27658, 27838, 30651, 34205, 34501, 35392, 35449, 35691, 35893, 36232, 36997, 38298, 38673, 39142, 39256, 39513, 39769, 40035, 40455, 40559],
    "ō": [22114],
    "zhòu zhuó": [22115],
    "jiào qiào chī": [22125],
    "yuàn": [22126, 22964, 24616, 24895, 25534, 29783, 31120, 33489, 34895, 35051, 35089, 38498, 39e3],
    "ǎi ài āi": [22127],
    "yōng yǒng": [22128, 28589],
    "jué xué": [22129],
    "pēn pèn fèn": [22132],
    "gá": [22134, 23580, 37331, 37687, 38022],
    "hm hěn xīn hèn": [22135],
    "dāng": [22137, 28578, 29680, 29867, 31580, 31801, 33377, 34807, 35014, 35168],
    "làn": [22146, 28389, 28651, 28866, 29143, 29185, 29211, 29220, 29907, 31991, 38020],
    "tà": [22147, 22202, 23817, 25374, 25640, 25787, 27067, 27261, 27646, 28094, 28606, 28620, 31138, 31887, 35515, 35702, 36427, 36473, 36482, 36514, 36957, 37652, 38354, 38373, 38396, 38424, 38812, 38835],
    "huō huò ǒ": [22148],
    "hāo": [22150, 33568, 33983, 34181],
    "hè xià": [22151],
    "xiù pì": [22154],
    "zhōu chóu": [22155, 30441, 35818],
    "mē": [22162],
    "chā cā": [22163],
    "bó pào bào": [22167],
    "me mèi mò": [22172],
    "xié hái": [22177],
    "áo xiāo": [22179],
    "mō": [22180, 25720],
    "pín": [22188, 23078, 23252, 23338, 29613, 30665, 34226, 34841, 36007, 36139, 39024, 39078],
    "mè": [22192, 28665],
    "rǎng rāng": [22199],
    "lá": [22201, 26095],
    "jiáo jué jiào": [22204],
    "chuò": [22205, 23062, 25801, 27488, 28080, 30957, 36352, 36639, 36749, 36789, 36790, 37227, 37985, 39199, 40810, 40842],
    "huān huàn": [22206],
    "zá cà": [22211],
    "chài": [22214, 34431, 34822, 34947, 35341],
    "náng nāng": [22218],
    "zá zàn cān": [22219],
    "sū": [22220, 27375, 29990, 31267, 31308, 31395, 34311, 34323, 37221, 39874],
    "zèng": [22222, 29111, 29969, 36104, 36192, 37605, 38147],
    "zá niè yàn": [22224],
    "nāng": [22228],
    "luó luō luo": [22230],
    "wéi guó": [22231],
    "huí": [22232, 22238, 22252, 24315, 24317, 24667, 27908, 30160, 33588, 34456, 34516, 34517, 34582, 36852, 36901, 39856],
    "nín": [22236, 24744, 33036],
    "jiǎn nān": [22237],
    "nān": [22241],
    "tuán": [22242, 22243, 22296, 24945, 25247, 25718, 27314, 31984, 37828, 40402, 40443],
    "tún dùn": [22244, 22345],
    "guó": [22255, 22262, 22267, 22269, 22272, 22283, 24124, 24151, 24918, 25681, 28429, 32861, 33112, 33173, 34094, 34402, 39320],
    "kùn": [22256, 28035, 30543],
    "wéi tōng": [22258],
    "qūn": [22263, 22795, 36897],
    "rì": [22264, 26085, 34933, 37412, 39353, 39538],
    "tāi": [22268, 23393, 32974],
    "pǔ": [22275, 22289, 25800, 26222, 26268, 27192, 27279, 27654, 28006, 28325, 28915, 35561, 35676, 35889, 36476, 37920, 38248],
    "quān juàn juān": [22280, 22287],
    "chuí chuán": [22284],
    "tuǎn": [22293, 30077, 30083],
    "lüè": [22297, 25504, 30053, 30055, 31268, 37597, 37602, 38154],
    "huán yuán": [22300],
    "luán": [22301, 22302, 22897, 23048, 23372, 23402, 23423, 23782, 24018, 25371, 25891, 26347, 26686, 27410, 28390, 28772, 30324, 30325, 32649, 33044, 33248, 34378, 37550, 38014, 40265, 40478, 40510],
    "tǔ": [22303, 22305, 37367, 38029],
    "xū wéi": [22313],
    "dì de": [22320, 23987],
    "qiān sú": [22321],
    "zhèn": [22323, 22630, 25355, 25391, 26389, 26650, 30013, 30521, 32022, 32124, 32444, 35499, 36049, 36168, 37620, 37805, 37806, 38215, 38453, 38499, 38663, 40198, 40489],
    "chǎng cháng": [22330, 22580, 22642],
    "qí yín": [22331],
    "jiá": [22335, 24550, 24669, 25118, 25204, 33061, 33626, 33698, 34545, 34554, 35020, 36338, 37071, 37087, 37583, 38103, 38956, 38960, 39050, 40246, 40266],
    "zhǐ zhì": [22337],
    "bǎn": [22338, 23685, 26116, 26495, 29256, 29930, 31876, 33320, 34626, 37393, 38051, 38442, 39788],
    "qǐn": [22341, 23505, 23517, 23522, 26129, 26795, 31497, 34748, 36222, 37599, 38163],
    "méi fén": [22342],
    "rǒng kēng": [22344],
    "fāng fáng": [22346],
    "fèn bèn": [22347],
    "tān": [22349, 24633, 25674, 25849, 25892, 28393, 28760, 30251, 30321, 33297, 36010, 36138],
    "huài pēi pī péi": [22351],
    "dì làn": [22356],
    "tán": [22363, 22704, 22709, 22727, 22748, 23122, 24987, 26137, 26311, 27011, 27264, 28525, 29122, 30192, 30969, 32584, 32590, 34283, 35527, 35674, 35680, 35848, 35885, 35994, 37103, 37296, 37663, 38979],
    "bà": [22365, 22459, 22761, 24349, 27419, 28766, 29240, 30706, 35207, 38712, 39809, 40069],
    "fén": [22367, 22707, 22946, 23694, 24169, 26508, 26876, 27774, 28954, 29132, 29139, 32658, 32693, 33974, 34145, 34464, 34465, 35950, 35958, 36690, 37948, 38571, 39337, 39797, 40642, 40726, 40738],
    "zhuì": [22368, 22684, 24820, 29952, 30071, 30984, 32180, 32267, 32512, 32530, 33103, 33159, 35528, 36101, 36184, 37258, 37667, 37958],
    "pō": [22369, 23717, 27900, 28300, 28497, 37337, 37882, 38027, 38935, 39047],
    "pǎn bàn": [22370],
    "kūn": [22372, 22531, 22546, 23824, 23825, 26118, 26204, 28489, 28956, 29108, 29457, 29736, 29819, 33742, 34603, 35016, 35049, 35084, 37260, 37653, 38175, 39433, 39648, 39649, 39656, 39908, 40114, 40318, 40356, 40525],
    "diàn": [22379, 22443, 22666, 22722, 22880, 23133, 24215, 24806, 25154, 27202, 27583, 28096, 28593, 29623, 29716, 30005, 30300, 31775, 34580, 37439, 38651, 38747, 39508],
    "mù mǔ": [22390],
    "kē kě": [22391, 36603],
    "xuè": [22393, 23716, 26710, 28709, 29400, 30642, 35604, 35857, 36240],
    "dǐ chí": [22395, 26594],
    "lā": [22403, 26566, 33736, 37003],
    "lǒng": [22404, 22405, 22751, 22752, 25314, 25871, 31433, 38471, 38580],
    "mín": [22410, 22980, 23735, 23823, 25450, 26107, 26108, 27665, 29641, 29720, 29725, 29769, 30203, 30463, 30727, 32205, 32225, 32535, 32608, 33504, 37425, 37641, 37746, 40214],
    "dòng tóng": [22412, 23762, 27934],
    "cí": [22416, 23336, 24904, 26572, 28648, 29633, 29943, 29958, 30913, 31008, 31072, 31949, 33576, 35422, 35789, 36765, 36766, 36772, 36781, 38604, 39162, 39176, 40220, 40383, 40384, 40538],
    "duī": [22422, 22534, 22624, 30205, 30931, 37907, 37916, 40237],
    "duò duǒ": [22427],
    "duǒ duò": [22428, 25350],
    "chá": [22430, 23519, 23894, 25661, 27086, 27307, 29497, 33580, 33590, 35431, 38763],
    "shǎng": [22439, 26188, 27145, 36062, 36120, 36175, 37631, 37851, 37980],
    "shǒu": [22440, 23432, 25163, 25164, 33359, 39318],
    da: [22447, 32360, 36342],
    "háng": [22451, 26043, 26477, 31573, 32078, 32471, 33322, 33472, 34466, 35012, 36005, 36818, 38927, 39043, 39783],
    "ān ǎn": [22453],
    "xīng": [22454, 24826, 26143, 26320, 29003, 29481, 29766, 30376, 31682, 33125, 33288, 35306, 35314, 35587, 39426, 39565, 39823, 39929],
    "yuàn huán": [22456],
    "bāng": [22457, 24110, 24135, 24154, 24171, 25440, 26758, 27996, 37030, 37035, 38820],
    "póu fú": [22458],
    "cén": [22465, 23697, 28052],
    "běng fēng": [22468],
    "dì fáng": [22469],
    "xiá jiā": [22473],
    "mái mán": [22475],
    "làng": [22476, 23808, 28010, 33943, 38316],
    "shān yán": [22479],
    "qín jīn": [22480],
    "pǔ bù": [22484],
    "huā": [22486, 23154, 26907, 30836, 31936, 33457, 33930, 34340, 35502, 37685],
    "suì sù": [22499],
    "pí pì": [22500],
    "qīng zhēng": [22501, 40109],
    "wǎn wān": [22502],
    "lǔn": [22504, 31248],
    "zhēng chéng": [22505],
    "kōng": [22506, 23814, 31644, 36539, 37651, 40316],
    "cǎi cài": [22512, 23488, 37319],
    "chù tòu": [22513],
    "běng": [22514, 29739, 33782, 38811],
    "kǎn xiàn": [22515],
    "yì shì": [22518, 37299],
    "péi": [22521, 27632, 35060, 35061, 36064, 36180, 37639, 38187, 38443, 38506],
    "sào sǎo": [22525],
    "jǐn qīn jìn": [22535],
    "péng bèng": [22539],
    "qiàn zàn jiàn": [22545],
    "àn": [22547, 23669, 23736, 25353, 26263, 26696, 33018, 33612, 35963, 35979, 37644, 38343, 38540, 40687],
    "duò huī": [22549, 22702],
    "huán": [22554, 23503, 23536, 23768, 26707, 27961, 28596, 29506, 29615, 29872, 31979, 32367, 32563, 32678, 33601, 33800, 33809, 35954, 37744, 37942, 38206, 38254, 38372, 38427, 38600, 39711, 40558],
    "bǎo bǔ pù": [22561],
    "máo móu wǔ": [22565],
    "ruán": [22567, 22742, 25739],
    "ài è yè": [22568],
    "gèng": [22569, 26245],
    "méi": [22579, 22650, 23186, 23883, 24510, 25879, 26522, 26626, 26757, 26979, 26995, 27089, 28228, 28232, 29028, 29496, 29611, 29691, 29762, 30473, 30530, 31126, 33028, 33058, 33116, 33530, 33683, 33919, 37119, 37238, 37767, 38213, 38665, 40357, 40539, 40692],
    "dǔ": [22581, 29757, 30585, 31491, 31716, 35241, 36077, 36172],
    "féng": [22584, 32152, 33346, 36898],
    "hèng": [22588],
    "chūn": [22590, 23179, 26110, 26149, 26265, 26486, 26943, 27078, 27201, 27332, 29763, 31674, 33797, 34685, 36660, 39942, 40350],
    "jiǎng": [22594, 22870, 22888, 22892, 26728, 27123, 29518, 32809, 33177, 33931, 34083, 35611, 35762, 39004],
    "huāng": [22595, 24031, 24908, 32915, 33618, 34881],
    "duàn": [22597, 26029, 26039, 26932, 27573, 27592, 28997, 29782, 30891, 31766, 31850, 32222, 32526, 33142, 33902, 36502, 37723, 38203],
    "tǎ": [22612, 22678, 29549, 29562, 39833, 39976, 40142],
    "wěng": [22613, 22883, 23905, 25882, 26273, 30600, 33994],
    "sāi sài sè": [22622],
    "zàng": [22623, 24329, 33235, 33247, 33900, 34101, 37562],
    "tián": [22625, 23623, 24684, 27834, 28233, 29875, 29979, 29980, 3e4, 30027, 30033, 30901, 30924, 32971, 38352, 38423, 40235, 40390, 40399],
    "zhèng": [22627, 24129, 25919, 35388, 35533, 35657, 35777, 35812, 37073, 37165, 38741, 40202],
    "tián zhèn": [22635],
    "wēn": [22637, 26167, 27058, 27551, 28201, 28331, 29797, 30239, 34160, 35953, 36668, 36672, 36754, 37822, 39234, 39963, 39982, 40129],
    "liù": [22639, 24263, 30943, 32719, 38625, 38692, 39230, 39736, 40410, 40552],
    "hǎi": [22640, 28023, 28920, 37244, 37282],
    "lǎng": [22641, 26390, 26391, 26404, 28922, 34018],
    "bèng": [22644, 25596, 27893, 29967, 32179, 36454, 36856, 36908, 37872, 38234],
    "chén": [22645, 23480, 23576, 24561, 25936, 25974, 26216, 26335, 26645, 27140, 27785, 28993, 30222, 33251, 33566, 33664, 33680, 34095, 34236, 34740, 35366, 35574, 36569, 36784, 36839, 37378, 38472, 38515, 38659, 40400, 40590],
    "ōu qiū": [22648],
    "qiàn jiàn": [22649],
    "zhuān tuán": [22652],
    "shuǎng": [22653, 24929, 28474, 29245, 32276, 37871],
    "shú": [22654, 23116, 23408, 29881, 31211, 36118, 36174],
    "lǒu": [22655, 23901, 23937, 29962, 31699, 31757],
    "chí": [22656, 24347, 25345, 27744, 28454, 31486, 31554, 31630, 31722, 33548, 33614, 34483, 35608, 36030, 36223, 36383, 36831, 36833, 36933, 36959, 36978, 37705, 39347, 39536],
    "shù": [22661, 24246, 24251, 24631, 24661, 25101, 26463, 26641, 27193, 27821, 28465, 28484, 28630, 31446, 31466, 32073, 33127, 33623, 33921, 34410, 34899, 35019, 35918, 36848, 37477, 37680, 37859, 38676, 40336],
    "dì zhì": [22662, 30096],
    "kàn": [22664, 23809, 30640, 30681, 30945, 34894, 39723],
    "chěn": [22667, 22822, 30838, 30876, 30947, 36098, 36283, 36408, 37718],
    "zhǐ zhuó": [22668],
    "qiǎng": [22671, 32328, 32358, 32677, 35137],
    "zēng": [22679, 22686, 24974, 29844, 30704, 30963, 32638, 35652, 37163, 40027],
    "qiáng": [22681, 22715, 23281, 23321, 27183, 27299, 28434, 29254, 33378, 34051, 34103, 34336],
    "kuài tuí": [22692],
    "tuǎn dǒng": [22693],
    "qiáo què": [22695],
    "zūn dūn": [22699],
    "qiāo áo": [22717],
    "yì tú": [22719],
    "xué bó jué": [22726],
    "lǎn": [22728, 23358, 23364, 23375, 25042, 25078, 25597, 25829, 25900, 27012, 27414, 28008, 28452, 28768, 32412, 32518, 32625, 35239, 35261, 35272, 37250, 39026],
    "huài": [22730, 22750, 34366],
    "rǎng": [22732, 22756, 25880, 29209],
    "làn xiàn": [22735],
    "dǎo": [22740, 23548, 23566, 23707, 23798, 23947, 23948, 23993, 25443, 25623, 25827, 27101, 31095, 31106, 31153, 36424, 38502, 38557, 38575],
    "ruǐ": [22753, 26741, 27236, 32352, 34122, 34123, 34306, 34307],
    san: [22765],
    "zhuàng": [22766, 22767, 22773, 25758, 28939, 29366, 29376],
    "ké qiào": [22771, 27580],
    "kǔn": [22776, 22780, 24707, 25414, 26801, 30833, 31093, 31239, 31259, 32145, 35021, 38315, 38328, 38403],
    "mǎng": [22782, 28461, 33595, 33725, 33726, 34830],
    "cún": [22783, 23384],
    "zhǐ zhōng": [22786],
    "gǔ yíng": [22787],
    "jiàng xiáng": [22789, 38477],
    "páng féng fēng": [22790],
    "zhāi": [22792, 25434, 25688, 25995, 25998, 27064, 31874, 40779],
    "xuàn xiòng": [22800],
    "wài": [22806, 39009],
    "wǎn yuàn wān yuān": [22807],
    "mǎo wǎn": [22808],
    "mèng": [22818, 22819, 23391, 26790, 30310, 38693],
    "dà dài": [22823],
    "fū fú": [22827, 22983, 26510, 31920],
    "guài": [22828, 24618, 24672],
    "yāng": [22830, 22990, 25264, 27523, 27889, 31207, 32998, 37472, 37704, 38645, 40230, 40495],
    "hāng bèn": [22831],
    "gǎo": [22832, 25630, 26482, 27072, 27073, 27322, 31233, 31294, 31295, 32286, 32543, 33746, 34241, 34291],
    "tāo běn": [22834],
    "tóu tou": [22836],
    "yǎn tāo": [22837],
    "kuā kuà": [22840, 35463],
    "jiá jiā gā xiá": [22841],
    "huà": [22843, 23155, 23295, 23301, 23819, 25702, 26489, 26528, 26726, 27116, 27194, 28549, 30011, 30059, 30069, 32355, 33305, 35441, 35545, 35694, 35805, 40650],
    "jiā jiá gā xiá": [22846],
    "ēn": [22848, 24681, 33981],
    "dī tì": [22851],
    "yǎn yān": [22852, 28208],
    "pào": [22853, 30129, 30384, 30770, 31007, 31022, 38756, 40621],
    "nài": [22856, 26608, 28223, 32784, 33816, 35110, 37692, 40720],
    "quān juàn": [22861, 24366, 26860],
    "zòu": [22863, 25549],
    "qì qiè xiè": [22865],
    "kāi": [22866, 24320, 25577, 37926, 38158, 38283],
    "bēn bèn": [22868, 27853],
    "tào": [22871],
    "zàng zhuǎng": [22872],
    "běn": [22873, 26412, 26957, 30042, 32713, 33519],
    "xùn zhuì": [22878],
    "shē": [22882, 27304, 29470, 30061, 30066, 36050, 36054, 36170, 36619],
    "hǎ pò tǎi": [22884],
    "ào yù": [22885, 22887, 28570],
    "yūn": [22891, 27698, 27699, 33920, 33941, 34681, 36103, 36191],
    "duǒ chě": [22898],
    "nǚ rǔ": [22899],
    "nú": [22900, 23397, 31535, 39377, 39549],
    "dīng dǐng tiǎn": [22901],
    "tā jiě": [22905],
    "nuán": [22907],
    "hǎo hào": [22909],
    "fàn": [22911, 23310, 26805, 27726, 27867, 28412, 28714, 29359, 30024, 30421, 31541, 31684, 33539, 35337, 36009, 36137, 36588, 36669, 39151, 39152, 39277],
    "shuò": [22913, 25632, 26388, 27082, 28865, 29197, 30687, 33972, 37785, 37984, 38084],
    "fēi pèi": [22915],
    "wàng": [22916, 24536, 26106, 26395, 26402],
    "zhuāng": [22918, 22941, 23076, 24196, 24210, 26729, 26761, 27137, 31911, 31962, 33624, 33674, 35013, 35037],
    "mā": [22920, 23229],
    "fū yōu": [22923],
    "hài jiè": [22926],
    "dù": [22930, 22956, 26460, 27564, 28193, 31226, 33423, 33648, 34713, 34855, 34873, 37709, 38208, 38767],
    "miào": [22937, 24217, 24255, 24287, 29573, 31447],
    "fǒu pēi pī": [22938],
    "yuè jué": [22940],
    "niū": [22942],
    "nà nàn": [22944],
    "tuǒ": [22949, 23287, 24249, 26925, 26965, 27234, 39692, 39958, 40270],
    "wàn yuán": [22951],
    "fáng": [22952, 25151, 32938, 38450, 39796, 40066],
    "nī": [22958],
    "zhóu": [22959, 30881],
    "zhāo": [22961, 24054, 25307, 26157, 37335, 37450, 37731, 38026, 39371],
    "nǎi nǐ": [22963],
    "tǒu": [22965, 25960, 32015, 34339, 40648],
    "xián xuán xù": [22966],
    "zhí yì": [22967, 31175],
    "ē": [22968, 22975, 23104, 23641],
    "mèi": [22969, 23194, 23504, 25274, 26048, 26151, 27820, 29021, 30167, 30491, 30584, 31065, 31683, 34654, 34946, 36298, 39741, 39749],
    "qī qì": [22971],
    "xū xǔ": [22977, 31280],
    "shān shàn": [22989, 22999, 33515, 37348, 38032],
    "mán": [22991, 24946, 27168, 34542, 34875, 35646, 39237, 39314, 39703, 39704, 39995, 40151],
    "jiě": [22992, 23182, 27294, 27601, 39159],
    "wěi wēi": [22996],
    "pīn": [23e3, 25340, 30999, 31334, 39338, 39518],
    "huá huó": [23009],
    "jiāo xiáo": [23011],
    "gòu dù": [23012],
    "lǎo mǔ": [23013],
    "nián niàn": [23017],
    "zhěn": [23019, 23634, 24363, 25262, 26147, 26517, 30043, 30137, 30485, 31289, 32285, 32293, 32540, 32836, 33817, 34967, 35030, 35225, 35386, 35786, 36587, 36728, 36788, 39383, 39698],
    "héng": [23022, 24646, 24658, 28870, 29673, 33019, 34309, 34913, 37957, 40244, 40262, 40507],
    "jūn xún": [23024],
    "kuā hù": [23025],
    "è yà": [23030],
    "xiān shēn": [23034],
    "wá": [23043],
    "ráo rǎo": [23046, 23304],
    "shào shāo": [23051],
    "xiē": [23054, 25587, 26964, 27463, 34638, 34829],
    "wǔ méi mǔ": [23058],
    "chuò lài": [23061],
    "niáng": [23064, 23330, 23363],
    "nà nuó": [23068],
    "pōu bǐ": [23069],
    "něi suī": [23070],
    "tuì": [23079, 29050, 34555, 34581, 36864, 39422],
    "mǎn": [23080, 23640, 28288, 28385, 28415, 34728, 34766, 35156, 37835],
    "wú wù yú": [23082],
    "xī āi": [23085],
    "zhuì shuì": [23095],
    "dōng dòng": [23099],
    "ǎi ái è": [23102],
    "ē ě": [23103],
    "mián": [23106, 23349, 23424, 26467, 26825, 27312, 27339, 30496, 30664, 30666, 30671, 32191, 32220, 32501, 33415, 34642],
    "pǒu péi bù": [23108],
    "biǎo": [23114, 33087, 34920, 35057, 35134, 35544, 37686],
    "fù fàn": [23119],
    "wǒ": [23120, 23121, 25105],
    "ní nǐ": [23127, 26879],
    "quán juàn": [23128, 24787],
    "hūn": [23130, 26127, 26156, 26836, 28093, 30567, 30575, 30856, 33636, 33911, 34066, 36683, 38333, 38413],
    "qiān jǐn": [23132],
    "wān wà": [23136],
    "lái lài": [23137, 24469, 24480],
    "zhōu chōu": [23140],
    "chuò nào": [23141],
    "nüè àn": [23145],
    "hùn kūn": [23147],
    "dàng yáng": [23160],
    "nàn": [23163],
    "ruò chuò": [23164],
    "jiǎ": [23165, 23724, 26010, 26013, 27022, 27098, 27295, 29630, 30002, 32987, 37440, 38078],
    "tōu yú": [23166, 23214],
    "yù yú": [23168],
    "wéi wěi": [23169],
    "dì tí": [23170, 29686, 33488],
    "róu": [23171, 25545, 26580, 28184, 29027, 29768, 29895, 31160, 31880, 31941, 33052, 33132, 33863, 34650, 36418, 36654, 37714, 38819, 39461, 39943, 40340],
    "ruǎn nèn": [23174],
    "miáo": [23180, 23289, 25551, 30596, 33495, 40339, 40523],
    "yí pèi": [23184],
    "mián miǎn": [23188],
    "tí shì": [23198, 24831],
    "duò tuó": [23200, 27826],
    "ǎo": [23210, 23228, 33401, 33466, 34948, 35158, 38266],
    "chú zòu": [23216],
    "yìng": [23221, 26144, 26254, 30828, 33185, 40038],
    "qín shēn": [23232],
    "jià": [23233, 24143, 26550, 27042, 31292, 39381, 39550],
    "sǎo": [23234],
    "zhēn zhěn": [23235],
    "jiē suǒ": [23237],
    "míng mǐng": [23239],
    "niǎo": [23243, 23325, 23346, 33553, 34086, 34949, 35018, 35117, 40479],
    "tāo": [23245, 24141, 24354, 24902, 25487, 25647, 27076, 28059, 28372, 28644, 29803, 32091, 32282, 32295, 32486, 35420, 35615, 36673, 38833, 38876, 38892, 39160, 39253],
    "biáo": [23249],
    "piáo piāo": [23254, 34232],
    "xuán": [23257, 24748, 25080, 26294, 27272, 28457, 29572, 29831, 29887, 30147, 34561],
    "màn mān": [23258],
    "kāng": [23261, 23931, 24247, 24951, 27130, 28462, 30730, 31301, 31968, 36543, 37870, 40007],
    "hān nǎn": [23272],
    "nèn": [23273, 23280],
    "zhē": [23276, 36974],
    "mā má": [23282],
    "piè": [23283],
    "zhǎn": [23288, 23637, 25612, 26025, 26028, 29718, 30415, 30430, 36670, 37254, 39085, 39120],
    "xiān yǎn jìn": [23312],
    "liǎn": [23322, 25947, 25986, 29711, 29833, 32695, 33080, 33225, 34105, 34333, 34334, 35043, 35165, 37179],
    "qióng huán xuān": [23323],
    "dǒng": [23326, 25026, 31677, 33891, 34155, 35532],
    "cān": [23328, 28236, 29208, 39137, 39184, 39490, 39574],
    "tiǎo": [23333, 23464, 26176, 26387, 31409, 33025],
    "bí": [23350, 33656, 40763],
    "liǔ": [23356, 26611, 26625, 26718, 26746, 27246, 29102, 29643, 32185, 32506, 32630, 32640, 37622, 38157],
    "qiān xiān": [23365, 27430],
    "xié huī": [23368],
    "huān quán": [23369],
    "lí lì": [23371, 40599],
    "zhú chuò": [23374],
    "kǒng": [23380, 24656],
    "mā zī": [23382],
    "sūn xùn": [23385, 23403],
    "bèi bó": [23387, 35478],
    "yòu niū": [23399],
    "zhuǎn": [23400, 31473, 36681],
    "hái": [23401, 39608],
    "nāo": [23404],
    "chán càn": [23409],
    "bò": [23417, 27287, 34327, 35666],
    "nái": [23419, 33097],
    "níng nìng": [23425, 23501, 23511, 23516, 23527, 29999],
    "zhái": [23429],
    "tū jiā": [23434],
    "sòng": [23435, 35359, 35494, 35772, 35829, 36865, 37817, 38924, 39042, 39224],
    "ròu": [23437, 32905, 35699],
    "zhūn": [23442, 31360, 34912, 35524, 35846, 36813],
    "mì fú": [23443],
    "dàng tàn": [23445],
    "wǎn yuān": [23451],
    "chǒng": [23456, 23541],
    "qún": [23469, 23790, 24108, 32675, 32676, 35033, 35040],
    "zǎi": [23472, 23869],
    "bǎo shí": [23474],
    "jiā jia jie": [23478],
    "huāng huǎng": [23482],
    "kuān": [23485, 23515, 23532, 33239, 37991, 39627, 39638],
    "sù xiǔ xiù": [23487],
    "jié zǎn": [23489],
    "bìng bǐng": [23502],
    "jìn qǐn": [23510],
    "lóu jù": [23520],
    "xiě xiè": [23531],
    "qīn qìn": [23540],
    "cùn": [23544, 31871],
    "duì": [23545, 23550, 23565, 24636, 24989, 25055, 28647, 28713, 30867, 31051, 32144, 34225, 35656, 35701, 36699, 38431, 38510],
    "lüè luó": [23549],
    "shè yè yì": [23556],
    "jiāng jiàng qiāng": [23558],
    "jiāng jiàng": [23559, 27974, 28479, 30074],
    "zūn": [23562, 23967, 27197, 32583, 36981, 37903, 40018, 40159, 40334, 40439],
    "shù zhù": [23564, 28557],
    "xiǎo": [23567, 26195, 26241, 26313, 30363, 30370, 31601, 31615, 31712, 35599],
    "jié jí": [23568, 35800, 38794],
    "shǎo shào": [23569],
    "ěr": [23570, 23571, 23572, 26670, 27622, 27953, 29246, 29669, 32819, 34238, 34888, 36272, 36841, 36999, 37498, 38098, 39180, 39285, 39404],
    "wāng yóu": [23586],
    "wāng": [23587, 23593, 23594, 23595, 27754],
    "liào": [23589, 23590, 24278, 25730, 26009, 28819, 31415, 37904, 38243],
    "méng máng lóng páng": [23592],
    "gà": [23596, 39744],
    "kuì kuǐ": [23599],
    "tuí": [23605, 24346, 31336, 34312, 36458, 38564, 38969, 38970, 38973, 39059, 39755],
    "yǐn": [23609, 23998, 24341, 26372, 27267, 27324, 27389, 28158, 28645, 30270, 30318, 31884, 34335, 34451, 34750, 35732, 36218, 36251, 36625, 37391, 38775],
    "chǐ chě": [23610],
    "kāo": [23611, 39643],
    "jìn jǐn": [23613],
    "wěi yǐ": [23614],
    "niào suī": [23615],
    "céng": [23618, 23652, 23954, 39507],
    "diǎo": [23628],
    "bīng píng bǐng": [23631],
    uu: [23639, 26338, 32833, 34418, 34634, 38375],
    "lòu": [23642, 28431, 30232, 30266, 30267, 37860, 38210, 38475],
    "shǔ zhǔ": [23646, 23660],
    "xiè tì": [23647],
    "chè cǎo": [23662],
    "tún zhūn": [23663],
    "nì jǐ": [23664],
    "hóng lóng": [23672],
    "qǐ kǎi": [23682, 35912],
    "áng": [23687, 26114, 26171],
    "gǎng gāng": [23703, 23831],
    "kě": [23714, 25956, 28167, 28212, 28835],
    "gǒu": [23715, 29399, 29629, 31537, 32775, 32776, 32777, 33503, 35967],
    "tiáo": [23719, 23737, 27172, 31058, 31524, 33408, 33812, 34010, 34024, 34601, 36834, 37594, 37797, 38807, 39659, 39880, 39991, 40102, 40800, 40838],
    "qū jū": [23720],
    "lǐng": [23725, 23994, 38936, 39046],
    "pò": [23734, 25920, 27942, 28240, 28894, 29632, 30772, 30774, 31893, 33962, 39748],
    "bā kè": [23751],
    "luò": [23752, 25694, 27931, 27932, 29334, 29662, 31551, 32409, 33638, 35451, 38610, 39409, 39558, 40261],
    "fù niè": [23754],
    "ěn": [23758],
    "zhì shì": [23769, 23867],
    "qiǎ": [23776, 36306, 37216, 38800],
    "qiáo jiào": [23780, 30276],
    "xié yé": [23787],
    "bū": [23788, 24239, 26209, 35495, 36875, 37437, 37691, 38072, 39188, 40271],
    "chóng": [23815, 23816, 29214, 34411, 34665, 34802, 35080, 38528],
    "zú cuì": [23826, 26890],
    "líng léng": [23834],
    "dòng dōng": [23840],
    "xiáo": [23844, 27944, 28102, 35364, 35509],
    "pí bǐ": [23845, 33432],
    "zhǎn chán": [23853, 23939, 23940],
    "wǎi wēi": [23860],
    "yáng dàng": [23861],
    "shì dié": [23868],
    "yào": [23870, 26332, 29070, 29183, 30661, 31358, 31380, 31556, 32768, 33374, 33647, 33903, 34220, 34277, 34958, 35230, 35407, 35729, 38783, 40386, 40542, 40764],
    "kān zhàn": [23873],
    "hán dǎng": [23877],
    "qiàn kàn": [23884],
    "wù máo": [23885],
    "kě jié": [23889, 23985],
    "wēi wěi": [23892],
    "kē": [23897, 26607, 26869, 27068, 27158, 29249, 29297, 29328, 29634, 30132, 30604, 30933, 31002, 31185, 31262, 31392, 33834, 34198, 34485, 34636, 36279, 36722, 37272, 37427, 38070, 38950, 38982, 39063, 39617],
    "dàng táng": [23907],
    "róng yíng": [23908, 29187],
    "ái kǎi": [23910],
    "kāo qiāo": [23914],
    "cuó": [23919, 23923, 30180, 30700, 33963, 34070, 34392, 40570, 40574],
    "qiǎn qīn": [23920],
    "dì dié": [23933],
    "cēn": [23934],
    "dǐng": [23935, 33404, 34209, 37924, 38914, 39030, 40718, 40721],
    "áo ào": [23941],
    "pǐ pèi": [23951],
    "jiào qiáo": [23968, 28496],
    "jué guì": [23969, 40156],
    "zhān shàn": [23974, 40163],
    "xiè jiè": [23984],
    "guī xī juàn": [23986],
    "rū": [23999],
    "lì liè": [24001, 26841, 29188, 32159],
    "xī guī juàn": [24002],
    "yíng hōng": [24006],
    "yǐng": [24010, 24302, 24433, 25708, 26796, 28481, 30271, 30317, 30696, 31310, 37090, 37915, 38964, 39053, 39061, 39062],
    "chǎo": [24016, 28818, 29052, 30503, 40616],
    "cuán": [24017, 27349, 27409],
    "chuān": [24027, 24029, 27674, 29775, 31359],
    "jīng xíng": [24032],
    "cháo": [24034, 24035, 26177, 28421, 28526, 29258, 31410, 32634, 35647, 36680, 37147, 40716],
    "qiǎo": [24039, 24832, 39644],
    "gǒng": [24041, 24318, 25329, 25330, 26673, 27742, 29657, 36609, 38799],
    "chà chā chāi cī": [24046],
    "xiàng hàng": [24055],
    "shuài": [24069, 24101, 34752],
    "pà": [24074, 24085, 24597, 34969],
    "tǎng nú": [24081],
    "mò wà": [24083],
    "tiē tiě tiè": [24086],
    "zhǒu": [24090, 26221, 30107, 30573, 31634, 32920, 33783, 39902],
    "juǎn juàn": [24099],
    "shuì": [24104, 28055, 28058, 30561, 31237, 31246, 35038],
    "chóu dào": [24113, 24172],
    "jiǎn jiān sàn": [24116],
    "shà qiè": [24121],
    "qí jì": [24122, 33632],
    "shān qiāo shēn": [24147],
    "zhuàng chuáng": [24162],
    "chān chàn": [24168],
    "miè": [24173, 25073, 25635, 28357, 28781, 28885, 31011, 31742, 34065, 34190, 34843, 34890, 37974, 40052, 40211],
    "gān gàn": [24178],
    "bìng bīng": [24182, 24183],
    "jī jǐ": [24190],
    "guǎng ān": [24191],
    "guǎng": [24195, 24291, 29367, 29559],
    me: [24197],
    "dùn tún": [24201],
    "bài tīng": [24205],
    "yìng yīng": [24212],
    "dǐ de": [24213],
    "dù duó": [24230],
    "máng méng páng": [24236],
    "bìng píng": [24240],
    "chěng": [24241, 24732, 30536, 36894, 39425, 39563],
    "jī cuò": [24244],
    "qǐng": [24252, 24270, 27326, 28416, 33496, 35531, 35622, 35831, 38915, 39031],
    "guī wěi huì": [24262],
    "jǐn qín": [24273],
    "kuò": [24275, 25193, 25313, 25844, 28662, 31560, 33855, 33856, 34526, 38346, 38420, 38697, 38815, 38841, 38869, 38946, 39712],
    "qiáng sè": [24295, 34196],
    "yǐn yìn": [24308, 38544, 38560, 38577, 39150, 39154, 39278],
    "pò pǎi": [24313, 36843],
    "nòng lòng": [24324],
    "dì tì tuí": [24351],
    "jué zhāng": [24353],
    "mí mǐ": [24357, 24396, 38753],
    "chāo": [24360, 24586, 25220, 27433, 35372, 36229, 37396, 38046],
    yi: [24364],
    "shāo": [24368, 26067, 28903, 28988, 29138, 31602, 33348, 33847, 34161, 36622, 39678, 39865],
    "xuān yuān": [24370],
    "qiáng qiǎng jiàng": [24375, 24378],
    "tán dàn": [24377, 37256],
    "biè": [24390],
    "qiáng jiàng qiǎng": [24394],
    "jì xuě": [24400],
    "tuàn": [24406, 35094],
    "yuē": [24415, 26352, 26353, 30705],
    "shān xiǎn": [24417],
    "wén": [24419, 25991, 28806, 29683, 30226, 32359, 32862, 33440, 34441, 34442, 34721, 34753, 38330, 38335, 38341, 38374, 38395, 38412, 38639, 39356, 39367, 39792, 40188, 40205, 40740],
    "péng bāng": [24429],
    "piāo piào": [24431],
    "zhuó bó": [24436],
    "tuǒ yí": [24437],
    "páng fǎng": [24439],
    "wǎng": [24442, 24448, 24451, 24792, 26505, 26850, 32178, 32593, 32594, 32595, 32596, 32598, 33781, 34535, 34628, 35511, 36638, 36747, 39757],
    "cú": [24450, 27522],
    "dài dāi": [24453],
    "huái": [24458, 24576, 25040, 25079, 27088, 28142, 32818, 34361, 35106, 35121, 36381],
    "wā wàng jiā": [24461],
    "chěng zhèng": [24462],
    "dé děi de": [24471],
    "cóng zòng": [24478],
    "shì tǐ": [24485],
    "tí chí": [24498, 40343, 40345],
    "dé": [24499, 24503, 24692, 24755, 24810, 28098, 37696, 38173],
    "zhǐ zhēng": [24500, 24501],
    "bié": [24502, 30335, 33666, 34498, 35154, 36457],
    "chōng zhǒng": [24504],
    "jiǎo jiào": [24508, 31493, 31562],
    "lòng lǒng": [24511],
    "qú jù": [24514, 28192, 30655, 34742],
    "dìng tìng": [24522],
    "gǎi": [24523, 25913],
    "rěn": [24525, 26656, 26659, 31225, 31252, 32155, 33615, 33653, 36533],
    "chàn": [24527, 25076, 25082, 30815, 32700, 38850, 39019],
    "tè": [24529, 24925, 29305, 34776, 37617, 38141],
    "tè tēi tuī": [24530],
    "gān hàn": [24531, 25916],
    "yì qì": [24532],
    "tài shì": [24533],
    "xī liě": [24538],
    "yīng yìng": [24540, 25033, 35661],
    "mǐn wěn mín": [24542, 24543],
    "sōng zhōng": [24554],
    "yù shū": [24556, 24710],
    "qí shì": [24559, 32774],
    "tún zhūn dùn": [24563],
    "qián qín": [24564, 25202],
    "hún": [24566, 27985, 28222, 39195, 39300, 39746, 40754],
    "niǔ": [24568, 25197, 28804, 29379, 32016, 32445, 33701, 37397, 38062, 38773],
    "kuáng wǎng": [24569],
    "kāng hàng": [24572],
    "kài xì": [24574, 24894],
    "òu": [24580, 24938],
    "bǎo bào": [24585],
    "mín mén": [24587],
    "zuò zhà": [24589],
    "zěn": [24590],
    "yàng": [24591, 24665, 26679, 27096, 27171, 28478, 32661, 35399],
    "kòu jù": [24592],
    "náo niú": [24595],
    "zhēng zhèng": [24596, 25497, 38066, 38126],
    "tiē zhān": [24599],
    "hù gù": [24600],
    "cū jù zū": [24602],
    "sī sāi": [24605],
    "yóu chóu": [24606],
    "tū dié": [24610],
    "yōu yào": [24622],
    "xuàn": [24624, 26145, 26982, 27883, 28210, 28843, 29700, 30505, 30905, 32098, 32316, 32335, 32474, 34073, 34898, 34984, 36121, 37449, 37831, 38089, 38239, 39092],
    "xù xuè": [24628],
    "bì pī": [24630],
    "xī shù": [24632],
    "nèn nín": [24641],
    "tiāo yáo": [24652],
    "xī qī xù": [24659],
    "xiào jiǎo": [24660],
    "hū kuā": [24663],
    "nǜ": [24679, 26386, 34882, 34884],
    "hèn": [24680],
    "dòng tōng": [24683],
    "quán zhuān": [24686],
    "è wù ě wū": [24694, 24801],
    "tòng": [24696, 24927, 24965, 30171, 34901],
    "yuān juàn": [24705],
    "qiāo qiǎo": [24708],
    "jiè kè": [24712],
    "hào jiào": [24718],
    "huǐ": [24724, 27283, 27584, 27585, 27591, 29164, 35693],
    "mán mèn": [24727, 38804],
    "yī yì": [24728, 34915],
    "quān": [24731, 31646, 37897],
    "kuī lǐ": [24733],
    "yì niàn": [24741],
    "mèn mēn": [24758],
    "guàn": [24761, 24762, 24815, 24931, 25532, 25692, 27148, 27423, 27892, 28075, 28485, 28748, 29215, 29912, 30437, 31030, 31100, 32582, 32592, 36011, 36143, 36480, 36966, 37830, 38005, 40057, 40475, 40563],
    "kōng kǒng": [24766],
    "lǔn lùn": [24768],
    "guǒ": [24776, 26524, 26881, 27112, 31935, 32182, 33747, 34622, 35065, 35073, 36640, 39196, 39299],
    "yuān wǎn": [24780, 31650],
    "lán lín": [24783],
    "yù xù": [24784, 28130],
    "chuò chuì": [24793],
    "hūn mèn": [24795],
    "chǎng tǎng": [24797],
    "suǒ ruǐ": [24802],
    "cǎn": [24808, 24920, 25007, 40682, 40690],
    "cán": [24813, 24921, 24922, 27531, 27544, 34453, 34629, 34870, 34874],
    "dàn dá": [24814, 24986],
    "rě": [24825],
    "yú tōu": [24841],
    "kài qì": [24850],
    "dàng táng shāng yáng": [24851],
    "chén xìn dān": [24854],
    "kè qià": [24856],
    "nuò": [24862, 25062, 25063, 25535, 25638, 27026, 31276, 31332, 31953, 31973, 31983, 35582, 35834, 36419, 36925, 37737, 38168],
    "gǎn": [24863, 25792, 25954, 26751, 27204, 28553, 28600, 30383, 31174, 31240, 31540, 33417, 34918, 36214, 36245, 40036, 40161],
    "còng sōng": [24865],
    "sāi sī sǐ": [24866],
    "gōng gòng hǒng": [24873, 24912],
    "shuò sù": [24876, 27948],
    "yáo yào": [24878],
    "huàng": [24880, 26306, 27045, 28361, 30365, 30377, 37796],
    "zhěng": [24888, 25229, 25327, 25972, 26232],
    "cǎo": [24890, 33400, 33609, 39474],
    "xì xié": [24896],
    "cǎo sāo": [24901],
    "xù chù": [24905],
    "qiè qiàn": [24906],
    "cáo cóng": [24914],
    "ào áo": [24928],
    "lián liǎn": [24937, 26815, 27108, 27363],
    "jìn qín jǐn": [24940],
    "dì chì": [24952],
    "zhí zhé": [24953],
    "lóu lǚ": [24954, 40412],
    "còng": [24961, 35621],
    "zhī zhì": [24964, 30693, 32340, 32455],
    "chēng": [24966, 25690, 25744, 25745, 26239, 26621, 26854, 27221, 27273, 27871, 28030, 29732, 30624, 30848, 32253, 32585, 34511, 34806, 36202, 36204, 37887, 37923, 38455, 38743, 38963, 39251],
    "biē": [24971, 34380, 40009, 40150, 40712, 40862],
    "chéng dèng zhèng": [24981],
    "xǐ xī": [24984],
    "duì dùn tūn": [24990],
    "xiāo jiāo": [24994],
    "xián xiàn": [25002],
    "liáo liǎo": [25005, 29134, 29198, 29202],
    "shéng": [25012, 32260, 32329, 32361, 32499, 35677],
    "náo nǎo náng": [25017],
    "jǐng jìng": [25020],
    "jǐ jiǎo": [25023],
    "xuān huān": [25025],
    "cǎo sāo sào": [25030],
    "mèn": [25041, 25059, 26282, 28950, 29148],
    "mèng méng měng": [25052],
    "ài yì nǐ": [25053],
    "méng měng": [25054, 30626, 30674],
    "qí jī jì": [25056],
    "mǒ": [25057],
    "lán xiàn": [25058],
    "yōu yǒu": [25070],
    "liú liǔ": [25072, 34288],
    "ràng": [25081, 35698, 35731, 35753],
    "huān": [25085, 27426, 27475, 27489, 29566, 35737, 35995, 37188, 39529, 40197, 40269],
    "nǎn": [25089, 25543, 28275, 29045, 33129, 34683, 36199],
    "mí mó": [25090],
    "gàng zhuàng": [25093, 25094],
    "zhuàng gàng": [25095],
    "qu xū": [25100],
    "xì hū": [25103, 25135, 25138],
    "jiá gā": [25115],
    "zéi": [25117, 34824, 36042, 36156, 39938, 40033, 40087],
    "děng": [25125, 31561],
    "hū xì": [25137],
    "chuō": [25139, 36372, 36916],
    "biǎn piān": [25153],
    "shǎng jiōng": [25156],
    "shàn shān": [25159],
    "cái": [25165, 26448, 32404, 35009, 36001, 36130],
    "zhā zā zhá": [25166],
    "lè lì cái": [25168],
    "bā pá": [25170],
    "dǎ dá": [25171],
    "rēng": [25172],
    "fǎn fú": [25173],
    "diǎo dí yuē lì": [25178],
    "káng gāng": [25179],
    "yū wū": [25180],
    "yū wū kū": [25181],
    "tuō chǐ yǐ": [25185],
    "gǔ jié xì gē": [25186],
    "dèn": [25189, 25213],
    "sǎo sào": [25195, 25475],
    "rǎo": [25200, 25854, 38562],
    "xī chā qì": [25201],
    "bān pān": [25203],
    "bā ào": [25207],
    "xī zhé": [25208],
    "zhì sǔn kǎn": [25211],
    "zhǎo": [25214, 27836, 29813],
    "kuáng wǎng zài": [25218],
    "hú gǔ": [25223, 40516, 40536],
    "bǎ bà": [25226],
    "dǎn shěn": [25228],
    "nè nì ruì nà": [25232],
    "zhuā": [25235, 27291, 31803, 33212, 39677],
    "póu": [25236, 35026],
    "zhé shé zhē": [25240],
    "póu pōu fū": [25241, 25418],
    "pāo": [25243, 25291, 33068, 33826],
    "ǎo ào niù": [25245],
    "lūn lún": [25249, 25476],
    "qiǎng qiāng chēng": [25250],
    "zhǐ zhǎi": [25255],
    "bù pū": [25258, 26600],
    "yǎo tāo": [25261],
    "hē hè qiā": [25266],
    "nǐ ní": [25267],
    "pī pēi": [25271],
    "mǒ mò mā": [25273],
    "chōu": [25277, 29352, 29355, 30259, 31704],
    "jiā yá": [25281],
    "fú bì": [25282, 30032, 40349],
    "zhǎ": [25283, 30504, 30751, 39866, 40093],
    "dān dàn dǎn": [25285],
    "chāi cā": [25286],
    "niān": [25288, 34091],
    "lā lá lǎ là": [25289],
    "bàn pàn": [25292],
    "pāi": [25293],
    "līn": [25294],
    "guǎi": [25296, 26548, 26618],
    "tuò tà zhí": [25299],
    "ào ǎo niù": [25303],
    "jū gōu": [25304],
    "pīn pàn fān": [25306],
    "bài bái": [25308],
    "bài": [25309, 25943, 31255, 31930, 34221, 36097, 36133, 38875],
    "qiá": [25316],
    "nǐng níng nìng": [25319],
    "zé zhái": [25321, 25799],
    "hén": [25323, 30165, 38798],
    "kuò guā": [25324],
    "jié jiá": [25326],
    "nǐn": [25328],
    "shuān": [25332, 26643, 38274, 38377],
    "cún zùn": [25333],
    "zā zǎn": [25334, 26714],
    "kǎo": [25335, 25911, 26674, 28900, 32771],
    "yí chǐ hài": [25336],
    "cè sè chuò": [25338],
    "zhuài zhuāi yè": [25341],
    "shí shè": [25342],
    "bāi": [25344, 25520],
    "kuò guāng": [25348],
    "nòng": [25354, 25397, 40776],
    "jiào jiāo": [25357, 25934, 25945],
    "kuà kū": [25358],
    "ná rú": [25360],
    "tiāo tiǎo": [25361],
    "dié shè": [25365],
    "liě": [25368, 27615],
    "yà yǎ": [25372, 25495],
    "wō zhuā": [25373],
    "xié jiā": [25375, 25406],
    "dǎng dàng": [25377, 25803],
    "zhèng zhēng": [25379, 27491, 30151],
    "āi ái": [25384],
    "tuō shuì": [25385, 25437],
    "tǐ tì": [25390],
    "suō shā": [25393],
    "sā shā suō": [25394],
    "kēng qiān": [25395, 25724],
    "bàng péng": [25399],
    "ruó ruá": [25404],
    "jiǎo kù": [25409],
    "wǔ wú": [25410],
    "tǒng": [25413, 26742, 31570, 31593, 32113, 32130, 32479],
    "huò chì": [25415],
    "tú shū chá": [25416],
    "lǚ luō": [25419],
    "shāo shào": [25422, 31245],
    "niē": [25423, 25553],
    "shù sǒng sōu": [25426],
    "yé yú": [25427],
    "jué zhuó": [25428],
    "bù pú zhì": [25431],
    "zùn": [25432, 37516],
    "lāo": [25438, 25736, 31913],
    "sǔn": [25439, 25613, 27051, 31499, 31565, 31664, 37800, 38588],
    "wàn wǎn wān yù": [25445],
    "pěng": [25447, 28110, 30351],
    "shě": [25448],
    "fǔ fù bǔ": [25452],
    "dáo": [25455],
    "luò luǒ wǒ": [25456],
    "juǎn quán": [25458],
    "chēn tiǎn": [25461],
    "niǎn niē": [25467],
    "ruó wěi ré": [25468],
    "zuó": [25469, 26152, 31208, 31251, 31600, 33675, 37436],
    "wò xiá": [25470],
    "qìng qiàn": [25477],
    "póu pǒu": [25482],
    "qiā": [25488, 33884],
    "pái pǎi": [25490],
    "qiān wàn": [25492],
    "yè yē": [25494],
    "niè nǐ yì": [25500],
    "huò xù": [25501],
    "yàn shàn yǎn": [25502],
    "zhěng dìng": [25503],
    "kòng": [25511, 38810],
    "tuī": [25512, 34039, 34284],
    "zōu zhōu chōu": [25515],
    "tiàn": [25517, 33306],
    "kèn": [25519, 35017, 35075],
    "pá": [25521, 26487, 28502, 29228, 29750, 31586],
    "guó guāi": [25524],
    "dǎn shàn": [25528, 25763],
    "chān xiān càn shǎn": [25530],
    "sāo": [25531, 25620, 28318, 32325, 32555, 34726, 39442, 39479, 39968, 40034, 40139],
    "pèng": [25533, 26922, 27120, 30896, 36395],
    "zhēng kēng": [25537],
    "jiū yóu": [25538],
    "jiān jiǎn": [25539, 31835],
    "pì chè": [25546],
    "sāi zǒng cāi": [25548],
    "tí dī dǐ": [25552],
    "zǒng sōng": [25556],
    "huáng yóng": [25560],
    "zǎn zuàn": [25565],
    "xū jū": [25567],
    "ké qiā": [25570],
    "chuāi chuǎi chuài tuán zhuī": [25571],
    "dì tì": [25573],
    "lá là": [25574],
    "là": [25575, 26955, 28290, 29902, 30220, 32715, 33240, 34635, 34674, 34847, 36770, 36771, 37982, 38260, 39694, 39931],
    "jiē qì": [25581],
    "chòng dǒng": [25584],
    "dié shé yè": [25586],
    "jiàn qián jiǎn": [25589],
    "yé": [25590, 29239, 29242, 29784, 37603, 37761, 38104],
    "chān": [25600, 25723, 25881, 35047, 35164, 35224, 35271, 36799, 37587],
    "gē gé": [25601, 25841],
    "lǒu lōu": [25602, 25695],
    "chōu zǒu": [25610],
    "chuāi": [25611],
    "sūn": [25614, 27074, 29426, 29499, 33642, 33984, 34165, 34206, 39143, 39153],
    "róng náng nǎng": [25617],
    "péng bàng": [25618],
    "cuō": [25619, 29811, 30923, 36425, 36979, 37277],
    "kē è": [25621],
    "nù nuò nòu": [25625],
    "lā xié xiàn": [25626],
    "qiǔ": [25629, 31959],
    "xiǎn xiān": [25631],
    "jié zhé": [25641],
    "pán bān pó": [25643],
    "bān": [25644, 25917, 26001, 26002, 29677, 30242, 30285, 32934, 34689, 34700, 35113, 36780, 38930, 39041],
    "zhì nái": [25649],
    "wā wǎ wà": [25650],
    "huá": [25651, 25782, 28369, 29502, 34128, 34710, 35649, 37877, 38119, 39498, 39557, 40424],
    "qiāng qiǎng chēng": [25654],
    "tián shēn": [25655],
    "ná nuò": [25659],
    "èn": [25665],
    "shè niè": [25668, 25885],
    "bìn": [25672, 25839, 27553, 27567, 33169, 33231, 39628, 39637, 39657, 39682, 39699, 39714],
    "shā sà shǎi": [25675],
    "chǎn sùn": [25676],
    "jiū liú liáo jiǎo náo": [25678],
    "féng pěng": [25683],
    "shuāi": [25684],
    "dì tú zhí": [25685],
    "qì jì chá": [25686],
    "sōu sǒng": [25687],
    "liǎn liàn": [25689],
    "gài xì": [25697],
    "hù chū": [25698],
    "tàng": [25701, 28907, 29145, 37899],
    "nái zhì": [25704],
    "mó mā": [25705],
    "jiāng qiàng": [25706],
    "áo qiáo": [25710],
    "niè chè": [25712],
    "mán màn": [25713],
    "chàn cán": [25714],
    "sè mí sù": [25717],
    "biāo biào": [25725],
    "juē jué": [25733],
    "piē": [25734, 26300, 27669, 30629],
    "piě piē": [25735],
    "zǎn zān zēn qián": [25741],
    "sā sǎ": [25746],
    "hòng": [25748, 35340, 35751, 38336, 39720],
    "héng guàng": [25751],
    "niǎn": [25754, 25781, 25862, 28042, 28990, 30910, 31760, 36429, 36456, 36494, 36646, 36743],
    "chéng zhěng": [25756],
    "huī wéi": [25757],
    "cāo": [25761, 25805, 31961],
    "xiāo sōu": [25768],
    "liáo liāo": [25769],
    "cuō zuǒ": [25774],
    "wěi tuǒ": [25777],
    "cuān": [25786, 25883, 27718, 36479, 36517, 38009, 38249],
    "qiào yāo jī": [25789],
    "zhuā wō": [25790],
    "lèi léi": [25794],
    "nǎng": [25795, 25902, 26345, 28770],
    "qíng jǐng": [25807],
    "kuǎi": [25811, 33967],
    "pǐ bò": [25815],
    "bò bāi": [25816],
    "jù jǐ": [25818],
    "mēng": [25821],
    "sǒu sòu": [25822],
    "xǐng": [25828, 31669, 37266],
    "cā": [25830],
    "níng nǐng nìng": [25840],
    "zhì jié": [25843],
    "là liè": [25848, 29193],
    "sòu sǒu": [25851],
    "lì luò yuè": [25853],
    "tī zhāi zhì": [25855],
    "pān": [25856, 28504, 30469, 33824],
    "lèi": [25858, 27882, 28057, 28122, 31159, 31867, 32391, 34353, 37241, 37511, 37649, 38939, 38954, 39006, 39075],
    "cā sǎ": [25859],
    "jùn pèi": [25864],
    "lì luò": [25866, 36498],
    "là lài": [25867, 27380],
    "lú luó": [25870],
    "zǎn cuán": [25874],
    "xiān jiān": [25877],
    "mí mǐ mó": [25888],
    "zǎn cuán zàn zuān": [25890],
    "zuàn": [25893],
    "lì shài": [25894],
    "lì luǒ": [25901],
    "guǐ guì": [25905],
    "jī qī yǐ": [25906],
    "fàng": [25918],
    "wù móu": [25924],
    "chù shōu": [25930],
    "gé guó è": [25931],
    "duó duì": [25939, 25946],
    "duō què": [25952, 25962],
    "sàn sǎn": [25955],
    "dūn duì": [25958, 38246],
    "qī yǐ jī": [25959],
    "xiào xué": [25961],
    "shù shǔ shuò": [25968, 25976],
    "ái zhú": [25969, 25971],
    "xiòng xuàn": [25979],
    "zhuó zhú": [25984],
    "yì dù": [25985],
    "lí tái": [25988],
    "fěi fēi": [26e3],
    "yǔ zhōng": [26004],
    "dòu dǒu": [26007],
    "wò guǎn": [26017],
    "tǒu tiǎo": [26018],
    "dòu": [26019, 26794, 28002, 30168, 31398, 31431, 33072, 33651, 35910, 36887, 37078, 37208, 38295, 38360, 39190, 39294, 39717, 39718, 39722, 39724, 39725],
    "yín zhì": [26022],
    "chǎn jiè": [26042],
    "wū yū yú": [26044],
    "yóu liú": [26047],
    "páng bàng": [26049],
    "máo mào": [26052],
    "pī bì": [26055],
    "xuán xuàn": [26059],
    "wú mó": [26080],
    "zǎo": [26089, 26531, 26630, 26839, 28577, 29866, 34235, 34299, 34468],
    "gā": [26094],
    "gàn hàn": [26096],
    "tái yīng": [26098],
    "xū xù": [26100],
    "tūn zhùn": [26109],
    "wù wǔ": [26111],
    "pò pèi": [26146],
    "zòng": [26158, 29460, 30125, 30258, 31933, 31945, 31981, 32294],
    "ǎi": [26169, 27600, 30702, 34108, 34297, 35690, 36535, 38701, 38724],
    "huàng huǎng": [26179],
    "xuǎn": [26181, 30307, 30316, 36873, 36984],
    "xù kuā": [26183],
    "hǒng": [26190],
    "shài": [26194, 26348],
    "yūn yùn": [26197, 29044],
    "shèng chéng": [26207, 26889, 30427],
    "jǐng yǐng": [26223],
    "shǎn": [26225, 29068, 30546, 35234, 38275, 38378, 38485, 38493],
    "qǐ dù": [26229],
    "ǎn àn yǎn": [26235],
    "wǎng wàng": [26240],
    "zàn": [26242, 26283, 29897, 29906, 29914, 31158, 35192, 35715, 35738, 36059, 36106, 36190, 36436, 37180, 37694, 37864, 39265],
    "yùn yūn": [26248],
    "mín mǐn": [26251],
    "dǔ shǔ": [26255],
    "shǔ": [26257, 26329, 28539, 30297, 31980, 32626, 34213, 34223, 34295, 34560, 34868, 35169, 35177, 40042, 40048, 40653, 40736, 40737],
    "jiǎn lán": [26261],
    "nuǎn": [26262, 29015, 39210],
    "bào pù": [26292],
    "xī xǐ": [26303],
    "pù bào": [26333, 28689],
    "qū qǔ": [26354, 32054],
    "gèng gēng": [26356],
    "hū hù": [26358, 38653],
    "zēng céng": [26365, 27239],
    "céng zēng": [26366, 31474],
    "cǎn qián jiàn": [26369],
    "qiè hé": [26373],
    "bì pí": [26375, 31110, 31507, 35048],
    "yǒu yòu": [26377],
    "bān fén": [26380, 40187],
    "fú fù": [26381, 27921],
    "fěi kū": [26383, 32976],
    "qú xù chǔn": [26384],
    "juān zuī": [26392],
    "huāng máng wáng": [26394],
    "qī jī": [26399],
    "tóng chuáng": [26403, 27238],
    "zhá": [26413, 29264, 31642, 34491, 35671, 37720, 38113, 38296, 38392],
    "zhú shù shú": [26414],
    "shù shú zhú": [26415],
    "zhū shú": [26417],
    "pǔ pò pō piáo": [26420],
    "dāo tiáo mù": [26423],
    "guǐ qiú": [26425],
    "xiǔ": [26429, 28395, 28483, 31956],
    "chéng chēng": [26430],
    "zá": [26434, 27823, 30776, 35149, 38609, 38620, 38629, 38900],
    "yú wū": [26437],
    "gān gǎn": [26438],
    "chā chà": [26440],
    "shān shā": [26441],
    "cūn": [26449, 30388, 31476, 33189, 36358, 37032],
    "rèn ér": [26450, 26773],
    "sháo biāo": [26451],
    "dì duò": [26453, 26532],
    "gū gài": [26458],
    "yí zhì lí duò": [26461],
    "gàng gāng": [26464],
    "tiáo tiāo": [26465, 26781],
    "mà mǎ": [26473],
    "sì zhǐ xǐ": [26475],
    "yuán wán": [26476, 34454],
    "bèi fèi": [26478],
    "shū duì": [26488],
    "niǔ chǒu": [26491],
    "wò yuè": [26498, 33234],
    "máo": [26502, 27611, 27650, 28213, 29286, 30683, 32606, 33541, 33542, 34661, 34762, 36574, 37205, 37502, 37672, 38170, 39654, 40348],
    "pī mì": [26504],
    "àng": [26506, 30414, 37280],
    "fāng bìng": [26507],
    "hù dǐ": [26513],
    "xín": [26516, 35153, 37908, 39733],
    "yāo yǎo": [26518],
    "ě è": [26521],
    "zhī qí": [26525],
    "cōng zōng": [26526, 27141],
    "xiān zhēn": [26542],
    "tái sì": [26545],
    "gǒu jǔ gōu": [26552],
    "bāo fú": [26553],
    "yì xiè": [26555, 26663],
    "tuó duò": [26561, 39345, 39364, 39534],
    "yí duò lí": [26562],
    "nǐ chì": [26565],
    "pán bàn": [26568, 36312],
    "yǎng yàng yāng yīng": [26573],
    "fù fū fǔ": [26574],
    "bǎi bó bò": [26575],
    "mǒu": [26576],
    "sháo shào": [26582],
    "zhè": [26584, 27164, 27993, 28123, 34071, 34757, 36889, 40403, 40551],
    "yòu yóu": [26586, 27390],
    "guì jǔ": [26588],
    "zhà zuò": [26590],
    "dié zhì": [26595, 30512],
    "zhā zǔ zū": [26596],
    "chá zhā": [26597, 26619],
    "āo ào": [26602, 36586],
    "bā fú pèi bó biē": [26605],
    "duò zuó wù": [26606],
    "bì bié": [26610],
    "zhù chù": [26615],
    "bēi pēi": [26616],
    "shì fèi": [26617],
    "shān zhà shi cè": [26629],
    "lì yuè": [26638, 27359],
    "qì qiè": [26644, 30732],
    "qī xī": [26646, 36426],
    "guā kuò": [26653],
    "bīng bēn": [26655],
    "xiào jiào": [26657],
    "jiàn zùn": [26667, 35e3],
    "yǒu yù": [26671],
    "hé hú": [26680],
    "gēn": [26681, 36319],
    "zhī yì": [26682],
    "gé gē": [26684],
    "héng háng": [26689],
    "guàng guāng": [26692],
    "yí tí": [26699, 33617],
    "sāng": [26705, 26706, 27105],
    "jú jié": [26708],
    "yú móu": [26713],
    "ráo náo": [26721, 27208],
    "guì huì": [26727, 27292],
    "chén zhèn": [26733],
    "tīng yíng": [26735],
    po: [26738],
    "bèn fàn": [26739],
    "fēng fèng": [26747, 33873],
    "sù yìn": [26752],
    "tǐng tìng": [26755],
    "xuān juān xié": [26763],
    "tú chá": [26764],
    "āo yòu": [26766],
    "kuǎn": [26785, 27445, 27454, 27456],
    "shāo sào": [26786],
    "qín chén cén": [26787],
    "lí sì qǐ": [26793],
    "chān yán": [26804],
    "bīn bīng": [26809, 27103, 27315],
    "táo chóu dào": [26812],
    "cōng sōng": [26823],
    "gùn hùn": [26829],
    "dé zhé": [26831],
    "pái bèi pèi": [26833],
    "bàng pǒu bèi bēi": [26835],
    "dì dài tì": [26851],
    "sēn": [26862, 26926, 27118, 35138],
    "rěn shěn": [26863],
    "léng lēng líng": [26865],
    "fú sù": [26868],
    "zōu sǒu": [26871],
    "zōu": [26872, 31619, 32197, 35535, 35833, 37049, 37104, 37138, 37177, 38508, 39478, 39546, 39915, 40112, 40640, 40817, 40826],
    "zhào zhuō": [26873],
    "chēn shēn": [26877],
    "jiē qiè": [26884],
    "yǐ yī": [26885],
    "chóu zhòu diāo": [26886],
    "qiāng kōng": [26892],
    "zhuī chuí": [26894],
    "bēi pí": [26897],
    "mēn": [26906],
    "quān juàn quán": [26918],
    "duǒ chuán": [26927],
    "wěi huī": [26930],
    "jiǎ jiā": [26933],
    "hán jiān": [26935],
    "shèn zhēn": [26937],
    "yàn yà": [26939],
    "zhā chá": [26946],
    "guō kuǎ": [26951],
    "jí zhì": [26966],
    "kǔ hù": [26971],
    "yóu yǒu": [26978],
    "sǒng cōng": [26980],
    "yuán xuàn": [26981],
    "yǎng yàng yīng": [26983],
    "pián": [26985, 33020, 33089, 36038, 36417, 39394, 39432, 39560, 39615],
    "dié yè": [26986],
    "dùn shǔn": [26991],
    "còu zòu": [26993],
    "dì dǐ shì": [26996],
    "kǎi jiē": [26999],
    "róu ròu": [27002],
    "lè yuè": [27005],
    "wēn yùn": [27013, 38832],
    "lǘ": [27016, 27354, 27648, 33186, 34264, 38317, 38398, 39522, 39540],
    "shén": [27018, 31070, 37486, 39984],
    "bī pi": [27020],
    "zhǎn niǎn zhèn": [27024],
    "fú fù bó": [27025],
    "jiàn jìn": [27031],
    "bǎng bàng": [27036],
    "shā xiè": [27037, 27175],
    "nòu": [27080, 32808, 37778, 37918],
    "qiǎn lián xiàn": [27087],
    "gàng": [27091, 28981, 28985, 31611],
    "gāo": [27092, 27129, 27248, 27356, 30590, 31705, 31957, 32660, 33263, 38879, 39227, 39640, 39641, 40398, 40433, 40731],
    "diān zhěn zhēn": [27097],
    "kǎn jiàn": [27099],
    "xí dié": [27106],
    "jī guī": [27107],
    "róng yōng": [27110],
    "tuán shuàn quán": [27115],
    "qì sè": [27117],
    "cuī zhǐ": [27119],
    "yǒu chǎo": [27121],
    "màn wàn": [27134],
    "lí chī": [27142],
    "léi lěi": [27151, 27345, 30988],
    "cháo jiǎo chāo": [27156],
    "chēng táng": [27160],
    "jiū liáo": [27163],
    "mó mú": [27169],
    "niǎo mù": [27170],
    "héng hèng": [27178, 27243],
    "xuě": [27184, 33188, 33373, 36684, 38634, 40008, 40149],
    "fá fèi": [27203],
    "rùn": [27213, 28070, 28516, 33206, 38287, 38304, 38384],
    "zhǎn jiǎn": [27215],
    "shùn": [27219, 30618, 30636, 33308, 34147, 38918, 39034, 39690],
    "tuí dūn": [27220],
    "táng chēng": [27222],
    "sù qiū": [27226],
    "tán diàn": [27229],
    "fén fèn fèi": [27240],
    "rǎn yān": [27242],
    "cū chu": [27259],
    "shū qiāo": [27262],
    "píng bò": [27288],
    "zhái shì tú": [27297],
    "biǎo biāo": [27302],
    "qiān lián": [27318],
    "nǐ mí": [27319],
    "jiàn kǎn": [27323],
    "nòu ruǎn rú": [27325],
    "jī jì": [27333, 31144],
    "huǎng guǒ gǔ": [27342],
    "lǜ chū": [27350],
    "miè mèi": [27351],
    "ōu": [27353, 27431, 27472, 27572, 27590, 29935, 29964, 33170, 34290, 35635, 35764, 37826, 40206, 40407, 40485],
    "zhù zhuó": [27361],
    "jué jì": [27373],
    "huái guī": [27376],
    "chán zhàn": [27395],
    "wéi zuì": [27400],
    "cáng": [27404, 38006],
    "yù yì": [27429],
    "chù qù xì": [27434],
    "kài ài": [27436],
    "yì yīn": [27437],
    "xì kài": [27439],
    "shuò sòu": [27446],
    "ǎi ēi éi ěi èi": [27448],
    "qī yī": [27449],
    "chuā xū": [27451],
    "chǐ chuài": [27452],
    "kǎn qiàn": [27455],
    "kǎn kè": [27457],
    "chuǎn chuán": [27458],
    "yīn yān": [27461],
    "jìn qūn": [27471],
    "pēn": [27477],
    "xū chuā": [27480],
    "xī shè": [27481],
    "liǎn hān": [27483],
    "zhì chí": [27501],
    "sè shà": [27504],
    "sǐ": [27515],
    "wěn mò": [27518],
    "piǎo": [27533, 30379, 30623, 37285, 39008],
    "qíng jìng": [27537],
    "fǒu bó": [27541],
    "zhí shi": [27542],
    "yè yān yàn": [27543],
    "hūn mèi": [27545],
    "chòu": [27552, 33264, 36954],
    "kuì huì": [27560, 28291, 28528],
    "cuàn": [27561, 29110, 29224, 31388, 31428, 31713, 31762],
    "yīn yān yǐn": [27575],
    "qìng kēng shēng": [27576],
    "yáo xiáo xiào": [27581],
    "gū gǔ": [27586, 34500],
    "guàn wān": [27596],
    "dú dài": [27602],
    "xún xùn": [27621],
    "mú": [27626, 27649],
    "dòu nuò": [27629],
    "sāi suī": [27640],
    lu: [27655],
    "sào": [27657, 30233, 30658, 39646],
    "shì zhī": [27663],
    "dī dǐ": [27664],
    "máng méng": [27667],
    "yáng rì": [27676],
    "shuǐ": [27700, 27701, 27706, 38294],
    "zhěng chéng zhèng": [27702],
    "tǔn": [27709],
    "fán fàn": [27710],
    "guǐ jiǔ": [27711],
    "bīn pà pā": [27715],
    "zhuó què": [27723],
    "dà tài": [27727],
    "pìn": [27734, 29277, 32856],
    "hàn hán": [27735, 39343],
    tu: [27746],
    "tāng shāng": [27748, 28271],
    "zhī jì": [27749],
    "gàn hán cén": [27765],
    "wèn mén": [27766],
    "fāng pāng": [27768],
    "hǔ huǎng": [27771],
    "niú yóu": [27772],
    "hàng": [27782],
    "shěn chén": [27784],
    "dùn zhuàn": [27788],
    "nǜ niǔ": [27793],
    "méi mò": [27794, 27809],
    "tà dá": [27795],
    "mì wù": [27797],
    "hóng pāng": [27799],
    "shā shà": [27801],
    "zhuǐ zǐ": [27805],
    "ōu òu": [27812, 28442],
    "jǔ jù": [27822],
    "tuō duó": [27824],
    "mǐ lì": [27829],
    "yí chí": [27830],
    "xiè yì": [27844],
    "bó pō": [27850],
    "mì bì": [27852, 31192],
    "chù shè": [27855],
    "yōu yòu āo": [27857],
    "pēng píng": [27865, 30801],
    "pào pāo": [27873],
    "ní nì": [27877, 31196],
    "yuè sà": [27879],
    "jué xuè": [27884, 30118],
    "lóng shuāng": [27895, 28711],
    "luò pō": [27898, 28668],
    "zé shì": [27901, 28580],
    "sǎ xǐ": [27922],
    "sè qì zì": [27923],
    "xǐ xiǎn": [27927],
    "kǎo kào": [27928],
    "àn yàn è": [27933],
    "lěi lèi": [27937],
    "qiè jié": [27951],
    "qiǎn jiān": [27973],
    "jì jǐ": [27982, 28168, 28639, 32426],
    "hǔ xǔ": [27986, 28408],
    "jùn xùn": [27994, 28652],
    "yǐng chéng yíng": [28007],
    "liàn lì": [28016],
    "féng hóng": [28018, 28292],
    "jiǒng jiōng": [28027],
    "suī něi": [28029],
    "yǒng chōng": [28044],
    "tūn yūn": [28050],
    "wō guō": [28065, 28198],
    "hēng": [28069, 33053],
    "zhǎng zhàng": [28072, 28466],
    "shòu tāo": [28077],
    "shuàn": [28078, 33128],
    "kōng náng": [28083],
    "wò wǎn yuān": [28084],
    "tuō tuò": [28086],
    "wō": [28089, 29479, 31389, 31401, 33716, 33845, 34583, 34680, 36370],
    "qiè jí": [28097],
    "guǒ guàn": [28105],
    "lín lìn": [28107, 29532, 30084],
    "tǎng chǎng": [28108],
    "nào chuò zhuō": [28118],
    "péng píng": [28124],
    "féi": [28125, 32933, 33107, 34608],
    "pì pèi": [28128],
    "niǎn shěn": [28144],
    "biāo hǔ": [28146],
    "chún zhūn": [28147],
    "hùn hún": [28151],
    "qiǎn": [28154, 32382, 32561, 32951, 33153, 34616, 35700, 35892, 36963, 37971],
    "wèn mín": [28162],
    "rè ruò luò": [28163],
    "dú dòu": [28174, 28678, 35835],
    "jiàn jiān": [28176, 28293, 28472, 28666],
    "miǎn shéng": [28177, 28576],
    "nuǎn nuán": [28188],
    "qiú wù": [28190],
    "tíng tīng": [28191],
    "dì tí dī": [28199],
    "gǎng jiǎng": [28207],
    "hōng qìng": [28217],
    "tuān": [28237, 29011],
    "huì mǐn xū": [28239],
    "xǔ xù": [28241],
    "pén": [28243, 29931, 30406, 33872],
    "mǐn hūn": [28259],
    "tuàn nuǎn": [28266],
    "qiū jiǎo": [28267, 28268],
    "yān yīn": [28270],
    "bàn pán": [28276],
    "zhuāng hún": [28279],
    "yàn guì": [28302],
    "lián liǎn nián xián xiàn": [28307],
    "dá tǎ": [28314],
    "liū liù": [28316, 28561, 36435],
    "lùn": [28323],
    "mǎ": [28324, 29368, 29505, 29595, 29802, 30721, 30908, 36964, 37815, 39340, 39532, 39970, 40396],
    "zhēn qín": [28337],
    "nì niào": [28346],
    "chù xù": [28352, 30044],
    "wěng wēng": [28355],
    "hào xuè": [28360],
    "qì xì xiē": [28362],
    "xíng yíng": [28366],
    "zé hào": [28380],
    "piāo piào piǎo": [28418],
    "cóng sǒng": [28430],
    "féng péng": [28456],
    "luò tà": [28463],
    "pēng bēn": [28464],
    "chóng shuāng": [28468],
    "huǒ kuò huò": [28471],
    "liáo liú": [28475],
    "cuǐ cuī": [28476],
    "cóng zǒng": [28480],
    "cóng zōng": [28488],
    "pì piē": [28494],
    "dàng xiàng": [28498],
    "huáng guāng": [28514],
    "liáo lào lǎo": [28518],
    "cōng zòng": [28520],
    "zhí zhì": [28522],
    "tān shàn": [28524],
    "tú zhā": [28531],
    "sàn sǎ": [28533],
    "hēi": [28534, 40657, 40658],
    "chéng dèng": [28548, 28691],
    "cūn cún": [28554],
    "péng pēng": [28558],
    "hòng gǒng": [28562, 37566],
    "wàn màn": [28587],
    "kuài huì": [28590],
    "guō wō": [28612],
    "pēn fén": [28614],
    "jí shà": [28616],
    "huì huò": [28618],
    "dǐng tìng": [28622],
    "mǐ nǐ": [28628],
    "bì pì": [28638],
    "cuì zuǐ": [28642],
    "hù huò": [28649],
    "ǎi kài kè": [28653],
    "wěi duì": [28667, 28706],
    "zàn cuán": [28669, 28754],
    "yǎng yàng": [28673],
    "wǎng wāng": [28679],
    "mò miè": [28686, 30492],
    "suǐ": [28705, 33208, 39635],
    "huái wāi": [28708],
    "zùn jiàn": [28723],
    "yīng yǐng yìng": [28724],
    "ráng ràng": [28732],
    "shuàng": [28736],
    "zhuó jiào zé": [28738],
    "sǎ": [28753, 35375, 38776],
    "luán luàn": [28755],
    "dǎng tǎng": [28761],
    "xún quán quàn": [28773],
    "huǒ biāo": [28780],
    "zhà yù": [28793],
    "fén bèn": [28803],
    "jiǒng guì": [28805],
    "pàng fēng": [28816],
    "quē": [28820, 32570, 32572, 33947],
    "biān": [28830, 29048, 29954, 30765, 31550, 31663, 31849, 32232, 32534, 34649, 37001, 37002, 37757, 38829, 39934, 39935, 40138],
    "zhāo zhào": [28836],
    "zhuō chù": [28842],
    "pào páo bāo": [28846],
    "páo fǒu": [28848],
    "shǎn qián shān": [28854],
    "zhà zhá": [28856],
    "jiǎo yào": [28868],
    "quǎn": [28871, 29356, 29357, 30030, 32163, 32507, 34375],
    "yàng yáng": [28874],
    "lào luò": [28889],
    "huí huǐ": [28896],
    "rè": [28909, 29105],
    "fú páo": [28912],
    "xiè chè": [28914, 28942],
    "yàn shān": [28923],
    "hūn xūn": [28932],
    "kào": [28933, 29330, 37548, 38096, 38752, 39859, 39884, 40083],
    "juān yè": [28934],
    "jùn qū": [28940],
    "tāo dào": [28952],
    "chǎo jù": [28963],
    "wò ài": [28965],
    "zǒng cōng": [28967],
    "xī yì": [28972],
    "xìn xīn": [28974],
    "chāo zhuō": [28975],
    "xiǒng yīng": [28984, 28989],
    "kuǐ": [28995, 36332, 36446, 38925],
    "huī yùn xūn": [28999],
    "jiǎo qiāo": [29005],
    "qián shǎn shān": [29012],
    "xī yí": [29013],
    "shà shā": [29022],
    "yè zhá": [29024],
    "yáng yàng": [29036],
    "ēn yūn": [29054],
    "yūn yǔn": [29061],
    "hè xiāo": [29063],
    "xióng": [29066, 29067, 38596],
    "xūn xùn": [29071, 29195],
    "gòng": [29077, 36002, 36129],
    "liū": [29080],
    "cōng zǒng": [29084],
    "lù āo": [29085],
    "shú shóu": [29087],
    "fēng péng": [29090],
    "cuǐ suī": [29091],
    "tēng": [29093, 33199, 40735],
    "yùn yù": [29096],
    "áo āo": [29100],
    "hàn rǎn": [29103],
    "ōu ǒu": [29104],
    "huáng huǎng": [29119],
    "chǎn dǎn chàn": [29120],
    "jiāo zhuó qiáo jué": [29131],
    "yàn yān": [29141],
    "tài liè": [29156],
    "āo": [29194],
    "yàn xún": [29203],
    "jué jiào": [29213, 35216, 35226, 35258, 35273],
    "lǎn làn": [29222],
    "zhuǎ zhǎo": [29226],
    "zhǎo zhuǎ": [29227],
    "fù fǔ": [29238],
    "diē": [29241, 35130, 36300],
    "zāng": [29250, 32664, 33255, 36045, 36056, 36115, 36124, 36163, 39634],
    "piàn piān": [29255],
    "biān miàn": [29265],
    "bǎng": [29267, 32129, 32465],
    "yǒu yōng": [29271],
    "chēng chèng": [29274, 31424],
    "niú": [29275, 29276],
    "jiū lè": [29278],
    "mù móu": [29279],
    "māng": [29284],
    "gē qiú": [29291],
    "yòu chōu": [29296],
    "tè zhí": [29318],
    "bēn": [29319, 37659, 38171],
    "jiān qián": [29325, 29610],
    "má": [29336, 30194, 34100, 34759, 40635],
    "máo lí": [29339],
    "bá quǎn": [29358],
    "zhuó bào": [29363],
    "àn hān": [29364],
    "kàng gǎng": [29370],
    "pèi fèi": [29371],
    "fān huān": [29375],
    "kuáng": [29378, 29381, 35473, 35827, 36566, 36576, 40287],
    "yí quán chí": [29387],
    "xīng shēng": [29388],
    "tuó yí": [29391],
    "kǔ": [29404, 33510],
    "huán huān": [29407],
    "hé mò": [29410],
    "tà shì": [29415],
    "máng dòu": [29429],
    "xī shǐ": [29430],
    "suān": [29435, 30176, 37240],
    "bài pí": [29448],
    "jiān yàn": [29455, 35939],
    "yī yǐ": [29463],
    "yá wèi": [29466],
    "cāi": [29468],
    "māo máo": [29483, 35987],
    "chuàn chuān": [29485],
    "tuān tuàn": [29487, 35986],
    "yà jiá qiè": [29488],
    "hè xiē gé hài": [29490],
    "biān piàn": [29493, 29553],
    "bó pò": [29500],
    "háo gāo": [29515],
    "fén fèn": [29526],
    "yào xiāo": [29535],
    "shuò xī": [29537],
    "gé liè xiē": [29542],
    "nòu rú": [29555],
    "náo nǎo yōu": [29558],
    "ráng": [29565, 29924, 31155, 31331, 31344, 34328, 36511, 39716],
    "náo yōu": [29567],
    "lǜ shuài": [29575],
    "wáng wàng": [29579],
    "yáng chàng": [29594],
    "mín wén": [29599],
    "bīn fēn": [29602],
    "mén yǔn": [29607],
    "qiāng cāng": [29617, 29810, 31724],
    "án gān": [29621],
    "xuán xián": [29625],
    "cī cǐ": [29628, 36304],
    "yí tāi": [29638],
    "zǔ jù": [29639],
    "fà": [29648, 29754, 34143, 39658, 39662],
    "yín kèn": [29666],
    "huī hún": [29682],
    "xuán qióng": [29697],
    "fú fū": [29704],
    "bǐng pín": [29717],
    "cuì sè": [29719],
    "yù wéi": [29727],
    "tiǎn tiàn": [29728],
    "zhuó zuó": [29730],
    "běng pěi": [29731],
    "guǎn": [29743, 29869, 30191, 31590, 31649, 33304, 36648, 37671, 39208, 39302, 40164],
    "hún huī": [29759],
    "xié jiē": [29774],
    "chàng dàng yáng": [29778],
    "tiàn zhèn": [29809],
    "bīn pián": [29816, 29880],
    "tú shū": [29817],
    "cuǐ": [29824, 30368, 36257],
    "zǎo suǒ": [29829],
    "jué qióng": [29850],
    "lú fū": [29879],
    "jì zī": [29886],
    "suí": [29901, 32143, 32485, 36928, 38543, 38568, 39620],
    "mí xǐ": [29909],
    "qióng wěi wèi": [29911],
    "huán yè yà": [29915],
    "bó páo": [29919],
    "zhí hú": [29921],
    "piáo": [29922, 38365],
    "wǎ wà": [29926],
    "xiáng hóng": [29928],
    "wèng": [29934, 29973, 32587, 34169, 40774],
    "bǎiwǎ": [29944],
    "shèn shén": [29978],
    "ruí": [29988, 32204, 34148],
    "yòng": [29992, 30781, 33498, 33935, 37279],
    "shuǎi": [29993],
    "béng": [29997, 29998],
    "yóu zhá": [30004],
    "diàn tián shèng": [30008],
    "tǐng dīng": [30010, 30012],
    "zāi zī": [30014],
    "bì qí": [30017],
    "dá fú": [30039],
    "cè jì": [30047],
    "zāi zī tián": [30048],
    "zhì chóu shì": [30052],
    "fān pān": [30056, 30058],
    "shē yú": [30060],
    "dāng dàng dǎng": [30070],
    "jiāng qiáng": [30086],
    "pǐ yǎ shū": [30091],
    "jié qiè": [30092],
    "yí nǐ": [30097],
    "nè": [30098, 30514, 35365, 35767],
    "gē yì": [30105],
    "nüè yào": [30111, 30247],
    "lì lài": [30112, 30296],
    "yǎ xiā": [30120],
    "xuē": [30134, 33926, 34203, 36773, 36778, 38772, 38846],
    "dǎn da": [30136],
    "fá biǎn": [30138],
    "fèi féi": [30143, 30193],
    "shān diàn": [30145],
    "téng chóng": [30155],
    "tōng tóng": [30156],
    "wěi yòu yù": [30159],
    "tān shǐ": [30161],
    "pū pù": [30177, 37610],
    "bēng péng": [30189],
    "má lìn": [30195],
    "tiǎn diàn": [30198],
    "ān yè è": [30199],
    "kē ē": [30206],
    "zhì chì": [30216],
    "jiǎ xiá xiā": [30229],
    "lěi huì": [30243],
    "chài cuó": [30245],
    "diān chēn": [30248],
    "da dá": [30249],
    "biě biē": [30250],
    "qué": [30264],
    "dàn dān": [30281],
    "guì wēi": [30288],
    "nòng nóng": [30289],
    "biē biě": [30303],
    "bō bǒ": [30327],
    "bái": [30333],
    "jí bī": [30336],
    "de dì dí dī": [30340],
    "pā bà": [30341],
    "gāo háo": [30347],
    "gāo yáo": [30352],
    "lì luò bō": [30378],
    "zhā cǔ": [30395],
    "zhāo zhǎn dǎn": [30397],
    "jiān jiàn": [30417, 30435, 37627, 38388, 38828],
    "gài gě hé": [30422],
    "máng wàng": [30451],
    "yuǎn": [30454, 36922, 36960],
    "tián xián": [30455],
    "xiāng xiàng": [30456],
    "dǔn": [30457, 36280, 36489],
    "xì pǎn": [30459],
    "shěng xǐng": [30465],
    "yún hùn": [30467],
    "miǎn miàn": [30468],
    "kàn kān": [30475],
    "yìng yāng yǎng": [30479],
    "yǎo āo ǎo": [30481],
    "jū xū kōu": [30487],
    "yí chì": [30489],
    "dié tì": [30499],
    "bǐng fǎng": [30506],
    "pàng pán": [30507],
    "mī mí": [30511, 30599],
    "xuàn shùn xún": [30516],
    "tiào": [30522, 31900, 31990, 35228, 36242],
    "zhe zhuó zháo zhāo": [30528],
    "qiáo shào xiāo": [30532],
    "cuó zhuài": [30537],
    "gùn": [30548, 35636],
    "suì zuì": [30559],
    "pì bì": [30565, 31275, 36767],
    "yì zé gāo": [30570],
    "xǐng xìng": [30578],
    "guì wèi kuì": [30598],
    "kòu jì": [30601],
    "qióng huán": [30607],
    "mán mén": [30610, 30622],
    "diāo dōu": [30615],
    "lou lóu lǘ": [30620],
    "shùn rún": [30628],
    "liào liǎo": [30637, 38028],
    "jiàn xián": [30639],
    "wǔ mí": [30644],
    "guì kuì": [30646],
    "nǐng chēng": [30659],
    "huò yuè": [30662],
    "mēng méng": [30663],
    "kuàng guō": [30668],
    "guàn quán": [30676],
    "mǎn mán": [30677],
    "jīn guān qín": [30684],
    "jīn qín guān": [30685],
    "yù xù jué": [30686],
    "jiǎo jiáo": [30699, 30703],
    "duǎn": [30701],
    "shí dàn": [30707],
    "gāng qiāng kòng": [30716],
    "huā xū": [30729],
    "pīn bīn fēn": [30735],
    "yán yàn": [30740, 30799],
    "luǒ kē": [30754],
    "fú fèi": [30761, 31536],
    "zhǔ zhù": [30763],
    "lá lì lā": [30764],
    "kuāng guāng": [30788],
    "gè luò": [30796],
    "shuò shí": [30805, 30889],
    "wèi wéi ái": [30809],
    "què kè kù": [30814],
    "mǎng bàng": [30821],
    "luò lòng": [30822],
    "yǒng tóng": [30823],
    "nüè": [30840, 34384],
    "kēng kěng": [30843],
    "yān yǎn": [30845],
    "zhuì chuí duǒ": [30846],
    "kōng kòng": [30847],
    "zòng cóng": [30850],
    "jiān zhàn": [30858],
    "lù liù": [30860, 38470],
    "què xī": [30863],
    "lún lǔn lùn": [30870],
    "náo gāng": [30873],
    "jié yà": [30883],
    "wèi wěi": [30888],
    "tí dī": [30894],
    "chá chā": [30900],
    "qiāo què": [30907],
    "sù xiè": [30911],
    "liú liù": [30914, 36955, 37798, 39311],
    "sī tí": [30915],
    "bàng páng": [30917],
    "huá kě gū": [30918],
    "wěi kuǐ": [30920],
    "xiá qià yà": [30925],
    "lián qiān": [30927],
    "wèi ái gài": [30929],
    "lá lā": [30934],
    "áo qiāo": [30941],
    "pēng pèng": [30942, 38299],
    "yīn yǐn": [30948],
    "lěi léi": [30949],
    "mó mò": [30952],
    "qì zhú": [30953],
    "láo luò": [30961],
    "pán bō": [30971],
    "jí shé": [30972],
    "hé qiāo qiào": [30985],
    "kè huò": [30986],
    "què hú": [30992],
    "è qì": [31e3],
    "cǎ": [31012, 31032],
    "xián xín": [31013],
    "léi lěi lèi": [31015],
    "yán yǎn": [31033],
    "qí zhǐ": [31047, 34452],
    "bēng fāng": [31050],
    "bì mì": [31061],
    "suàn": [31064, 31495, 31597, 31639, 33948],
    "piào piāo": [31080],
    "jì zhài": [31085],
    "shuì lèi": [31089],
    "jìn jīn": [31105],
    "chán shàn": [31109],
    "yáng shāng": [31123],
    "zhī zhǐ tí": [31124],
    "shàn chán": [31146],
    "yú yù ǒu": [31162],
    "zǐ zì": [31172],
    "chá ná": [31173],
    "zhòng zhǒng chóng": [31181],
    "hào mào": [31183],
    "kù kū": [31193],
    "zū": [31199, 33861],
    "chèng": [31204, 31338],
    "huó kuò": [31214, 31219],
    "chēng chèn chèng": [31216, 31281],
    "shì zhì": [31218, 37556],
    "fù pū": [31231],
    "xùn zè": [31236],
    "tú shǔ": [31244],
    "zhùn zhǔn": [31253],
    "jī qí": [31256, 32168, 35309],
    "léng líng": [31260],
    "zuì zú sū": [31265],
    "xì qiè": [31271, 37060],
    "zhǒng zhòng": [31278],
    "zōng zǒng": [31279],
    "xián jiān liàn": [31284],
    "zī jiū": [31285],
    "jī qǐ": [31293],
    "ròng": [31299],
    "shān cǎn cēn": [31303],
    "mén méi": [31304],
    "jǐ jì": [31318],
    "xiāo rào": [31320],
    "zhuō bó": [31323],
    "tóng zhǒng zhòng": [31324],
    "zuō": [31325],
    "biāo pāo": [31342, 34280],
    "zhuō jué": [31345],
    "cuán zàn": [31347],
    "kōng kòng kǒng": [31354],
    "yū yǔ": [31355],
    "zhǎi": [31364, 37465],
    "báo": [31367, 38649],
    "kū zhú": [31371],
    "jiào liáo liù": [31372],
    "wā guī": [31376],
    "tiǎo yáo": [31381],
    "xūn yìn": [31400],
    "yà yē": [31403],
    "tián diān yǎn": [31412],
    "chāo kē": [31420],
    "kuǎn cuàn": [31421, 31422],
    "chù qì": [31440],
    "qǔ kǒu": [31448],
    "jìng zhěn": [31463],
    "kǎn kàn": [31479],
    "zhú dǔ": [31482],
    "lè jīn": [31483],
    "zhuì ruì": [31501],
    "háng hàng": [31504],
    "cén jìn hán": [31506],
    "dā xiá nà": [31514],
    "zé zuó": [31534],
    "lóng lǒng": [31548, 31725, 31840, 36504, 40851],
    "zhù zhú": [31569, 31689],
    "dá dā": [31572, 33605],
    "shāi": [31579, 31721, 31745, 31853],
    "yún jūn": [31584],
    "láng làng": [31588, 37070, 38406],
    "zhì zhǐ": [31595],
    o: [31613],
    "póu bù fú pú": [31617],
    "pái bēi": [31620],
    "gè": [31623, 34428, 37499, 38124],
    "tái chí": [31624],
    "guǎi dài": [31625],
    "zhào dào": [31628],
    "jīng qìng": [31632],
    "lín lǐn": [31638],
    "jùn qūn": [31640],
    "shī yí": [31671, 37366],
    "yuē yào chuò": [31673],
    "xiāo shuò qiào": [31678],
    "gōng gǎn lǒng": [31714],
    "páng péng": [31715],
    "zhuó huò": [31719],
    "jiǎn jiān": [31727],
    "dí zhú": [31732],
    "zān cēn cǎn": [31736],
    "zhuàn suǎn zuàn": [31737],
    "piǎo biāo": [31739],
    "guó guì": [31746],
    "cè jí": [31758],
    "mì miè": [31770],
    "shāi sī": [31771],
    "sǔn zhuàn": [31784],
    "gàn gǎn": [31795],
    "bò bǒ": [31800],
    "bó bù": [31807],
    shi: [31810],
    "zhēn jiān": [31816],
    "zhuàn zuǎn": [31825],
    "fān pān biān": [31827],
    "sǒu shǔ": [31828],
    "zuǎn": [31851, 32356, 32386, 32393, 32408, 32565],
    "nǚ": [31865, 37369, 38037],
    "shā chǎo": [31878],
    "kāng jīng": [31879],
    "fěn": [31881, 40698],
    "cū": [31895, 35285, 40577, 40580, 40612],
    "nián zhān": [31896],
    "cè sè": [31907],
    "zhōu yù": [31909],
    "shēn sǎn": [31937],
    "biān biǎn": [31940, 33849],
    "miàn": [31942, 38754, 38755, 40618, 40619, 40629, 40634],
    "hú hū hù": [31946],
    "gǔ gòu": [31955],
    "mí méi": [31964],
    "sǎn shēn": [31965, 31971],
    "zāo": [31967, 36455, 36973, 37289],
    "mì sī": [31992],
    "jiū jiǔ": [31994],
    "xì jì": [31995, 32363],
    "zhēng zhěng": [31997],
    "chà chǎ": [32001, 34921],
    "yuē yāo": [32004, 32422],
    "hóng gōng": [32005, 32418],
    "hé gē": [32007, 32421],
    "wén wèn": [32011, 32441],
    "fóu": [32017],
    "jì jié jiè": [32018],
    "pī pí bǐ": [32021, 32432],
    "jīn jìn": [32031],
    "zhā zā": [32037, 32046],
    "hā": [32038],
    "fū fù": [32040],
    "chōu chóu": [32044],
    "lèi léi lěi": [32047],
    "bō bì": [32052],
    "tiǎn zhěn": [32062],
    "jiōng jiǒng": [32069],
    "jié jiē": [32080, 32467, 33410],
    "guà kuā": [32083],
    "bǎi mò": [32084],
    "gēng huán": [32089],
    "jié xié": [32092],
    "quán shuān": [32095],
    "gǎi ǎi": [32096],
    "luò lào": [32097, 32476],
    "bīng bēng pēng": [32099],
    "gěi jǐ": [32102, 32473],
    "tóng tōng dòng": [32103],
    "tiào diào dào": [32105],
    "lěi lèi léi": [32107],
    "gāi hài": [32111],
    "chī zhǐ": [32122],
    "wèn miǎn mán wàn": [32123],
    "huán huàn wàn": [32132],
    "qīn xiān": [32133],
    "tì tí": [32136],
    "yán xiàn": [32150],
    "zōng zèng zòng": [32156],
    "chēn lín": [32157],
    "zhǔn zhùn": [32167],
    "qiàn qīng zhēng": [32170],
    "qìng qǐ": [32174],
    "lún guān": [32184, 32438],
    "chuò chāo": [32189, 32496],
    "tián tǎn chān": [32194],
    "lǜ lù": [32209, 32511],
    "ruǎn ruàn": [32219],
    "jí qī": [32221],
    "zhòng chóng": [32223, 37325],
    "miáo máo": [32226],
    "xiè yè": [32228],
    "huǎn": [32233, 32531],
    "gēng gèng": [32234, 32262],
    "tōu xū shū": [32240],
    "zōng zòng": [32245, 32332],
    "yùn gǔn": [32247],
    "guā wō": [32250],
    "yùn yūn wēn": [32252, 32277],
    "bāng bàng": [32269],
    "gǔ hú": [32270, 40379],
    "cī cuò suǒ": [32274],
    "cuī shuāi": [32279],
    "róng rǒng ròng": [32281],
    "zài zēng": [32289],
    "cài": [32297, 33756, 34081],
    "féng fèng": [32299],
    "suō sù": [32302, 32553],
    "yǎn yǐn": [32303, 37203],
    "zòng zǒng": [32305, 32437],
    "zhuàn juàn": [32307],
    "mò mù": [32312, 33707],
    "piǎo piāo": [32313, 32549],
    "fán pó": [32321],
    "bēng bèng": [32323],
    "móu miù miào liǎo": [32326],
    "yáo yóu zhòu": [32327],
    "zēng zèng": [32338, 32559],
    "jú jué": [32344],
    "chuō chuò": [32347],
    "zūn zǔn": [32348],
    "rào": [32350, 32469, 36982],
    "chǎn chán": [32351],
    "huì huí": [32354, 32523, 34289],
    "qiāo sāo zǎo": [32368],
    "jiǎo zhuó": [32371, 32564],
    "dàn tán chán": [32373],
    "nǒng": [32375],
    "pú fú": [32384],
    "yào lì": [32389],
    "rǎng xiāng": [32405],
    "lí sǎ xǐ lǐ": [32410],
    "xiān qiàn": [32420],
    "jīng jìng": [32463],
    "tí tì": [32488],
    "bēng běng bèng": [32503],
    "zōng zèng": [32508],
    "jī qī": [32521],
    "wēn yùn yūn": [32522],
    "fèng féng": [32541],
    "shuāi cuī suī": [32542],
    "miù móu liáo miào mù": [32554],
    "qiāo sāo": [32562],
    "fǒu": [32566, 32569, 32571, 38636, 40192],
    "bà ba pí": [32610, 32631],
    "guà guǎi": [32619],
    "yáng xiáng": [32650, 32655],
    "měi gāo": [32665],
    "yì xī": [32667],
    "qiǎng qiān": [32671],
    "qiāng kòng": [32683],
    "qián xián yán": [32684],
    "nóu": [32698],
    "hóng gòng": [32702],
    "pī bì pō": [32717],
    "qú yù": [32721],
    "ké": [32727],
    "qiào qiáo": [32728],
    "zhái dí": [32735],
    "dào zhōu": [32738],
    "hóu qú": [32757],
    "shuǎ": [32781],
    "ruǎn nuò": [32782],
    "ér nài": [32783],
    "zhuān duān": [32785],
    "pá bà": [32793],
    "chí sì": [32795],
    "qù chú": [32797],
    "lún lǔn": [32803],
    "jí jiè": [32804],
    "tāng tǎng": [32805],
    "pǎng": [32810, 35243],
    "zhá zé": [32811],
    "yē yé": [32822],
    "yún yíng": [32826],
    "wà tuǐ zhuó": [32841],
    "ér nǜ": [32847],
    "tiē zhé": [32849],
    "dǐ zhì": [32860],
    "qié": [32890],
    "nǐ jiàn": [32891],
    "lèi lē": [32907],
    "cào": [32911, 35161, 37173, 40732],
    "bó dí": [32913],
    "xiào xiāo": [32918],
    "dù dǔ": [32922],
    "chāi": [32926, 37365, 38039],
    "hán qín hàn": [32931],
    "pàng pán pàn": [32936, 32982],
    "zhūn chún": [32939],
    "āng": [32942, 39599],
    "yù yō": [32946],
    "pí bǐ bì": [32950],
    "fèi bì": [32967],
    "bèi bēi": [32972],
    "fèi zǐ": [32975],
    "píng pēng": [32979, 33529],
    "fū fú zhǒu": [32981],
    "shèng shēng": [32988],
    "kuà": [33007, 36328, 39611],
    "gǎi hǎi": [33010],
    "gē gé gā": [33011],
    "néng nài": [33021],
    "guī kuì": [33023],
    "mài mò": [33033],
    "zāng zàng": [33039],
    "jiǎo jué": [33050, 35282],
    "cuǒ": [33054],
    "de te": [33062],
    "zuī juān": [33063],
    "něi": [33070, 33095, 39186, 39297, 39870, 39896],
    "pú fǔ": [33071],
    "niào": [33074],
    "shuí": [33085],
    "guò": [33090, 36942, 37945],
    "là xī": [33098],
    "yān ā": [33100],
    "gāo gào": [33167],
    "lù biāo": [33172],
    "chuái": [33175],
    "zhuān chuán chún zhuǎn": [33182],
    "chuài": [33194, 36409],
    "fán pán": [33200],
    "wǔ hū": [33204],
    "shān dàn": [33211],
    "tún": [33216, 33227, 34508, 35928, 35930, 36568, 38677, 39145, 39272, 39784, 40064, 40663],
    "bì bei": [33218],
    "là gé": [33224],
    "sào sāo": [33226],
    "nào": [33233, 38297, 38393, 39719],
    "ní luán": [33249],
    "qiān xián": [33252],
    "guàng jiǒng": [33254],
    "guǎng jiǒng": [33257],
    "chòu xiù": [33261],
    "mián biān": [33265],
    "dié zhí": [33271],
    "zhī jìn": [33272],
    "shè shě": [33293],
    "pù": [33302, 33303],
    "bān bō pán": [33324],
    "kuā": [33343],
    "gèn gěn": [33390],
    "sè shǎi": [33394],
    "fú bó": [33396],
    "jiāo qiú": [33405],
    "chāi chā": [33414],
    "sháo què": [33421],
    "hù xià": [33424],
    "zì zǐ": [33427],
    "huì hū": [33428],
    "tún chūn": [33434],
    "jiè gài": [33445],
    "xù zhù": [33447],
    "yuán yán": [33451],
    "xīn xìn": [33455],
    "lún huā": [33458],
    "wù hū": [33460],
    "gōu gǒu": [33462],
    "mào máo": [33468],
    "fèi fú": [33470],
    "chán yín": [33474],
    "qiē": [33478],
    "sū sù": [33487],
    "tiáo sháo": [33493],
    "lì jī": [33497],
    "kē hē": [33499],
    "jù qǔ": [33507],
    "ruò rě": [33509],
    "zhù níng": [33511],
    "pā bó": [33513],
    "xiú": [33516],
    "zhǎ zuó": [33522],
    "jū chá": [33524],
    "nié": [33526],
    "shēng ruí": [33532],
    "qié jiā": [33540],
    "zǐ cí": [33544],
    "qiàn xī": [33564],
    "chǎi": [33565],
    "fá pèi": [33591],
    "ráo": [33627, 34136, 35155, 39250, 39286],
    "yíng xíng": [33637],
    "qián xún": [33640, 34113],
    "yìn yīn": [33643],
    "hé hè": [33655],
    "shā suō": [33678],
    "péng fēng": [33681],
    "shēn xīn": [33688],
    "wǎn guān guǎn": [33694],
    "yóu sù": [33700],
    "shāo xiāo": [33702, 34552],
    "làng liáng": [33704],
    "piǎo fú": [33705],
    "wèn wǎn miǎn": [33708],
    "shì shí": [33715, 33940],
    "tù tú": [33717],
    "xiān liǎn": [33718, 34207],
    "wǎn yù": [33728],
    "zōu chù": [33734],
    "lù lǜ": [33737],
    "jūn jùn": [33740],
    "niè rěn": [33741],
    "zī zì zāi": [33745],
    "tú tù": [33759],
    "jiē shà": [33768],
    "qiáo zhǎo": [33772],
    "tái zhī chí": [33773],
    "fēi fěi": [33778, 34586],
    "qín qīn jīn": [33779],
    "zū jù": [33785, 33961],
    "lǐn má": [33787],
    "tián tiàn": [33790],
    "tiē": [33820, 36028, 36148],
    "luò là lào luō": [33853],
    "zhù zhuó zhe": [33879],
    "shèn rèn": [33882],
    "gě gé": [33883],
    "jùn suǒ": [33904],
    "kuì kuài": [33929],
    "rú ná": [33944],
    "méng mēng měng": [33945],
    "yuán huán": [33949],
    "xú shú": [33955],
    "xí xì": [33973],
    "mì míng": [33986],
    "sōu sǒu": [33987],
    "gài gě hé hài": [33995],
    "yǎo zhuó": [34004],
    "diào tiáo dí": [34023],
    "xū qiū fū": [34034],
    "zí jú": [34043],
    "liǎo lù": [34044],
    xu: [34047],
    "hàn hǎn": [34058],
    "màn wàn mán": [34067],
    "pó bò": [34082],
    "fān fán bō": [34115],
    "hóng hòng": [34171],
    "yù ào": [34177, 38569],
    "xí xiào": [34178],
    "báo bó bò": [34180],
    "cí zī": [34187],
    "wàn luàn": [34189],
    "kǎo hāo": [34215],
    "yuǎn wěi": [34227],
    "zhòu chóu": [34229],
    "wō mái": [34230],
    "xiāo hào": [34243],
    "yù xù xū": [34247],
    "jiè jí": [34249],
    "diào zhuó": [34251],
    "cáng zàng": [34255],
    "lǎ": [34270],
    "chú zhū": [34296],
    "pín píng": [34315],
    "gān hán": [34423],
    "hóng jiàng": [34425],
    "huī huǐ": [34426],
    "xiā há": [34430],
    "mǎ mà mā": [34434],
    "fāng bàng": [34436],
    "bàng bèng": [34444],
    "jué quē": [34455],
    "qín qián": [34457],
    "gōng zhōng": [34467],
    "fǔ fù": [34469],
    "dài dé": [34478],
    "gǒu qú xù": [34492],
    "bǒ pí": [34494],
    "shé yí": [34503],
    "tiě": [34504, 37444, 37525, 37921, 37941, 38081, 39510],
    "gé luò": [34514],
    "máng bàng": [34518],
    "yì xǔ": [34529],
    "há gé": [34532],
    "qiè ní": [34538],
    "é yǐ": [34558],
    "zhē zhé": [34567],
    "là zhà": [34593],
    "suò": [34614, 36900],
    "yóu qiú": [34660],
    "xiā hā": [34662],
    "xī qī": [34695],
    "bī pí": [34709],
    "nài něng": [34714],
    "hé xiá": [34715],
    "guì huǐ": [34717],
    "mǎ mā mà": [34718],
    "shì zhē": [34731],
    "zhì dié": [34738],
    "jiàn chán": [34745],
    "ma má mò": [34758],
    "mǎng měng": [34770],
    "biē bié": [34782],
    "bēn fèi": [34790],
    "láo liáo": [34791],
    "yín xún": [34795],
    "lí lǐ": [34849],
    "xuè xiě": [34880],
    "xíng háng hàng héng": [34892],
    "shuāi cuī": [34928],
    "tuó tuō": [34953],
    "lǐng líng": [34954],
    "bào páo pào": [34956],
    "jù jiē": [34963],
    "hè kè": [34964],
    "yí yì": [34968, 36004],
    "nà jué": [34982],
    "bèi pī": [34987],
    "chǐ nuǒ": [34994],
    "chǐ qǐ duǒ nuǒ": [34995],
    "jiá qiā jié": [34999],
    "bó mò": [35001],
    "guī guà": [35007],
    "liè liě": [35010],
    "chéng chěng": [35022],
    "jiē gé": [35027],
    "dāo chóu": [35055],
    "shang cháng": [35059],
    "yuān gǔn": [35063],
    "yǎn ān": [35066],
    "tì xī": [35068],
    "fù fú": [35092],
    "chǔ zhǔ": [35098],
    "tuì tùn": [35114],
    "lǎi": [35184],
    "yào yāo": [35201],
    "qín tán": [35203],
    "jiàn xiàn": [35211, 35265],
    "piǎn": [35217, 35550, 35869, 36021],
    "piē miè": [35221],
    "yíng yǐng": [35246],
    "qù qū": [35248, 35255, 35281],
    "jiàn biǎn": [35253],
    "luó luǎn": [35254],
    "zī zuǐ": [35292],
    "huà xiè": [35295],
    "jiě jiè xiè": [35299, 35303],
    "xué hù": [35319],
    "lì lù": [35323],
    "tǎo": [35342, 35752],
    "zhùn": [35376],
    "zī zǐ": [35390],
    "yí dài": [35410, 35794],
    "xiòng": [35415, 35783],
    "diào tiǎo": [35458],
    "yí chǐ chì": [35459],
    "lǎng làng": [35471],
    "ēi éi ěi èi xī": [35474, 35830],
    "shuà": [35484],
    "yǔ yù": [35486, 35821, 38632],
    "shuō shuì yuè": [35498, 35828],
    "shuí shéi": [35504, 35841],
    "qū juè": [35507],
    "chī lài": [35514],
    "nì ná": [35517],
    "diào tiáo": [35519],
    "pǐ bēi": [35520],
    "jì jī": [35525],
    "zé zuò zhǎ cuò": [35534],
    "chù jí": [35540],
    "háo xià": [35541],
    "lùn lún": [35542, 35770],
    "shì dì": [35551],
    "huà guā": [35555],
    "xǐ shāi āi": [35568],
    "nán nàn": [35573, 38627],
    "miù": [35628, 35884],
    "zèn": [35670, 35886],
    "shí zhì": [35672, 35782],
    "juàn xuān": [35714],
    "yí tuī": [35721],
    "zhán": [35741],
    "xǔ hǔ": [35768],
    "xiáng yáng": [35814],
    "tiáo diào zhōu": [35843],
    "chén shèn": [35852],
    "mí mèi": [35868],
    "màn mán": [35881],
    "gǔ yù": [35895],
    "huō huò huá": [35905],
    "zhì zhài": [35960],
    "huān huán": [35974],
    "kěn kūn": [35975],
    "mò hé": [35976],
    "mò hé háo": [35977],
    "jù lóu": [35991],
    "zé zhài": [36012, 36131],
    "dài tè": [36024],
    "bì bēn": [36033],
    "jiǎ gǔ jià": [36040],
    "xiōng mín": [36079],
    "càng": [36086],
    "zhuàn zuàn": [36090, 36186],
    "wàn zhuàn": [36099],
    "gàn gòng zhuàng": [36123],
    "yuán yùn": [36128],
    "bēn bì": [36146],
    "jiǎ gǔ": [36158],
    "zǒu": [36208, 36209, 39888],
    "dié tú": [36227],
    "jū qiè": [36228],
    "qū cù": [36235, 36264],
    "jí jié": [36236],
    "guā huó": [36239],
    "què qì jí": [36254],
    "tàng tāng": [36255],
    "chuō zhuó": [36256],
    "qù cù": [36259],
    "yuè tì": [36271],
    "bō bào": [36277],
    "kuà wù": [36278],
    "guì jué": [36281],
    "fāng fàng páng": [36285],
    "páo bà": [36289],
    "qí qǐ": [36290],
    "jiàn chén": [36296],
    "pǎo páo": [36305],
    "diǎn diē tiē": [36309],
    "jū jù qiè": [36313],
    "bǒ": [36315],
    "luò lì": [36318],
    "dài duò duō chí": [36322],
    "zhuǎi": [36329],
    "bèng pián": [36336],
    "tiào táo": [36339],
    "shū chōu": [36350],
    "liàng liáng": [36361],
    "tà tā": [36367],
    "chǎ": [36421, 37972, 38258],
    "dí zhí": [36450],
    "dēng dèng": [36460, 37913, 38251],
    "cèng": [36461],
    "dūn cún": [36466],
    "juě jué": [36470],
    "liāo": [36477],
    "xiè sǎ": [36512],
    "tǐ": [36528, 36550, 39605],
    "yà zhá gá": [36555],
    "xìn xiàn": [36560],
    "fàn guǐ": [36563],
    "zhuàn zhuǎn": [36578],
    "zhóu zhòu": [36600, 36724],
    "bú": [36688, 37293, 40170],
    "zhuǎn zhuàn zhuǎi": [36716],
    "zǎi zài": [36733],
    "niǎn zhǎn": [36759],
    "biān bian": [36793],
    "dào biān": [36794],
    "yǐ yí": [36806, 36836, 36849],
    "guò guo guō": [36807],
    "wàng kuāng": [36811],
    "hái huán": [36824],
    "zhè zhèi": [36825],
    "yuǎn yuàn": [36828],
    "zhì lì": [36835],
    "zhù wǎng": [36844],
    "zhuī duī": [36861],
    "shì kuò": [36866],
    "tòu": [36879],
    "tōng tòng": [36890],
    "guàng": [36891],
    "dǎi dài": [36910],
    "suì suí": [36930],
    "tí dì": [36934],
    "yí wèi": [36951],
    "shì dí zhé": [36969],
    "cà": [36970],
    "huán hái": [36996],
    "lí chí": [37004],
    "kàng háng": [37023],
    "nà nèi nā": [37027],
    "xié yá yé yú xú": [37034],
    "gāi hái": [37058],
    "huán xún": [37063],
    "chī xī": [37079],
    "hǎo": [37085],
    "lì zhí": [37094],
    "xiáo ǎo": [37097],
    "dōu dū": [37117],
    "liǎo": [37149, 38269],
    "zàn cuán cuó": [37186, 37191],
    "dīng dǐng": [37194],
    "cù zuò": [37218],
    "fā pō": [37222],
    "shāi shī": [37246],
    "niàng": [37247, 37304],
    "qiú chōu": [37268],
    "pō fā": [37271, 37297],
    "chǎn chěn": [37286],
    "yàn liǎn xiān": [37302],
    "niàng niáng": [37312],
    "lǐ li": [37324],
    "lí xǐ xī": [37328],
    "liǎo liào": [37333],
    "dīng dìng": [37336, 38025],
    "qiǎo jiǎo": [37349],
    "yú huá": [37354],
    "huá wū": [37355],
    "rì rèn jiàn": [37360, 37372],
    "dì dài": [37361],
    "pī zhāo": [37373],
    "yá yé": [37374],
    "bǎ pá": [37376, 38063],
    "tā tuó": [37448, 38090],
    "běi": [37491],
    "bǐng píng": [37500],
    "hā kē": [37503, 38122],
    "chòng": [37507, 38131],
    "xiǎng jiōng": [37508],
    "yù sì": [37513],
    "xù huì": [37514],
    "rén rěn": [37515],
    "shàn shuò": [37519],
    "chì lì": [37520],
    "xiǎn xǐ": [37521, 38115],
    "hóu xiàng": [37527],
    "diào tiáo yáo": [37530],
    "xiān kuò tiǎn guā": [37531, 37565, 38118],
    "zhé niè": [37560],
    "zhōng yōng": [37567],
    "tōu tù dòu": [37568],
    "méi méng": [37570],
    "wàn jiǎn": [37572, 37803],
    "tǐng dìng": [37580, 38116],
    "juān jiān cuān": [37585],
    "sī tuó": [37590],
    "juān xuān juàn": [37591],
    "wú huá wū": [37592],
    "zhuó chuò": [37596],
    "xíng xìng jīng": [37598],
    "jū jú": [37606, 38164],
    "zuì niè": [37623],
    "yuān yuǎn wǎn wān": [37626],
    "gāng gàng": [37628, 38050],
    "zhuī": [37648, 38181, 39429, 39571, 40315],
    "ā": [37650, 38165],
    "cuō chā": [37768],
    "suǒ sè": [37773],
    "yáo zú": [37776],
    "yè tà gé": [37777],
    "qiāng chēng": [37783],
    "gé lì": [37784, 38217, 39730],
    "bī pī bì": [37790],
    "gǎo hào": [37804],
    "zú chuò": [37827],
    "xiū xiù": [37829],
    "shòu sōu": [37833],
    "dí dī": [37841, 38237],
    "qiāo sǎn càn": [37842],
    "lù áo": [37845],
    "tāng táng": [37852],
    "jiàn zàn": [37865],
    "huì suì ruì": [37880],
    "qiǎng qiāng": [37881, 38250],
    "sǎn xiàn sà": [37886],
    "jiǎn jiàn": [37927, 38159],
    "dāng chēng": [37946, 38107],
    "zuān zuàn": [38013],
    "sà xì": [38033],
    "yào yuè": [38053],
    "tǒu dǒu": [38061],
    "zuàn zuān": [38075],
    "qiān yán": [38085],
    "pí pī": [38093],
    "yáo diào tiáo": [38123],
    "tāng tàng": [38132],
    "pù pū": [38138],
    "tán xiān": [38188],
    "liù liú": [38223],
    "hào gǎo": [38224],
    "táng tāng": [38231],
    "tán chán xín": [38241],
    "huò shǎn": [38276],
    "hàn bì": [38280, 38380],
    "kāng kàng": [38284, 38390],
    "xián jiàn jiān jiǎn": [38290],
    "xiā xiǎ": [38293],
    "xiǎ kě": [38300],
    "biàn guān": [38302],
    "hé gé": [38308, 39052],
    "hòng xiàng": [38311],
    "sē xī": [38314],
    "tíng tǐng": [38318],
    "è yān": [38332, 38415],
    "hòng juǎn xiàng": [38338],
    "bǎn pàn": [38342],
    "dū shé": [38349, 38407],
    "què quē": [38357],
    "tāng táng chāng": [38363],
    "kàn hǎn": [38366, 38426],
    "xì sè tà": [38367],
    "mēn mèn": [38391],
    "quē què": [38425],
    "yán diàn": [38461],
    "ā ē": [38463],
    "bēi pō pí": [38466],
    "yàn yǎn": [38529],
    "yú yáo shù": [38531],
    "lóng lōng": [38534],
    "duì zhuì": [38538],
    "suí duò": [38539],
    "gāi qí ái": [38545],
    "huī duò": [38547, 38579],
    "wěi kuí": [38551],
    "lì dài": [38584],
    "zhuī cuī wéi": [38585],
    "hè hú": [38586, 40366],
    "jùn juàn": [38589, 38603],
    "nán nàn nuó": [38590],
    "què qiāo qiǎo": [38592],
    "guàn huán": [38618],
    "guī xī": [38623],
    "sè xí": [38637],
    "án": [38648],
    "wù méng": [38650],
    "tèng": [38703],
    "lù lòu": [38706],
    "mái": [38718],
    "jìng liàng": [38746],
    "gé jí": [38761],
    "bǎ": [38774],
    "yāng yàng": [38789],
    "gé tà sǎ": [38792],
    "biān yìng": [38805],
    "qiào shāo": [38808],
    "juān xuān": [38809],
    "shàng zhǎng": [38813],
    "pí bǐng bì bēi": [38814],
    la: [38817],
    "xiè dié": [38818],
    "ēng": [38821],
    "móu mù": [38826],
    "bì bǐng": [38840],
    "mèi wà": [38862],
    "rǒu": [38870],
    "shè xiè": [38872],
    "yùn wēn": [38891],
    "dùn dú": [38931, 39039],
    "duǐ": [38951],
    "luō": [38961],
    "bīn pín": [38971],
    "yóng": [38994, 39065, 39979],
    "mān": [39010, 39071],
    "jǐng gěng": [39048],
    "jié xié jiá": [39049],
    "kē ké": [39055],
    "pín bīn": [39057],
    "chàn zhàn": [39076],
    "fēng fěng": [39080, 39118],
    "biāo diū": [39081],
    "bá fú": [39088],
    "sāo sōu": [39102],
    "liù liáo": [39106],
    "shí sì yì": [39135],
    "yǎng juàn": [39148],
    "zhù tǒu": [39155],
    "yí sì": [39156],
    "zuò zé zhā": [39157],
    "tiè": [39163, 39214],
    "xiǎng náng": [39263],
    "táng xíng": [39271],
    "gē le": [39289],
    "chā zha": [39303],
    "náng nǎng": [39317],
    "yūn wò": [39335],
    "zhī shì": [39350],
    "xìn jìn": [39352],
    "kuài jué": [39363],
    "zǎng": [39380, 39541],
    "tái dài": [39384],
    "xún xuān": [39400],
    "liáng láng": [39418],
    "piàn": [39447, 39449, 39575, 39800],
    "dài tái": [39552],
    "sāo sǎo": [39578],
    "gǔ gū": [39592],
    "bèi mó": [39603],
    "xiāo qiāo": [39609],
    "bǎng pǎng": [39624],
    "bó jué": [39625],
    "bì pǒ": [39666],
    "máo méng": [39667],
    "kuò yuè": [39674],
    "bā bà": [39774, 40067],
    "jì cǐ": [39814],
    "bó bà": [39818],
    "zhǎ zhà": [39827, 40074],
    "chóu dài": [39832],
    "luò gé": [39845],
    "guī xié wā kuí": [39853],
    "xiān xiǎn": [39854, 40092],
    "pū bū": [39878],
    "yì sī": [39907],
    "bà bó": [40076],
    "guī xié": [40081],
    "sāi xǐ": [40131],
    "niǎo diǎo": [40165],
    "diāo zhāo": [40173],
    "gān hàn yàn": [40177],
    "fū guī": [40186],
    "jiān qiān zhān": [40189],
    "hé jiè": [40353],
    "piān biǎn": [40355],
    "chuàn zhì": [40360],
    "cāng qiāng": [40364],
    "sǔn xùn": [40381],
    "biāo páo": [40579],
    "zhù cū": [40582],
    "jūn qún": [40583, 40597],
    chi: [40630],
    "mó me": [40636],
    "mó me ma": [40637],
    "mí mǒ": [40639],
    "dàn shèn": [40686],
    "zhěn yān": [40688],
    "dǎn zhǎn": [40693],
    "miǎn mǐn měng": [40702],
    "hōu": [40769],
    "nàng": [40777],
    "qí jì zī zhāi": [40784],
    "yín kěn yǎn": [40834],
    "yín kěn": [40840],
    "gōng wò": [40847],
    "guī jūn qiū": [40860, 40863]
  },
  o = [];
Object.keys(s).forEach(function (n) {
  for (var h = 0, g = s[n]; h < g.length; h++) {
    var i = g[h];
    o[i] = n;
  }
});
var y = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
function j(n) {
  return n.replace(y, "_").length;
}
var c = {};
function l(n) {
  void 0 === n && (n = {}), c = {}, Object.keys(n).sort(function (n, h) {
    return j(h) - j(n);
  }).forEach(function (h) {
    c[h] = n[h];
  });
}
var d = function d() {
  return c;
};
var b = [{}, {}, {
    "一个": "yí gè",
    "这个": "zhè ge",
    "不是": "bú shì",
    "成为": "chéng wéi",
    "一种": "yī zhǒng",
    "认为": "rèn wéi",
    "作为": "zuò wéi",
    "部分": "bù fèn",
    "要求": "yāo qiú",
    "各种": "gè zhǒng",
    "应该": "yīng gāi",
    "增长": "zēng zhǎng",
    "不会": "bú huì",
    "提供": "tí gōng",
    "那些": "nèi xiē",
    "觉得": "jué de",
    "任务": "rèn wu",
    "那个": "nà ge",
    "称为": "chēng wéi",
    "为主": "wéi zhǔ",
    "了解": "liǎo jiě",
    "处理": "chǔ lǐ",
    "皇上": "huáng shang",
    "只要": "zhǐ yào",
    "心里": "xīn li",
    "大量": "dà liàng",
    "力量": "lì liàng",
    "几乎": "jī hū",
    "干部": "gàn bù",
    "目的": "mù dì",
    "行为": "xíng wéi",
    "只见": "zhǐ jiàn",
    "认识": "rèn shi",
    "市长": "shì zhǎng",
    "师父": "shī fu",
    "调查": "diào chá",
    "重新": "chóng xīn",
    "分为": "fēn wéi",
    "知识": "zhī shi",
    "导弹": "dǎo dàn",
    "行业": "háng yè",
    "质量": "zhì liàng",
    "银行": "yín háng",
    "参与": "cān yù",
    "充分": "chōng fèn",
    "尽管": "jǐn guǎn",
    "生长": "shēng zhǎng",
    "数量": "shù liàng",
    "应当": "yīng dāng",
    "院长": "yuàn zhǎng",
    "强调": "qiáng diào",
    "只能": "zhǐ néng",
    "音乐": "yīn yuè",
    "以为": "yǐ wéi",
    "处于": "chǔ yú",
    "分子": "fèn zǐ",
    "晚上": "wǎn shang",
    "部长": "bù zhǎng",
    "蒙古": "měng gǔ",
    "只有": "zhǐ yǒu",
    "适当": "shì dàng",
    "品种": "pǐn zhǒng",
    "只好": "zhǐ hǎo",
    "成长": "chéng zhǎng",
    "高兴": "gāo xìng",
    "不了": "bù liǎo",
    "产量": "chǎn liàng",
    "胖子": "pàng zi",
    "种类": "zhǒng lèi",
    "显得": "xiǎn de",
    "只是": "zhǐ shì",
    "似的": "shì de",
    "率领": "shuài lǐng",
    "改为": "gǎi wéi",
    "不禁": "bù jīn",
    "成分": "chéng fèn",
    "答应": "dā yìng",
    "少年": "shào nián",
    "兴趣": "xìng qù",
    "太监": "tài jiàn",
    "休息": "xiū xi",
    "校长": "xiào zhǎng",
    "更新": "gēng xīn",
    "合同": "hé tong",
    "喝道": "hè dào",
    "重庆": "chóng qìng",
    "重建": "chóng jiàn",
    "使得": "shǐ de",
    "审查": "shěn zhā",
    "累计": "lěi jì",
    "给予": "jǐ yǔ",
    "上去": "shǎng qù",
    "行情": "háng qíng",
    "种种": "zhǒng zhǒng",
    "极为": "jí wéi",
    "冠军": "guàn jūn",
    "仿佛": "fǎng fú",
    "头发": "tóu fa",
    "投降": "tóu xiáng",
    "家长": "jiā zhǎng",
    "仔细": "zǐ xì",
    "要是": "yào shi",
    "将领": "jiàng lǐng",
    "含量": "hán liàng",
    "更为": "gèng wéi",
    "只得": "zhǐ de",
    "哪些": "něi xiē",
    "积累": "jī lěi",
    "地处": "dì chǔ",
    "县长": "xiàn zhǎng",
    "少女": "shào nǚ",
    "路上": "lù shang",
    "只怕": "zhǐ pà",
    "能量": "néng liàng",
    "一度": "yí dù",
    "储量": "chǔ liàng",
    "供应": "gōng yìng",
    "挑战": "tiǎo zhàn",
    "西藏": "xī zàng",
    "记得": "jì de",
    "影片": "yǐng piān",
    "总量": "zǒng liàng",
    "当真": "dàng zhēn",
    "将士": "jiàng shì",
    "差别": "chā bié",
    "较为": "jiào wéi",
    "一处": "yī chǔ",
    "照片": "zhào piān",
    "长老": "zhǎng lǎo",
    "大夫": "dài fū",
    "差异": "chā yì",
    "懂得": "dǒng de",
    "尽量": "jǐn liàng",
    "模样": "mú yàng",
    "的确": "dí què",
    "鱼肚": "yú dǔ",
    "种子": "zhǒng zi",
    "为首": "wéi shǒu",
    "便宜": "pián yí",
    "更名": "gēng míng",
    "石头": "shí tou",
    "州长": "zhōu zhǎng",
    "为止": "wéi zhǐ",
    "漂亮": "piào liàng",
    "炮弹": "pào dàn",
    "藏族": "zàng zú",
    "哪个": "něi gè",
    "角色": "jué sè",
    "当作": "dàng zuò",
    "尽快": "jǐn kuài",
    "人为": "rén wéi",
    "重复": "chóng fù",
    "胡同": "hú tòng",
    "差距": "chā jù",
    "弟兄": "dì xiong",
    "大将": "dà jiàng",
    "几种": "jǐ zhǒng",
    "肚子": "dǔ zi",
    "睡觉": "shuì jiào",
    "团长": "tuán zhǎng",
    "队长": "duì zhǎng",
    "区长": "qū zhǎng",
    "难得": "nán de",
    "丫头": "yā tou",
    "打听": "dǎ ting",
    "会长": "huì zhǎng",
    "弟弟": "dì di",
    "王爷": "wáng ye",
    "当天": "dàng tiān",
    "重量": "zhòng liàng",
    "鱼种": "yú zhǒng",
    "誉为": "yù wéi",
    "家伙": "jiā huo",
    "华山": "huà shān",
    "椅子": "yǐ zi",
    "流量": "liú liàng",
    "长大": "zhǎng dà",
    "勉强": "miǎn qiǎng",
    "会计": "kuài jì",
    "分散": "fēn sǎn",
    "过分": "guò fèn",
    "三种": "sān zhǒng",
    "济南": "jǐ nán",
    "调动": "diào dòng",
    "燕京": "yān jīng",
    "少将": "shào jiàng",
    "中毒": "zhòng dú",
    "晓得": "xiǎo de",
    "特种": "tè zhǒng",
    "变更": "biàn gēng",
    "认得": "rèn de",
    "苹果": "pín guǒ",
    "念头": "niàn tou",
    "挣扎": "zhēng zhá",
    "三藏": "sān zàng",
    "剥削": "bō xuē",
    "丞相": "chéng xiàng",
    "少量": "shǎo liàng",
    "寻思": "xín sī",
    "夺得": "duó de",
    "干线": "gàn xiàn",
    "呼吁": "hū yù",
    "戏曲": "xì qǔ",
    "处罚": "chǔ fá",
    "长官": "zhǎng guān",
    "见长": "jiàn zhǎng",
    "柏林": "bó lín",
    "亲戚": "qīn qi",
    "身分": "shēn fèn",
    "胳膊": "gē bo",
    "着手": "zhuó shǒu",
    "炸弹": "zhà dàn",
    "咳嗽": "ké sou",
    "西边": "xī bian",
    "赢得": "yíng de",
    "叶子": "yè zi",
    "外长": "wài zhǎng",
    "供给": "gōng jǐ",
    "师长": "shī zhǎng",
    "变量": "biàn liàng",
    "应有": "yīng yǒu",
    "下载": "xià zài",
    "乐器": "yuè qì",
    "间接": "jiàn jiē",
    "底下": "dǐ xia",
    "种族": "zhǒng zú",
    "打扮": "dǎ ban",
    "子弹": "zǐ dàn",
    "弹药": "dàn yào",
    "热量": "rè liàng",
    "削弱": "xuē ruò",
    "骨干": "gǔ gàn",
    "容量": "róng liàng",
    "模糊": "mó hu",
    "转动": "zhuàn dòng",
    "落下": "là xià",
    "称呼": "chēng hu",
    "科长": "kē zhǎng",
    "处置": "chǔ zhì",
    "歌曲": "gē qǔ",
    "着重": "zhuó zhòng",
    "着急": "zháo jí",
    "强迫": "qiǎng pò",
    "庭长": "tíng zhǎng",
    "首相": "shǒu xiàng",
    "喇嘛": "lǎ ma",
    "镇长": "zhèn zhǎng",
    "只管": "zhǐ guǎn",
    "重重": "chóng chóng",
    "免得": "miǎn de",
    "灾难": "zāi nàn",
    "着实": "zhuó shí",
    "所得": "suǒ de",
    "度假": "dù jià",
    "真相": "zhēn xiàng",
    "相貌": "xiàng mào",
    "处分": "chǔ fèn",
    "干预": "gàn yù",
    "委屈": "wěi qu",
    "为期": "wéi qī",
    "伯伯": "bó bo",
    "圈子": "quān zi",
    "见识": "jiàn shi",
    "笼罩": "lǒng zhào",
    "外边": "wài bian",
    "与会": "yù huì",
    "都督": "dū du",
    "宰相": "zǎi xiàng",
    "较量": "jiào liàng",
    "对称": "duì chèn",
    "总长": "zǒng zhǎng",
    "相公": "xiàng gong",
    "空白": "kòng bái",
    "大王": "dài wáng",
    "打量": "dǎ liang",
    "水分": "shuǐ fèn",
    "舌头": "shé tou",
    "没收": "mò shōu",
    "行李": "xíng li",
    "判处": "pàn chǔ",
    "散文": "sǎn wén",
    "处境": "chǔ jìng",
    "树种": "shù zhǒng",
    "孙子": "sūn zi",
    "拳头": "quán tou",
    "打发": "dǎ fa",
    "组长": "zǔ zhǎng",
    "骨头": "gú tou",
    "宁可": "nìng kě",
    "更换": "gēng huàn",
    "薄弱": "bó ruò",
    "还原": "huán yuán",
    "重修": "chóng xiū",
    "东边": "dōng bian",
    "同行": "tóng háng",
    "只顾": "zhǐ gù",
    "爱好": "ài hào",
    "馒头": "mán tou",
    "军长": "jūn zhǎng",
    "散发": "sàn fà",
    "首长": "shǒu zhǎng",
    "厂长": "chǎng zhǎng",
    "司长": "sī zhǎng",
    "长子": "zhǎng zǐ",
    "强劲": "qiáng jìng",
    "恰当": "qià dàng",
    "头儿": "tou er",
    "站长": "zhàn zhǎng",
    "折腾": "zhē teng",
    "相处": "xiāng chǔ",
    "统率": "tǒng shuài",
    "中将": "zhōng jiàng",
    "命中": "mìng zhòng",
    "名将": "míng jiàng",
    "左边": "zuǒ bian",
    "木头": "mù tou",
    "动弹": "dòng dàn",
    "地壳": "dì qiào",
    "干活": "gàn huó",
    "少爷": "shào ye",
    "难民": "nàn mín",
    "水量": "shuǐ liàng",
    "补给": "bǔ jǐ",
    "尾巴": "wěi ba",
    "来得": "lái de",
    "好奇": "hào qí",
    "钥匙": "yào shi",
    "当做": "dàng zuò",
    "沉着": "chén zhuó",
    "哑巴": "yǎ ba",
    "车子": "chē zi",
    "上将": "shàng jiàng",
    "播种": "bō zhǒng",
    "恶心": "ě xin",
    "不对": "bú duì",
    "担子": "dàn zi",
    "应届": "yīng jiè",
    "行列": "háng liè",
    "主角": "zhǔ jué",
    "运转": "yùn zhuàn",
    "兄长": "xiōng zhǎng",
    "格式": "gé shi",
    "正月": "zhēng yuè",
    "营长": "yíng zhǎng",
    "当成": "dàng chéng",
    "右边": "yòu bian",
    "女婿": "nǚ xu",
    "咽喉": "yān hóu",
    "当晚": "dàng wǎn",
    "重阳": "chóng yáng",
    "化为": "huà wéi",
    "双重": "shuāng chóng",
    "吐蕃": "tǔ bō",
    "钻进": "zuān jìn",
    "乐队": "yuè duì",
    "不当": "bù dàng",
    "亮相": "liàng xiàng",
    "被子": "bèi zi",
    "舍得": "shě de",
    "杉木": "shā mù",
    "击中": "jī zhòng",
    "无处": "wú chǔ",
    "里边": "lǐ bian",
    "排长": "pái zhǎng",
    "假期": "jià qī",
    "分量": "fèn liàng",
    "数次": "shuò cì",
    "提防": "dī fáng",
    "吆喝": "yāo he",
    "查处": "chá chǔ",
    "量子": "liàng zǐ",
    "里头": "lǐ tou",
    "两行": "liǎng háng",
    "调研": "diào yán",
    "伺候": "cì hou",
    "重申": "chóng shēn",
    "枕头": "zhěn tou",
    "拚命": "pàn mìng",
    "社长": "shè zhǎng",
    "苦难": "kǔ nàn",
    "归还": "guī huán",
    "危难": "wēi nàn",
    "批量": "pī liàng",
    "畜牧": "xù mù",
    "点着": "diǎn zháo",
    "甚为": "shèn wéi",
    "小将": "xiǎo jiàng",
    "着眼": "zhuó yǎn",
    "处死": "chǔ sǐ",
    "厌恶": "yàn wù",
    "鼓乐": "gǔ yuè",
    "树干": "shù gàn",
    "秘鲁": "bì lǔ",
    "大方": "dà fang",
    "外头": "wài tou",
    "班长": "bān zhǎng",
    "星宿": "xīng xiù",
    "宁愿": "nìng yuàn",
    "钦差": "qīn chāi",
    "为数": "wéi shù",
    "勾当": "gòu dàng",
    "削减": "xuē jiǎn",
    "一发": "yī fà",
    "间谍": "jiàn dié",
    "埋怨": "mán yuàn",
    "结实": "jiē shi",
    "计量": "jì liàng",
    "淹没": "yān mò",
    "村长": "cūn zhǎng",
    "连长": "lián zhǎng",
    "自给": "zì jǐ",
    "下边": "xià bian",
    "物种": "wù zhǒng",
    "武将": "wǔ jiàng",
    "温差": "wēn chā",
    "直奔": "zhí bèn",
    "供求": "gōng qiú",
    "剂量": "jì liàng",
    "道长": "dào zhǎng",
    "泄露": "xiè lòu",
    "王八": "wáng ba",
    "切割": "qiē gē",
    "间隔": "jiàn gé",
    "一晃": "yī huǎng",
    "长假": "cháng jià",
    "令狐": "líng hú",
    "为害": "wéi hài",
    "句子": "jù zi",
    "偿还": "cháng huán",
    "疙瘩": "gē dā",
    "燕山": "yān shān",
    "堵塞": "dǔ sè",
    "夺冠": "duó guàn",
    "下调": "xià diào",
    "扎实": "zhā shi",
    "电荷": "diàn hè",
    "看守": "kān shǒu",
    "复辟": "fù bì",
    "郁闷": "yù mèn",
    "尽早": "jǐn zǎo",
    "切断": "qiē duàn",
    "指头": "zhǐ tou",
    "为生": "wéi shēng",
    "畜生": "chù sheng",
    "切除": "qiē chú",
    "着力": "zhuó lì",
    "着想": "zhuó xiǎng",
    "级差": "jí chā",
    "投奔": "tóu bèn",
    "棍子": "gùn zi",
    "含糊": "hán hu",
    "少妇": "shào fù",
    "兴致": "xìng zhì",
    "杂种": "zá zhǒng",
    "四种": "sì zhǒng",
    "纳闷": "nà mèn",
    "干流": "gàn liú",
    "卷起": "juǎn qǐ",
    "扇子": "shàn zi",
    "更改": "gēng gǎi",
    "笼络": "lǒng luò",
    "喇叭": "lǎ ba",
    "载荷": "zài hè",
    "妥当": "tuǒ dàng",
    "为难": "wéi nán",
    "着陆": "zhuó lù",
    "燕子": "yàn zi",
    "干吗": "gàn má",
    "白发": "bái fà",
    "总得": "zǒng děi",
    "夹击": "jiā jī",
    "曝光": "bào guāng",
    "曲调": "qǔ diào",
    "相机": "xiàng jī",
    "叫化": "jiào huā",
    "角逐": "jué zhú",
    "啊哟": "ā yō",
    "载重": "zài zhòng",
    "长辈": "zhǎng bèi",
    "出差": "chū chāi",
    "垛口": "duǒ kǒu",
    "撇开": "piē kāi",
    "厅长": "tīng zhǎng",
    "组分": "zǔ fèn",
    "误差": "wù chā",
    "家当": "jiā dàng",
    "传记": "zhuàn jì",
    "个子": "gè zi",
    "铺设": "pū shè",
    "干事": "gàn shì",
    "杆菌": "gǎn jūn",
    "五更": "wǔ gēng",
    "定量": "dìng liàng",
    "运载": "yùn zài",
    "会儿": "huì er",
    "酋长": "qiú zhǎng",
    "重返": "chóng fǎn",
    "差额": "chā é",
    "露面": "lòu miàn",
    "钻研": "zuān yán",
    "大城": "dài chéng",
    "上当": "shàng dàng",
    "销量": "xiāo liàng",
    "洋行": "yáng háng",
    "作坊": "zuō fang",
    "照相": "zhào xiàng",
    "哎呀": "āi yā",
    "调集": "diào jí",
    "看中": "kàn zhòng",
    "议长": "yì zhǎng",
    "风筝": "fēng zheng",
    "一应": "yī yīng",
    "辟邪": "bì xié",
    "空隙": "kòng xì",
    "更迭": "gēng dié",
    "偏差": "piān chā",
    "声调": "shēng diào",
    "农行": "nóng háng",
    "适量": "shì liàng",
    "屯子": "tún zi",
    "搜查": "sōu zhā",
    "无量": "wú liàng",
    "空地": "kòng dì",
    "调度": "diào dù",
    "一曲": "yī qǔ",
    "散射": "sǎn shè",
    "种姓": "zhǒng xìng",
    "太行": "tài háng",
    "创伤": "chuāng shāng",
    "海参": "hǎi shēn",
    "满载": "mǎn zài",
    "重叠": "chóng dié",
    "军种": "jūn zhǒng",
    "落差": "luò chā",
    "单调": "dān diào",
    "老将": "lǎo jiàng",
    "人参": "rén shēn",
    "间断": "jiàn duàn",
    "重现": "chóng xiàn",
    "夹杂": "jiā zá",
    "调用": "diào yòng",
    "萝卜": "luó bo",
    "附着": "fù zhuó",
    "应声": "yīng shēng",
    "主将": "zhǔ jiàng",
    "罪过": "zuì guo",
    "咀嚼": "jǔ jué",
    "为政": "wéi zhèng",
    "过量": "guò liàng",
    "乐曲": "yuè qǔ",
    "负荷": "fù hè",
    "枪弹": "qiāng dàn",
    "悄然": "qiǎo rán",
    "处方": "chǔ fāng",
    "悄声": "qiǎo shēng",
    "曲子": "qǔ zi",
    "情调": "qíng diào",
    "一着": "yī zhāo",
    "挑衅": "tiǎo xìn",
    "代为": "dài wéi",
    "了结": "liǎo jié",
    "打中": "dǎ zhòng",
    "酒吧": "jiǔ bā",
    "作曲": "zuò qǔ",
    "懒得": "lǎn de",
    "增量": "zēng liàng",
    "衣着": "yī zhuó",
    "部将": "bù jiàng",
    "要塞": "yào sài",
    "茶几": "chá jī",
    "杠杆": "gàng gǎn",
    "出没": "chū mò",
    "鲜有": "xiǎn yǒu",
    "间隙": "jiàn xì",
    "重担": "zhòng dàn",
    "重演": "chóng yǎn",
    "应酬": "yìng chou",
    "只当": "zhǐ dāng",
    "毋宁": "wú nìng",
    "包扎": "bāo zā",
    "前头": "qián tou",
    "卷烟": "juǎn yān",
    "非得": "fēi děi",
    "五种": "wǔ zhǒng",
    "弹道": "dàn dào",
    "上调": "shàng diào",
    "杆子": "gān zi",
    "门将": "mén jiàng",
    "后头": "hòu tou",
    "标识": "biāo zhì",
    "喝彩": "hè cǎi",
    "暖和": "nuǎn huo",
    "更深": "gēng shēn",
    "累积": "lěi jī",
    "引得": "yǐn de",
    "调遣": "diào qiǎn",
    "倔强": "jué jiàng",
    "宝藏": "bǎo zàng",
    "丧事": "sāng shì",
    "约莫": "yuē mo",
    "纤夫": "qiàn fū",
    "更替": "gēng tì",
    "装载": "zhuāng zài",
    "背包": "bēi bāo",
    "帖子": "tiě zi",
    "种群": "zhǒng qún",
    "松散": "sōng sǎn",
    "支行": "zhī háng",
    "呼喝": "hū hè",
    "可恶": "kě wù",
    "自转": "zì zhuàn",
    "供电": "gōng diàn",
    "反省": "fǎn xǐng",
    "坦率": "tǎn shuài",
    "苏打": "sū dá",
    "本分": "běn fèn",
    "落得": "luò de",
    "鄙薄": "bǐ bó",
    "相间": "xiāng jiàn",
    "单薄": "dān bó",
    "混蛋": "hún dàn",
    "发难": "fā nàn",
    "贞观": "zhēn guàn",
    "语种": "yǔ zhǒng",
    "附和": "fù hè",
    "育种": "yù zhǒng",
    "能耐": "néng nai",
    "吓唬": "xià hu",
    "未了": "wèi liǎo",
    "引着": "yǐn zháo",
    "抽调": "chōu diào",
    "沙子": "shā zi",
    "席卷": "xí juǎn",
    "标的": "biāo dì",
    "人种": "rén zhǒng",
    "别扭": "biè niu",
    "思量": "sī liang",
    "喝采": "hè cǎi",
    "论语": "lún yǔ",
    "盖子": "gài zi",
    "曲艺": "qǔ yì",
    "分外": "fèn wài",
    "弄堂": "lòng táng",
    "乐舞": "yuè wǔ",
    "雨量": "yǔ liàng",
    "毛发": "máo fà",
    "差遣": "chāi qiǎn",
    "曲目": "qǔ mù",
    "背负": "bēi fù",
    "转速": "zhuàn sù",
    "声乐": "shēng yuè",
    "夹攻": "jiā gōng",
    "供水": "gōng shuǐ",
    "主干": "zhǔ gàn",
    "逃难": "táo nàn",
    "惩处": "chéng chǔ",
    "长相": "zhǎng xiàng",
    "公差": "gōng chāi",
    "行当": "háng dang",
    "榴弹": "liú dàn",
    "省得": "shěng de",
    "条子": "tiáo zi",
    "重围": "chóng wéi",
    "阻塞": "zǔ sè",
    "劲风": "jìng fēng",
    "纠葛": "jiū gé",
    "颠簸": "diān bǒ",
    "点中": "diǎn zhòng",
    "避难": "bì nàn",
    "重创": "zhòng chuāng",
    "姥姥": "lǎo lao",
    "迷糊": "mí hu",
    "公家": "gōng jia",
    "几率": "jī lǜ",
    "苦闷": "kǔ mèn",
    "度量": "dù liàng",
    "差错": "chā cuò",
    "暑假": "shǔ jià",
    "参差": "cēn cī",
    "搭载": "dā zài",
    "助长": "zhù zhǎng",
    "相称": "xiāng chèn",
    "红晕": "hóng yùn",
    "舍命": "shě mìng",
    "喜好": "xǐ hào",
    "列传": "liè zhuàn",
    "劲敌": "jìng dí",
    "蛤蟆": "há má",
    "三重": "sān chóng",
    "请假": "qǐng jià",
    "钉子": "dīng zi",
    "剧种": "jù zhǒng",
    "沉没": "chén mò",
    "高丽": "gāo lí",
    "休假": "xiū jià",
    "无为": "wú wéi",
    "巴结": "bā jì",
    "了得": "liǎo de",
    "变相": "biàn xiàng",
    "核弹": "hé dàn",
    "亲家": "qìng jia",
    "承载": "chéng zài",
    "行家": "háng jia",
    "喝问": "hè wèn",
    "还击": "huán jī",
    "交还": "jiāo huán",
    "当夜": "dàng yè",
    "将令": "jiàng lìng",
    "单于": "chán yú",
    "空缺": "kòng quē",
    "绿林": "lù lín",
    "胆量": "dǎn liàng",
    "执着": "zhí zhuó",
    "低调": "dī diào",
    "责难": "zé nàn",
    "闭塞": "bì sè",
    "轻薄": "qīng bó",
    "得当": "dé dàng",
    "占卜": "zhān bǔ",
    "排行": "pái háng",
    "扫帚": "sào zhou",
    "龟兹": "qiū cí",
    "年长": "nián zhǎng",
    "外传": "wài zhuàn",
    "头子": "tóu zi",
    "裁缝": "cái féng",
    "礼乐": "lǐ yuè",
    "血泊": "xuè pō",
    "散乱": "sǎn luàn",
    "动量": "dòng liàng",
    "倒腾": "dǎo teng",
    "取舍": "qǔ shě",
    "咱家": "zá jiā",
    "长发": "cháng fà",
    "爪哇": "zhǎo wā",
    "弹壳": "dàn ké",
    "省悟": "xǐng wù",
    "嚷嚷": "rāng rang",
    "连累": "lián lěi",
    "应得": "yīng dé",
    "族长": "zú zhǎng",
    "患难": "huàn nàn",
    "抽查": "chōu zhā",
    "柜子": "guì zi",
    "擂鼓": "léi gǔ",
    "眩晕": "xuàn yùn",
    "调配": "diào pèi",
    "躯干": "qū gàn",
    "差役": "chāi yì",
    "坎坷": "kǎn kě",
    "少儿": "shào ér",
    "乐团": "yuè tuán",
    "养分": "yǎng fèn",
    "退还": "tuì huán",
    "格调": "gé diào",
    "语调": "yǔ diào",
    "音调": "yīn diào",
    "乐府": "yuè fǔ",
    "古朴": "gǔ piáo",
    "打点": "dǎ dian",
    "差使": "chāi shǐ",
    "磨难": "mó nàn",
    "匀称": "yún chèn",
    "瘦削": "shòu xuē",
    "变种": "biàn zhǒng",
    "膏药": "gāo yao",
    "吞没": "tūn mò",
    "调任": "diào rèn",
    "散居": "sǎn jū",
    "上头": "shàng tou",
    "大难": "dà nàn",
    "风靡": "fēng mǐ",
    "放假": "fàng jià",
    "估量": "gū liang",
    "失当": "shī dàng",
    "中弹": "zhòng dàn",
    "妄为": "wàng wéi",
    "长者": "zhǎng zhě",
    "起哄": "qǐ hòng",
    "末了": "mò liǎo",
    "相声": "xiàng sheng",
    "校正": "jiào zhèng",
    "劝降": "quàn xiáng",
    "矢量": "shǐ liàng",
    "沉闷": "chén mèn",
    "给与": "jǐ yǔ",
    "解法": "xiè fǎ",
    "塞外": "sài wài",
    "将校": "jiàng xiào",
    "嗜好": "shì hào",
    "没落": "mò luò",
    "朴刀": "pō dāo",
    "良种": "liáng zhǒng",
    "片子": "piān zi",
    "切削": "qiē xiāo",
    "弹丸": "dàn wán",
    "昆曲": "kūn qǔ",
    "雅致": "yǎ zhi",
    "稀薄": "xī bó",
    "亏得": "kuī de",
    "死难": "sǐ nàn",
    "间歇": "jiàn xiē",
    "翘首": "qiáo shǒu",
    "同种": "tóng zhǒng",
    "色调": "sè diào",
    "处决": "chǔ jué",
    "表率": "biǎo shuài",
    "尺子": "chǐ zi",
    "兵种": "bīng zhǒng",
    "招降": "zhāo xiáng",
    "有种": "yǒu zhǒng",
    "称职": "chèn zhí",
    "斗篷": "dǒu peng",
    "铺子": "pù zi",
    "底子": "dǐ zi",
    "负载": "fù zài",
    "干警": "gàn jǐng",
    "倒数": "dào shǔ",
    "将官": "jiàng guān",
    "锄头": "chú tou",
    "归降": "guī xiáng",
    "疟疾": "nüè ji",
    "唠叨": "láo dao",
    "限量": "xiàn liàng",
    "一打": "yī dá",
    "屏息": "bǐng xī",
    "重逢": "chóng féng",
    "器乐": "qì yuè",
    "氢弹": "qīng dàn",
    "脖颈": "bó gěng",
    "妃子": "fēi zi",
    "追查": "zhuī zhā",
    "处事": "chǔ shì",
    "参量": "cān liàng",
    "轻率": "qīng shuài",
    "缥缈": "piāo miǎo",
    "幸得": "xìng de",
    "中奖": "zhòng jiǎng",
    "才干": "cái gàn",
    "施舍": "shī shě",
    "卷子": "juǎn zi",
    "游说": "yóu shuì",
    "巷子": "xiàng zi",
    "臂膀": "bì bǎng",
    "切勿": "qiē wù",
    "看管": "kān guǎn",
    "风头": "fēng tou",
    "精干": "jīng gàn",
    "高差": "gāo chā",
    "恐吓": "kǒng hè",
    "扁担": "biǎn dàn",
    "给养": "jǐ yǎng",
    "格子": "gé zi",
    "供需": "gōng xū",
    "反差": "fǎn chā",
    "飞弹": "fēi dàn",
    "微薄": "wēi bó",
    "发型": "fà xíng",
    "勘查": "kān zhā",
    "即兴": "jí xìng",
    "攒动": "cuán dòng",
    "间或": "jiàn huò",
    "浅薄": "qiǎn bó",
    "乐章": "yuè zhāng",
    "顺差": "shùn chā",
    "调子": "diào zi",
    "相位": "xiàng wèi",
    "转子": "zhuàn zǐ",
    "劲旅": "jìng lǚ",
    "咔嚓": "kā chā",
    "了事": "liǎo shì",
    "转悠": "zhuàn you",
    "芍药": "sháo yao",
    "当铺": "dàng pù",
    "爪子": "zhuǎ zi",
    "单子": "dān zi",
    "好战": "hào zhàn",
    "燕麦": "yān mài",
    "只许": "zhǐ xǔ",
    "干练": "gàn liàn",
    "女将": "nǚ jiàng",
    "酒量": "jiǔ liàng",
    "划船": "huá chuán",
    "伎俩": "jì liǎng",
    "挑拨": "tiǎo bō",
    "少校": "shào xiào",
    "着落": "zhuó luò",
    "憎恶": "zēng wù",
    "刻薄": "kè bó",
    "口角": "kǒu jué",
    "马尾": "mǎ yǐ",
    "要挟": "yāo xié",
    "引种": "yǐn zhǒng",
    "用处": "yòng chǔ",
    "还手": "huán shǒu",
    "模具": "mú jù",
    "执著": "zhí zhuó",
    "喝令": "hè lìng",
    "火种": "huǒ zhǒng",
    "争得": "zhēng de",
    "保长": "bǎo zhǎng",
    "吸着": "xī zhuó",
    "症结": "zhēng jié",
    "公转": "gōng zhuàn",
    "校勘": "jiào kān",
    "重提": "chóng tí",
    "扫兴": "sǎo xìng",
    "舞曲": "wǔ qǔ",
    "铺盖": "pū gài",
    "长史": "zhǎng shǐ",
    "差价": "chā jià",
    "压根": "yà gēn",
    "怔住": "zhèng zhù",
    "强人": "qiǎng rén",
    "应允": "yīng yǔn",
    "切入": "qiē rù",
    "战将": "zhàn jiàng",
    "年少": "nián shào",
    "舍身": "shě shēn",
    "执拗": "zhí niù",
    "处世": "chǔ shì",
    "中风": "zhòng fēng",
    "等量": "děng liàng",
    "不菲": "bù fěi",
    "放量": "fàng liàng",
    "腔调": "qiāng diào",
    "老少": "lǎo shào",
    "没入": "mò rù",
    "瓜葛": "guā gé",
    "将帅": "jiàng shuài",
    "车载": "chē zài",
    "窝囊": "wō nāng",
    "长进": "zhǎng jìn",
    "可汗": "kè hán",
    "并州": "bīng zhōu",
    "供销": "gōng xiāo",
    "切片": "qiē piàn",
    "差事": "chāi shì",
    "知会": "zhī hui",
    "鹰爪": "yīng zhǎo",
    "处女": "chǔ nǚ",
    "切磋": "qiē cuō",
    "日头": "rì tou",
    "押解": "yā jiè",
    "滋长": "zī zhǎng",
    "道观": "dào guàn",
    "脚色": "jué sè",
    "当量": "dāng liàng",
    "婆家": "pó jia",
    "缘分": "yuán fèn",
    "空闲": "kòng xián",
    "曲牌": "qǔ pái",
    "好色": "hào sè",
    "行会": "háng huì",
    "怒喝": "nù hè",
    "笼统": "lǒng tǒng",
    "边塞": "biān sài",
    "何曾": "hé zēng",
    "重合": "chóng hé",
    "插曲": "chā qǔ",
    "零散": "líng sǎn",
    "轰隆": "hōng lōng",
    "化子": "huā zi",
    "内蒙": "nèi měng",
    "数落": "shǔ luo",
    "逆差": "nì chā",
    "牟利": "móu lì",
    "栅栏": "zhà lan",
    "中标": "zhòng biāo",
    "调档": "diào dàng",
    "佝偻": "gōu lóu",
    "场子": "chǎng zi",
    "甲壳": "jiǎ qiào",
    "重温": "chóng wēn",
    "炮制": "páo zhì",
    "返还": "fǎn huán",
    "自传": "zì zhuàn",
    "高调": "gāo diào",
    "词曲": "cí qǔ",
    "受难": "shòu nàn",
    "殷红": "yān hóng",
    "要约": "yāo yuē",
    "固着": "gù zhuó",
    "强求": "qiǎng qiú",
    "本相": "běn xiàng",
    "骄横": "jiāo hèng",
    "草率": "cǎo shuài",
    "气闷": "qì mèn",
    "着色": "zhuó sè",
    "宁肯": "nìng kěn",
    "兴头": "xìng tou",
    "拘泥": "jū nì",
    "夹角": "jiā jiǎo",
    "发髻": "fà jì",
    "猛将": "měng jiàng",
    "劫难": "jié nàn",
    "约摸": "yuē mo",
    "拖累": "tuō lěi",
    "呢绒": "ní róng",
    "钻探": "zuān tàn",
    "夹层": "jiā céng",
    "把子": "bà zi",
    "落魄": "luò tuò",
    "巷道": "hàng dào",
    "运量": "yùn liàng",
    "头里": "tóu li",
    "解闷": "jiě mèn",
    "空儿": "kòng ér",
    "估摸": "gū mo",
    "好客": "hào kè",
    "小曲": "xiǎo qǔ",
    "折衷": "shé zhōng",
    "钻孔": "zuān kǒng",
    "序曲": "xù qǔ",
    "糊弄": "hù nong",
    "荥阳": "xíng yáng",
    "道行": "dào héng",
    "烦闷": "fán mèn",
    "仓卒": "cāng cù",
    "分叉": "fēn chà",
    "曲率": "qǔ lǜ",
    "相片": "xiàng piān",
    "内行": "nèi háng",
    "工种": "gōng zhǒng",
    "厂子": "chǎng zi",
    "小调": "xiǎo diào",
    "少阳": "shào yáng",
    "受降": "shòu xiáng",
    "染坊": "rǎn fáng",
    "胳臂": "gē bei",
    "将门": "jiàng mén",
    "模板": "mú bǎn",
    "配给": "pèi jǐ",
    "为伍": "wéi wǔ",
    "跟头": "gēn tou",
    "划算": "huá suàn",
    "累赘": "léi zhui",
    "哄笑": "hōng xiào",
    "晕眩": "yùn xuàn",
    "干掉": "gàn diào",
    "缝制": "féng zhì",
    "难处": "nán chǔ",
    "着意": "zhuó yì",
    "蛮横": "mán hèng",
    "干将": "gàn jiàng",
    "奇数": "jī shù",
    "短发": "duǎn fà",
    "生还": "shēng huán",
    "还清": "huán qīng",
    "看护": "kān hù",
    "直率": "zhí shuài",
    "奏乐": "zòu yuè",
    "载客": "zài kè",
    "专横": "zhuān hèng",
    "湮没": "yān mò",
    "空格": "kòng gé",
    "铺垫": "pū diàn",
    "良将": "liáng jiàng",
    "哗啦": "huā lā",
    "散漫": "sǎn màn",
    "脱发": "tuō fà",
    "两重": "liǎng chóng",
    "送还": "sòng huán",
    "埋没": "mái mò",
    "累及": "lěi jí",
    "薄雾": "bó wù",
    "调离": "diào lí",
    "舌苔": "shé tāi",
    "机长": "jī zhǎng",
    "栓塞": "shuān sè",
    "配角": "pèi jué",
    "切口": "qiē kǒu",
    "创口": "chuāng kǒu",
    "哈欠": "hā qian",
    "实弹": "shí dàn",
    "铺平": "pū píng",
    "哈达": "hǎ dá",
    "懒散": "lǎn sǎn",
    "实干": "shí gàn",
    "填空": "tián kòng",
    "刁钻": "diāo zuān",
    "乐师": "yuè shī",
    "量变": "liàng biàn",
    "诱降": "yòu xiáng",
    "搪塞": "táng sè",
    "购得": "gòu de",
    "征调": "zhēng diào",
    "夹道": "jiā dào",
    "干咳": "gān ké",
    "乐工": "yuè gōng",
    "商行": "shāng háng",
    "划过": "huá guò",
    "着火": "zháo huǒ",
    "更正": "gēng zhèng",
    "给付": "jǐ fù",
    "空子": "kòng zi",
    "哪吒": "né zhā",
    "散曲": "sǎn qǔ",
    "行规": "háng guī",
    "正着": "zhèng zháo",
    "刁难": "diāo nàn",
    "刷子": "shuā zi",
    "丧葬": "sāng zàng",
    "夹带": "jiā dài",
    "安分": "ān fèn",
    "中意": "zhòng yì",
    "长孙": "zhǎng sūn",
    "校订": "jiào dìng",
    "卷曲": "juǎn qū",
    "载运": "zài yùn",
    "投弹": "tóu dàn",
    "柞蚕": "zuò cán",
    "份量": "fèn liàng",
    "外行": "wài háng",
    "调换": "diào huàn",
    "了然": "liǎo rán",
    "咧嘴": "liě zuǐ",
    "典当": "diǎn dàng",
    "寒假": "hán jià",
    "长兄": "zhǎng xiōng",
    "给水": "jǐ shuǐ",
    "须发": "xū fà",
    "枝干": "zhī gàn",
    "属相": "shǔ xiang",
    "哄抢": "hōng qiǎng",
    "刻划": "kè huá",
    "手把": "shǒu bà",
    "塞子": "sāi zi",
    "单干": "dān gàn",
    "还乡": "huán xiāng",
    "兆头": "zhào tou",
    "寺观": "sì guàn",
    "督率": "dū shuài",
    "受累": "shòu lěi",
    "天台": "tiān tāi",
    "啊哈": "ā hā",
    "割舍": "gē shě",
    "抹布": "mā bù",
    "好恶": "hào wù",
    "下处": "xià chǔ",
    "消长": "xiāo zhǎng",
    "离间": "lí jiàn",
    "准头": "zhǔn tou",
    "校对": "jiào duì",
    "什物": "shí wù",
    "番禺": "pān yú",
    "佛爷": "fó ye",
    "备查": "bèi zhā",
    "吗啡": "mǎ fēi",
    "盐分": "yán fèn",
    "当月": "dàng yuè",
    "虎将": "hǔ jiàng",
    "薄荷": "bò he",
    "独处": "dú chǔ",
    "空位": "kòng wèi",
    "铺路": "pū lù",
    "乌拉": "wù la",
    "调回": "diào huí",
    "来头": "lái tou",
    "闲散": "xián sǎn",
    "胶卷": "jiāo juǎn",
    "冒失": "mào shi",
    "干劲": "gàn jìn",
    "弦乐": "xián yuè",
    "行伍": "háng wǔ",
    "相国": "xiàng guó",
    "查查": "zhā zhā",
    "丹参": "dān shēn",
    "助兴": "zhù xìng",
    "铺开": "pū kāi",
    "次长": "cì zhǎng",
    "发卡": "fà qiǎ",
    "拮据": "jié jū",
    "刹车": "shā chē",
    "生发": "shēng fà",
    "重播": "chóng bō",
    "缝合": "féng hé",
    "音量": "yīn liàng",
    "少尉": "shào wèi",
    "殉难": "xùn nàn",
    "冲压": "chòng yā",
    "苍劲": "cāng jìng",
    "厚薄": "hòu bó",
    "威吓": "wēi hè",
    "外相": "wài xiàng",
    "曲谱": "qǔ pǔ",
    "呼号": "hū háo",
    "着迷": "zháo mí",
    "挑担": "tiāo dàn",
    "纹路": "wén lu",
    "一沓": "yī dá",
    "还俗": "huán sú",
    "强横": "qiáng hèng",
    "四行": "sì háng",
    "着数": "zhāo shù",
    "国难": "guó nàn",
    "降顺": "xiáng shùn",
    "挑明": "tiǎo míng",
    "眯缝": "mī feng",
    "分内": "fèn nèi",
    "更衣": "gēng yī",
    "软和": "ruǎn huo",
    "尽兴": "jìn xìng",
    "号子": "hào zi",
    "爪牙": "zhǎo yá",
    "败将": "bài jiàng",
    "猜中": "cāi zhòng",
    "结扎": "jié zā",
    "没空": "méi kòng",
    "夹缝": "jiā fèng",
    "拾掇": "shí duo",
    "掺和": "chān huo",
    "簸箕": "bò ji",
    "电量": "diàn liàng",
    "荷载": "hè zǎi",
    "漯河": "luò tà hé",
    "调式": "diào shì",
    "处身": "chǔ shēn",
    "打手": "dǎ shou",
    "弹弓": "dàn gōng",
    "横蛮": "hèng mán",
    "能干": "néng gàn",
    "校点": "jiào diǎn",
    "加载": "jiā zài",
    "干校": "gàn xiào",
    "哄传": "hōng chuán",
    "校注": "jiào zhù",
    "淤塞": "yū sè",
    "马扎": "mǎ zhá",
    "月氏": "yuè zhī",
    "高干": "gāo gàn",
    "经传": "jīng zhuàn",
    "曾孙": "zēng sūn",
    "好斗": "hào dòu",
    "关卡": "guān qiǎ",
    "逃奔": "táo bèn",
    "磨蹭": "mó ceng",
    "牟取": "móu qǔ",
    "颤栗": "zhàn lì",
    "蚂蚱": "mà zha",
    "撮合": "cuō he",
    "趔趄": "liè qie",
    "摔打": "shuāi dá",
    "台子": "tái zi",
    "分得": "fēn de",
    "粘着": "nián zhuó",
    "采邑": "cài yì",
    "散装": "sǎn zhuāng",
    "婀娜": "ē nuó",
    "兴味": "xìng wèi",
    "行头": "xíng tou",
    "气量": "qì liàng",
    "调运": "diào yùn",
    "处治": "chǔ zhì",
    "乐音": "yuè yīn",
    "组曲": "zǔ qǔ",
    "充塞": "chōng sè",
    "恫吓": "dòng hè",
    "论调": "lùn diào",
    "相中": "xiāng zhòng",
    "民乐": "mín yuè",
    "炮仗": "pào zhang",
    "丧服": "sāng fú",
    "骁将": "xiāo jiàng",
    "量刑": "liàng xíng",
    "缝补": "féng bǔ",
    "财会": "cái kuài",
    "大干": "dà gàn",
    "呱呱": "gū gū",
    "历数": "lì shǔ",
    "校场": "jiào chǎng",
    "塞北": "sài běi",
    "识相": "shí xiàng",
    "辱没": "rǔ mò",
    "鲜亮": "xiān liang",
    "语塞": "yǔ sè",
    "露脸": "lòu liǎn",
    "凉快": "liáng kuai",
    "腰杆": "yāo gǎn",
    "溜达": "liū da",
    "嘎嘎": "gā gā",
    "公干": "gōng gàn",
    "桔梗": "jié gěng",
    "挑逗": "tiǎo dòu",
    "看门": "kān mén",
    "海难": "hǎi nàn",
    "乐歌": "yuè gē",
    "拓片": "tà piàn",
    "挑动": "tiǎo dòng",
    "准将": "zhǔn jiàng",
    "落难": "luò nàn",
    "遒劲": "qiú jìng",
    "磨坊": "mò fáng",
    "逶迤": "wēi yí",
    "搅和": "jiǎo huo",
    "摩挲": "mā sā",
    "作弄": "zuō nòng",
    "苗头": "miáo tou",
    "打颤": "dǎ zhàn",
    "大藏": "dà zàng",
    "畜牲": "chù sheng",
    "勾搭": "gōu da",
    "树荫": "shù yīn",
    "树杈": "shù chà",
    "铁杆": "tiě gǎn",
    "将相": "jiàng xiàng",
    "份子": "fèn zi",
    "视差": "shì chā",
    "绿荫": "lǜ yīn",
    "枪杆": "qiāng gǎn",
    "缝纫": "féng rèn",
    "愁闷": "chóu mèn",
    "点将": "diǎn jiàng",
    "华佗": "huà tuó",
    "劲射": "jìng shè",
    "箱笼": "xiāng lǒng",
    "终了": "zhōng liǎo",
    "鬓发": "bìn fà",
    "结巴": "jiē ba",
    "苦干": "kǔ gàn",
    "看家": "kān jiā",
    "正旦": "zhēng dàn",
    "中肯": "zhòng kěn",
    "文种": "wén zhǒng",
    "食量": "shí liàng",
    "宫调": "gōng diào",
    "间作": "jiàn zuò",
    "弹片": "dàn piàn",
    "差池": "chā chí",
    "漂白": "piǎo bái",
    "杠子": "gàng zi",
    "调处": "tiáo chǔ",
    "好动": "hào dòng",
    "转炉": "zhuàn lú",
    "屏气": "bǐng qì",
    "夹板": "jiā bǎn",
    "哀乐": "āi yuè",
    "干道": "gàn dào",
    "苦处": "kǔ chǔ",
    "劈柴": "pǐ chái",
    "长势": "zhǎng shì",
    "天华": "tiān huā",
    "共处": "gòng chǔ",
    "严查": "yán zhā",
    "校验": "jiào yàn",
    "出塞": "chū sài",
    "弹子": "dàn zǐ",
    "磨盘": "mò pán",
    "萎靡": "wěi mǐ",
    "奔丧": "bēn sāng",
    "唱和": "chàng hè",
    "大调": "dà diào",
    "非分": "fēi fèn",
    "钻营": "zuān yíng",
    "夹子": "jiā zi",
    "超载": "chāo zài",
    "更始": "gēng shǐ",
    "铃铛": "líng dang",
    "披散": "pī sǎn",
    "遭难": "zāo nàn",
    "发还": "fā huán",
    "转轮": "zhuàn lún",
    "横财": "hèng cái",
    "泡桐": "pāo tóng",
    "抛撒": "pāo sǎ",
    "天呀": "tiān yā",
    "糊糊": "hū hū",
    "躯壳": "qū qiào",
    "通量": "tōng liàng",
    "奉还": "fèng huán",
    "午觉": "wǔ jiào",
    "闷棍": "mèn gùn",
    "浪头": "làng tou",
    "砚台": "yàn tāi",
    "油坊": "yóu fáng",
    "学长": "xué zhǎng",
    "过载": "guò zài",
    "笔调": "bǐ diào",
    "衣被": "yì bèi",
    "畜产": "xù chǎn",
    "打更": "dǎ gēng",
    "调阅": "diào yuè",
    "蛮干": "mán gàn",
    "曾祖": "zēng zǔ",
    "本行": "běn háng",
    "提干": "tí gàn",
    "变调": "biàn diào",
    "覆没": "fù mò",
    "模子": "mú zi",
    "乐律": "yuè lǜ",
    "称心": "chèn xīn",
    "木杆": "mù gǎn",
    "套曲": "tào qǔ",
    "重印": "chóng yìn",
    "自省": "zì xǐng",
    "提调": "tí diào",
    "看相": "kàn xiàng",
    "芋头": "yù tou",
    "下切": "xià qiē",
    "塞上": "sài shàng",
    "铺张": "pū zhāng",
    "藤蔓": "téng wàn",
    "薄幸": "bó xìng",
    "非难": "fēi nàn",
    "解数": "xiè shù",
    "劣种": "liè zhǒng",
    "褪去": "tùn qù",
    "霰弹": "xiàn dàn",
    "柚木": "yóu mù",
    "重载": "zhòng zài",
    "二重": "èr chóng",
    "痕量": "hén liàng",
    "雅乐": "yǎ yuè",
    "号哭": "háo kū",
    "诈降": "zhà xiáng",
    "猪圈": "zhū juàn",
    "咋舌": "zé shé",
    "铣床": "xǐ chuáng",
    "防弹": "fáng dàn",
    "健将": "jiàn jiàng",
    "丽水": "lí shuǐ",
    "削发": "xuē fà",
    "空当": "kòng dāng",
    "多相": "duō xiàng",
    "鲜见": "xiǎn jiàn",
    "划桨": "huá jiǎng",
    "载波": "zài bō",
    "跳蚤": "tiào zao",
    "俏皮": "qiào pi",
    "吧嗒": "bā dā",
    "结发": "jié fà",
    "了断": "liǎo duàn",
    "同调": "tóng diào",
    "石磨": "shí mò",
    "时差": "shí chā",
    "鼻塞": "bí sè",
    "挑子": "tiāo zi",
    "推磨": "tuī mò",
    "武侯": "wǔ hòu",
    "抹煞": "mǒ shā",
    "调转": "diào zhuǎn",
    "籍没": "jí mò",
    "测度": "cè duó",
    "还债": "huán zhài",
    "调演": "diào yǎn",
    "分划": "fēn huá",
    "奇偶": "jī ǒu",
    "断喝": "duàn hè",
    "闷雷": "mèn léi",
    "狼藉": "láng jí",
    "饭量": "fàn liàng",
    "还礼": "huán lǐ",
    "转调": "zhuǎn diào",
    "星相": "xīng xiàng",
    "手相": "shǒu xiàng",
    "配乐": "pèi yuè",
    "盖头": "gài tou",
    "连杆": "lián gǎn",
    "簿记": "bù jì",
    "刀把": "dāo bà",
    "量词": "liàng cí",
    "名角": "míng jué",
    "步调": "bù diào",
    "校本": "jiào běn",
    "曲江": "qǔ jiāng",
    "账簿": "zhàng bù",
    "隽永": "juàn yǒng",
    "哈罗": "hā luo",
    "稍为": "shāo wéi",
    "易传": "yì zhuàn",
    "乐谱": "yuè pǔ",
    "牵累": "qiān lěi",
    "答理": "dā li",
    "喝斥": "hè chì",
    "吟哦": "yín é",
    "干渠": "gàn qú",
    "海量": "hǎi liàng",
    "精当": "jīng dàng",
    "着床": "zhuó chuáng",
    "月相": "yuè xiàng",
    "庶几": "shù jī",
    "宫观": "gōng guàn",
    "论处": "lùn chǔ",
    "征辟": "zhēng bì",
    "厚朴": "hòu pò",
    "介壳": "jiè qiào",
    "吭哧": "kēng chi",
    "咯血": "kǎ xiě",
    "铺陈": "pū chén",
    "重生": "chóng shēng",
    "乐理": "yuè lǐ",
    "哀号": "āi háo",
    "藏历": "zàng lì",
    "琴曲": "qín qǔ",
    "神曲": "shén qǔ",
    "刚劲": "gāng jìng",
    "削平": "xuē píng",
    "浓荫": "nóng yīn",
    "城垛": "chéng duǒ",
    "钢种": "gāng zhǒng",
    "识记": "zhì jì",
    "当差": "dāng chāi",
    "正传": "zhèng zhuàn",
    "并处": "bìng chǔ",
    "空难": "kōng nàn",
    "创面": "chuāng miàn",
    "旦角": "dàn jué",
    "薄礼": "bó lǐ",
    "晃荡": "huàng dang",
    "臊子": "sào zi",
    "家什": "jiā shí",
    "闷头": "mèn tóu",
    "美发": "měi fà",
    "度数": "dù shu",
    "着凉": "zháo liáng",
    "闯将": "chuǎng jiàng",
    "几案": "jī àn",
    "姘头": "pīn tou",
    "急难": "jí nàn",
    "差数": "chā shù",
    "散碎": "sǎn suì",
    "壅塞": "yōng sè",
    "寒颤": "hán zhàn",
    "牵强": "qiān qiǎng",
    "无间": "wú jiàn",
    "轮转": "lún zhuàn",
    "号叫": "háo jiào",
    "铺排": "pū pái",
    "降伏": "xiáng fú",
    "轧钢": "zhá gāng",
    "东阿": "dōng ē",
    "病假": "bìng jià",
    "累加": "lěi jiā",
    "梗塞": "gěng sè",
    "弹夹": "dàn jiā",
    "钻心": "zuān xīn",
    "晃眼": "huǎng yǎn",
    "魔爪": "mó zhǎo",
    "标量": "biāo liàng",
    "憋闷": "biē mèn",
    "猜度": "cāi duó",
    "处士": "chǔ shì",
    "官差": "guān chāi",
    "讨还": "tǎo huán",
    "长门": "zhǎng mén",
    "馏分": "liú fèn",
    "里弄": "lǐ lòng",
    "色相": "sè xiàng",
    "雅兴": "yǎ xìng",
    "角力": "jué lì",
    "弹坑": "dàn kēng",
    "枝杈": "zhī chà",
    "夹具": "jiā jù",
    "处刑": "chǔ xíng",
    "悍将": "hàn jiàng",
    "好学": "hào xué",
    "银发": "yín fà",
    "扫把": "sào bǎ",
    "法相": "fǎ xiàng",
    "贵干": "guì gàn",
    "供气": "gōng qì",
    "空余": "kòng yú",
    "捆扎": "kǔn zā",
    "瘠薄": "jí bó",
    "浆糊": "jiàng hu",
    "嘎吱": "gā zhī",
    "不遂": "bù suí",
    "调令": "diào lìng",
    "法帖": "fǎ tiè",
    "淋病": "lìn bìng",
    "调派": "diào pài",
    "转盘": "zhuàn pán",
    "供稿": "gōng gǎo",
    "差官": "chāi guān",
    "忧闷": "yōu mèn",
    "重犯": "chóng fàn",
    "教长": "jiào zhǎng",
    "重唱": "chóng chàng",
    "税种": "shuì zhǒng",
    "绝种": "jué zhǒng",
    "酒兴": "jiǔ xìng",
    "乐坛": "yuè tán",
    "花呢": "huā ní",
    "叱喝": "chì hè",
    "膀臂": "bǎng bì",
    "重头": "chóng tóu",
    "得空": "dé kòng",
    "转圈": "zhuàn quān",
    "横暴": "hèng bào",
    "哄抬": "hōng tái",
    "引吭": "yǐn háng",
    "载货": "zài huò",
    "中计": "zhòng jì",
    "官长": "guān zhǎng",
    "相面": "xiàng miàn",
    "看头": "kàn tou",
    "盼头": "pàn tou",
    "意兴": "yì xìng",
    "军乐": "jūn yuè",
    "累次": "lěi cì",
    "骨嘟": "gū dū",
    "燕赵": "yān zhào",
    "报丧": "bào sāng",
    "弥撒": "mí sa",
    "挨斗": "ái dòu",
    "扁舟": "piān zhōu",
    "丑角": "chǒu jué",
    "吊丧": "diào sāng",
    "强将": "qiáng jiàng",
    "行号": "háng háo",
    "重奏": "chóng zòu",
    "发辫": "fà biàn",
    "着魔": "zháo mó",
    "着法": "zhāo fǎ",
    "盛放": "chéng fàng",
    "填塞": "tián sè",
    "凶横": "xiōng hèng",
    "稽首": "qǐ shǒu",
    "碑帖": "bēi tiè",
    "冲量": "chōng liàng",
    "发菜": "fà cài",
    "假发": "jiǎ fà",
    "翻卷": "fān juǎn",
    "小量": "xiǎo liàng",
    "胶着": "jiāo zhuó",
    "里子": "lǐ zi",
    "调调": "diào diao",
    "散兵": "sǎn bīng",
    "高挑": "gāo tiǎo",
    "播撒": "bō sǎ",
    "夹心": "jiā xīn",
    "扇动": "shān dòng",
    "叨扰": "tāo rǎo",
    "霓裳": "ní cháng",
    "捻子": "niǎn zi",
    "弥缝": "mí féng",
    "撒布": "sǎ bù",
    "元曲": "yuán qǔ",
    "场院": "cháng yuàn",
    "纯种": "chún zhǒng",
    "省亲": "xǐng qīn",
    "提拉": "dī le",
    "惯量": "guàn liàng",
    "强逼": "qiǎng bī",
    "强征": "qiǎng zhēng",
    "晕车": "yùn chē",
    "数道": "shǔ dào",
    "带累": "dài lěi",
    "拓本": "tà běn",
    "嫌恶": "xián wù",
    "宿将": "sù jiàng",
    "龟裂": "jūn liè",
    "缠夹": "chán jiā",
    "发式": "fà shì",
    "隔扇": "gé shān",
    "行货": "háng huò",
    "天分": "tiān fèn",
    "癖好": "pǐ hào",
    "四通": "sì tòng",
    "白术": "bái zhú",
    "划伤": "huá shāng",
    "角斗": "jué dòu",
    "听差": "tīng chāi",
    "岁差": "suì chā",
    "丧礼": "sāng lǐ",
    "脉脉": "mò mò",
    "削瘦": "xuē shòu",
    "撒播": "sǎ bō",
    "莎草": "suō cǎo",
    "犍为": "qián wéi",
    "调头": "diào tóu",
    "龙卷": "lóng juǎn",
    "外调": "wài diào",
    "字帖": "zì tiè",
    "卷发": "juǎn fà",
    "孬种": "nāo zhǒng",
    "九种": "jiǔ zhǒng",
    "揣度": "chuǎi duó",
    "洋相": "yáng xiàng",
    "散光": "sǎn guāng",
    "骨碌": "gū lu",
    "薄命": "bó mìng",
    "笼头": "lóng tou",
    "咽炎": "yān yán",
    "碌碡": "liù zhou",
    "片儿": "piān er",
    "纤手": "qiàn shǒu",
    "散体": "sǎn tǐ",
    "内省": "nèi xǐng",
    "强留": "qiǎng liú",
    "解送": "jiè sòng",
    "反间": "fǎn jiàn",
    "少壮": "shào zhuàng",
    "一服": "yī fù",
    "留空": "liú kòng",
    "告假": "gào jià",
    "咳血": "ké xiě",
    "薄暮": "bó mù",
    "铺轨": "pū guǐ",
    "磨削": "mó xuē",
    "治丧": "zhì sāng",
    "叉子": "chā zi",
    "哄动": "hōng dòng",
    "蛾子": "é zi",
    "糜子": "méi zi",
    "出落": "chū là",
    "股长": "gǔ zhǎng",
    "贵处": "guì chǔ",
    "还魂": "huán hún",
    "例假": "lì jià",
    "曲池": "qǔ chí",
    "刹住": "shā zhù",
    "身量": "shēn liàng",
    "懂行": "dǒng háng",
    "同好": "tóng hào",
    "孽种": "niè zhǒng",
    "选种": "xuǎn zhǒng",
    "小种": "xiǎo zhǒng",
    "模量": "mó liàng",
    "更生": "gēng shēng",
    "服丧": "fú sāng",
    "率直": "shuài zhí",
    "字模": "zì mú",
    "散架": "sǎn jià",
    "答腔": "dā qiāng",
    "交恶": "jiāo wù",
    "薄情": "bó qíng",
    "眼泡": "yǎn pāo",
    "袅娜": "niǎo nuó",
    "草垛": "cǎo duǒ",
    "冲劲": "chòng jìn",
    "呢喃": "ní nán",
    "切中": "qiè zhòng",
    "挑灯": "tiǎo dēng",
    "还愿": "huán yuàn",
    "激将": "jī jiàng",
    "更鼓": "gēng gǔ",
    "没药": "mò yào",
    "难友": "nàn yǒu",
    "败兴": "bài xìng",
    "切面": "qiē miàn",
    "散户": "sǎn hù",
    "累进": "lěi jìn",
    "背带": "bēi dài",
    "秤杆": "chèng gǎn",
    "碾坊": "niǎn fáng",
    "簿子": "bù zi",
    "扳手": "bān shou",
    "铅山": "yán shān",
    "儒将": "rú jiàng",
    "重光": "chóng guāng",
    "剪发": "jiǎn fà",
    "行话": "háng huà",
    "长上": "zhǎng shàng",
    "配种": "pèi zhǒng",
    "小传": "xiǎo zhuàn",
    "压轴": "yā zhòu",
    "谱曲": "pǔ qǔ",
    "弱冠": "ruò guàn",
    "花卷": "huā juǎn",
    "横祸": "hèng huò",
    "夹克": "jiā kè",
    "光晕": "guāng yùn",
    "披靡": "pī mǐ",
    "对调": "duì diào",
    "夹持": "jiā chí",
    "空额": "kòng é",
    "平调": "píng diào",
    "铺床": "pū chuáng",
    "丧钟": "sāng zhōng",
    "作乐": "zuò yuè",
    "少府": "shào fǔ",
    "数数": "shuò shuò",
    "奔头": "bèn tou",
    "进给": "jìn jǐ",
    "率性": "shuài xìng",
    "乐子": "lè zi",
    "绑扎": "bǎng zā",
    "挑唆": "tiǎo suō",
    "漂洗": "piǎo xǐ",
    "夹墙": "jiā qiáng",
    "咳喘": "ké chuǎn",
    "乜斜": "miē xie",
    "错处": "cuò chǔ",
    "复种": "fù zhǒng",
    "闷酒": "mèn jiǔ",
    "时调": "shí diào",
    "重孙": "chóng sūn",
    "经幢": "jīng chuáng",
    "圩场": "xū cháng",
    "调门": "diào mén",
    "花头": "huā tou",
    "划拉": "huá la",
    "套色": "tào shǎi",
    "粗率": "cū shuài",
    "相率": "xiāng shuài",
    "款识": "kuǎn zhì",
    "吁请": "yù qǐng",
    "荫蔽": "yīn bì",
    "文蛤": "wén gé",
    "嘀嗒": "dī dā",
    "调取": "diào qǔ",
    "交差": "jiāo chāi",
    "落子": "lào zǐ",
    "相册": "xiàng cè",
    "絮叨": "xù dáo",
    "落发": "luò fà",
    "异相": "yì xiàng",
    "浸没": "jìn mò",
    "角抵": "jué dǐ",
    "卸载": "xiè zài",
    "春卷": "chūn juǎn",
    "扎挣": "zhá zheng",
    "畜养": "xù yǎng",
    "吡咯": "bǐ luò",
    "垛子": "duǒ zi",
    "恶少": "è shào",
    "发际": "fà jì",
    "红苕": "hóng sháo",
    "糨糊": "jiàng hù",
    "哭丧": "kū sang",
    "泡子": "pāo zǐ",
    "稍息": "shào xī",
    "晕船": "yùn chuán",
    "校样": "jiào yàng",
    "外差": "wài chāi",
    "红曲": "hóng qǔ",
    "脚爪": "jiǎo zhǎo",
    "铺展": "pū zhǎn",
    "驮子": "duò zi",
    "芫荽": "yán sui",
    "夹紧": "jiā jǐn",
    "尿泡": "suī pào",
    "丧乱": "sāng luàn",
    "凶相": "xiōng xiàng",
    "华发": "huá fà",
    "打场": "dǎ cháng",
    "云量": "yún liàng",
    "正切": "zhèng qiē",
    "处子": "chǔ zǐ",
    "留难": "liú nàn",
    "划拳": "huá quán",
    "划艇": "huá tǐng",
    "评传": "píng zhuàn",
    "拉纤": "lā qiàn",
    "句读": "jù dòu",
    "散剂": "sǎn jì",
    "骨殖": "gǔ shi",
    "塞音": "sè yīn",
    "铺叙": "pū xù",
    "阏氏": "yān zhī",
    "冷颤": "lěng zhàn",
    "煞住": "shā zhù",
    "夜曲": "yè qǔ",
    "种籽": "zhǒng zǐ",
    "采种": "cǎi zhǒng",
    "少男": "shào nán",
    "格登": "gē dēng",
    "管乐": "guǎn yuè",
    "号啕": "háo táo",
    "纳降": "nà xiáng",
    "拥塞": "yōng sè",
    "万乘": "wàn shèng",
    "杆儿": "gǎn ér",
    "葛藤": "gé téng",
    "芯子": "xìn zi",
    "簿籍": "bù jí",
    "垫圈": "diàn juàn",
    "皮夹": "pí jiā",
    "校准": "jiào zhǔn",
    "行款": "háng kuǎn",
    "黑种": "hēi zhǒng",
    "龙种": "lóng zhǒng",
    "允当": "yǔn dàng",
    "器量": "qì liàng",
    "选调": "xuǎn diào",
    "扮相": "bàn xiàng",
    "干才": "gàn cái",
    "基干": "jī gàn",
    "三校": "sān jiào",
    "割切": "gē qiē",
    "国乐": "guó yuè",
    "卡壳": "qiǎ ké",
    "呢子": "ní zi",
    "辟谷": "bì gǔ",
    "磨房": "mò fáng",
    "咿呀": "yī yā",
    "芥末": "jiè mo",
    "薄技": "bó jì",
    "产假": "chǎn jià",
    "诗兴": "shī xìng",
    "重出": "chóng chū",
    "转椅": "zhuàn yǐ",
    "酌量": "zhuó liàng",
    "簿册": "bù cè",
    "藏青": "zàng qīng",
    "的士": "dí shì",
    "调人": "diào rén",
    "解元": "jiè yuán",
    "茎干": "jīng gàn",
    "巨量": "jù liàng",
    "榔头": "láng tou",
    "率真": "shuài zhēn",
    "喷香": "pèn xiāng",
    "锁钥": "suǒ yuè",
    "虾蟆": "há má",
    "相图": "xiàng tú",
    "兴会": "xìng huì",
    "灶头": "zào tou",
    "重婚": "chóng hūn",
    "钻洞": "zuān dòng",
    "忖度": "cǔn duó",
    "党参": "dǎng shēn",
    "调温": "diào wēn",
    "杆塔": "gǎn tǎ",
    "葛布": "gé bù",
    "拱券": "gǒng xuàn",
    "冠子": "guàn zi",
    "划子": "huá zǐ",
    "夹生": "jiā shēng",
    "露馅": "lòu xiàn",
    "恰切": "qià qiē",
    "散见": "sǎn jiàn",
    "哨卡": "shào qiǎ",
    "烫发": "tàng fà",
    "体量": "tǐ liàng",
    "挺括": "tǐng guā",
    "系带": "jì dài",
    "相士": "xiàng shì",
    "羊圈": "yáng juàn",
    "转矩": "zhuàn jǔ",
    "吧台": "bā tái",
    "苍术": "cāng zhú",
    "菲薄": "fěi bó",
    "蛤蚧": "gé jiè",
    "蛤蜊": "gé lí",
    "瓜蔓": "guā wàn",
    "怪相": "guài xiàng",
    "罹难": "lí nàn",
    "临帖": "lín tiè",
    "女红": "nǚ gōng",
    "刨床": "bào chuáng",
    "翘楚": "qiáo chǔ",
    "数九": "shǔ jiǔ",
    "谈兴": "tán xìng",
    "心曲": "xīn qǔ",
    "雄劲": "xióng jìng",
    "扎染": "zā rǎn",
    "遮荫": "zhē yīn",
    "周正": "zhōu zhēng",
    "赚头": "zhuàn tou",
    "扒手": "pá shǒu",
    "搀和": "chān huo",
    "诚朴": "chéng piáo",
    "肚量": "dù liàng",
    "干结": "gàn jié",
    "工尺": "gōng chě",
    "家累": "jiā lěi",
    "曲水": "qǔ shuǐ",
    "沙参": "shā shēn",
    "挑花": "tiǎo huā",
    "行距": "háng jù",
    "种别": "zhǒng bié",
    "种草": "zhǒng cǎo",
    "阿门": "ā mēn",
    "背篓": "bēi lǒu",
    "瘪三": "biē sān",
    "裁处": "cái chǔ",
    "创痛": "chuāng tòng",
    "福相": "fú xiàng",
    "更动": "gēng dòng",
    "豪兴": "háo xìng",
    "还阳": "huán yáng",
    "还嘴": "huán zuǐ",
    "借调": "jiè diào",
    "卷云": "juǎn yún",
    "卡子": "qiǎ zi",
    "流弹": "liú dàn",
    "络子": "lào zi",
    "磨子": "mò zǐ",
    "下种": "xià zhǒng",
    "想头": "xiǎng tou",
    "削价": "xuē jià",
    "校阅": "jiào yuè",
    "八行": "bā háng",
    "雅量": "yǎ liàng",
    "别传": "bié zhuàn",
    "薄酒": "bó jiǔ",
    "春假": "chūn jià",
    "发妻": "fà qī",
    "哗哗": "huā huā",
    "宽绰": "kuān chuo",
    "了悟": "liǎo wù",
    "切花": "qiē huā",
    "审度": "shěn duó",
    "应许": "yīng xǔ",
    "转台": "zhuàn tái",
    "仔猪": "zǐ zhū",
    "奔命": "bèn mìng",
    "裁量": "cái liàng",
    "蚕种": "cán zhǒng",
    "藏戏": "zàng xì",
    "乘兴": "chéng xìng",
    "绸缪": "chóu móu",
    "摧折": "cuī shé",
    "调经": "diào jīng",
    "调职": "diào zhí",
    "缝缀": "féng zhuì",
    "骨朵": "gū duǒ",
    "核儿": "hú ér",
    "恒量": "héng liàng",
    "还价": "huán jià",
    "浑朴": "hún piáo",
    "苦差": "kǔ chāi",
    "面糊": "miàn hù",
    "曲张": "qǔ zhāng",
    "煞车": "shā chē",
    "省视": "xǐng shì",
    "什锦": "shí jǐn",
    "信差": "xìn chāi",
    "余切": "yú qiē",
    "攒眉": "cuán méi",
    "炸糕": "zhá gāo",
    "钻杆": "zuàn gǎn",
    "扒灰": "pá huī",
    "白种": "bái zhǒng",
    "拌和": "bàn huò",
    "长调": "cháng diào",
    "大溜": "dà liù",
    "抖搂": "dǒu lōu",
    "飞转": "fēi zhuàn",
    "赴难": "fù nàn",
    "干仗": "gàn zhàng",
    "好胜": "hào shèng",
    "画片": "huà piān",
    "搅混": "jiǎo gǔn",
    "螺杆": "luó gǎn",
    "木模": "mù mú",
    "怒号": "nù háo",
    "频数": "pín shuò",
    "无宁": "wú nìng",
    "选曲": "xuǎn qǔ",
    "遗少": "yí shào",
    "邮差": "yóu chāi",
    "占卦": "zhān guà",
    "占星": "zhān xīng",
    "重审": "chóng shěn",
    "自量": "zì liàng",
    "待查": "dài zhā",
    "调防": "diào fáng",
    "发廊": "fà láng",
    "翻查": "fān zhā",
    "反调": "fǎn diào",
    "缝子": "fèng zi",
    "更夫": "gēng fū",
    "骨子": "gǔ zi",
    "光杆": "guāng gǎn",
    "夹棍": "jiā gùn",
    "居丧": "jū sāng",
    "巨贾": "jù gǔ",
    "看押": "kān yā",
    "空转": "kōng zhuàn",
    "量力": "liàng lì",
    "蒙尘": "meng chen",
    "蒙难": "méng nàn",
    "炮烙": "páo luò",
    "赔还": "péi huán",
    "扑扇": "pū shān",
    "散记": "sǎn jì",
    "散件": "sǎn jiàn",
    "删削": "shān xuē",
    "射干": "yè gàn",
    "条几": "tiáo jī",
    "偷空": "tōu kòng",
    "削壁": "xuē bì",
    "校核": "jiào hé",
    "阴干": "yīn gàn",
    "择菜": "zhái cài",
    "种马": "zhǒng mǎ",
    "重九": "chóng jiǔ",
    "主调": "zhǔ diào",
    "自禁": "zì jīn",
    "吧唧": "bā jī",
    "堡子": "bǔ zi",
    "便溺": "biàn niào",
    "词调": "cí diào",
    "叨咕": "dáo gu",
    "干粉": "gàn fěn",
    "俚曲": "lǐ qǔ",
    "落枕": "lào zhěn",
    "铺砌": "pū qì",
    "刷白": "shuà bái",
    "委靡": "wěi mǐ",
    "系泊": "jì bó",
    "相马": "xiàng mǎ",
    "行辈": "háng bèi",
    "熨帖": "yù tiē",
    "转筋": "zhuàn jīn",
    "籽种": "zǐ zhǒng",
    "棒喝": "bàng hè",
    "傧相": "bīn xiàng",
    "传种": "chuán zhǒng",
    "镐头": "gǎo tóu",
    "间苗": "jiàn miáo",
    "乐池": "yuè chí",
    "卖相": "mài xiàng",
    "难为": "nán wéi",
    "屏弃": "bǐng qì",
    "铅弹": "qiān dàn",
    "切变": "qiē biàn",
    "请调": "qǐng diào",
    "曲度": "qǔ dù",
    "群氓": "qún méng",
    "散板": "sǎn bǎn",
    "省察": "xǐng chá",
    "事假": "shì jià",
    "纤绳": "qiàn shéng",
    "种麻": "zhǒng má",
    "重影": "chóng yǐng"
  }, {
    "为什么": "wèi shén me",
    "实际上": "shí jì shang",
    "检察长": "jiǎn chá zhǎng",
    "不由得": "bù yóu de",
    "差不多": "chà bu duō",
    "只不过": "zhǐ bu guò",
    "国内外": "guó nèi wai",
    "老人家": "lǎo ren jia",
    "干什么": "gàn shén me",
    "可不是": "kě bù shì",
    "这会儿": "zhè huì er",
    "尽可能": "jǐn kě néng",
    "董事长": "dǒng shì zhǎng",
    "了不起": "liǎo bù qǐ",
    "参谋长": "cān móu zhǎng",
    "舍不得": "shě bu de",
    "朝鲜族": "cháo xiǎn zú",
    "恨不得": "hèn bu de",
    "海内外": "hǎi nèi wai",
    "禁不住": "jīn bú zhù",
    "柏拉图": "bó lā tú",
    "怪不得": "guài bu de",
    "不在乎": "bù zài hu",
    "洛杉矶": "luò shān ji",
    "有点儿": "yǒu diǎn er",
    "迫击炮": "pǎi jī pào",
    "大丈夫": "dà zhàng fu",
    "进行曲": "jìn xíng qǔ",
    "免不了": "miǎn bu liǎo",
    "不得了": "bù dé liǎo",
    "过日子": "guò rì zi",
    "马尾松": "mǎ wěi sōng",
    "运输量": "yùn shū liàng",
    "发脾气": "fā pí qi",
    "过不去": "guò bu qù",
    "臭豆腐": "chòu dòu fu",
    "士大夫": "shì dà fū",
    "三部曲": "sān bù qǔ",
    "少不了": "shǎo bu liǎo",
    "仡佬族": "gē lǎo zú",
    "交响曲": "jiāo xiǎng qǔ",
    "分子式": "fēn zǐ shì",
    "好日子": "hǎo rì zi",
    "看样子": "kàn yàng zi",
    "鸭绿江": "yā lù jiāng",
    "巴不得": "bā bu de",
    "协奏曲": "xié zòu qǔ",
    "没关系": "méi guān xi",
    "不见得": "bú jiàn de",
    "压根儿": "yà gēn er",
    "对得起": "duì de qǐ",
    "那会儿": "nà huì er",
    "自个儿": "zì gě er",
    "物理量": "wù lǐ liàng",
    "怎么着": "zěn me zhāo",
    "明晃晃": "míng huǎng huǎng",
    "节假日": "jié jià rì",
    "心里话": "xīn lǐ huà",
    "发行量": "fā xíng liàng",
    "兴冲冲": "xìng chōng chōng",
    "分子量": "fēn zǐ liàng",
    "大不了": "dà bu liǎo",
    "国子监": "guó zǐ jiàn",
    "老大难": "lǎo dà nán",
    "了不得": "liǎo bu dé",
    "石狮子": "shí shī zi",
    "莫不是": "mò bù shì",
    "少不得": "shǎo bu dé",
    "党内外": "dǎng nèi wai",
    "这么着": "zhè me zhāo",
    "少奶奶": "shào nǎi nai",
    "暗地里": "àn dì li",
    "看不起": "kàn bu qǐ",
    "更年期": "gēng nián qī",
    "工作量": "gōng zuò liàng",
    "背地里": "bèi dì li",
    "山里红": "shān li hóng",
    "好好儿": "hǎo hāo er",
    "交响乐": "jiāo xiǎng yuè",
    "好意思": "hǎo yì si",
    "吐谷浑": "tǔ yù hún",
    "没意思": "méi yì si",
    "理发师": "lǐ fà shī",
    "奏鸣曲": "zòu míng qǔ",
    "塔什干": "tǎ shí gàn",
    "充其量": "chōng qí liàng",
    "靠得住": "kào de zhù",
    "车行道": "chē háng dào",
    "中郎将": "zhōng láng jiàng",
    "犯不着": "fàn bu zháo",
    "照明弹": "zhào míng dàn",
    "一溜烟": "yī liù yān",
    "烟幕弹": "yān mù dàn",
    "没奈何": "mò nài hé",
    "乱哄哄": "luàn hōng hōng",
    "惠更斯": "huì gēng sī",
    "载重量": "zài zhòng liàng",
    "瞧得起": "qiáo de qǐ",
    "纪传体": "jì zhuàn tǐ",
    "蚌埠市": "bèng bù shì",
    "冷不丁": "lěng bu dīng",
    "阿房宫": "ē páng gōng",
    "怨不得": "yuàn bu de",
    "卷心菜": "juǎn xīn cài",
    "戏班子": "xì bān zi",
    "过得去": "guò děi qù",
    "大肚子": "dà dù zi",
    "花岗石": "huā gāng shí",
    "外甥女": "wài sheng nǚ",
    "团团转": "tuán tuán zhuàn",
    "大堡礁": "dà pù jiāo",
    "燃烧弹": "rán shāo dàn",
    "劳什子": "láo shí zi",
    "摇滚乐": "yáo gǔn yuè",
    "身子骨": "shēn zi gǔ",
    "夹竹桃": "jiā zhú táo",
    "一刀切": "yī dāo qiē",
    "闹哄哄": "nào hōng hōng",
    "三连冠": "sān lián guàn",
    "重头戏": "zhòng tóu xì",
    "二人转": "èr rén zhuàn",
    "节骨眼": "jiē gu yǎn",
    "知识面": "zhī shī miàn",
    "护士长": "hù shì zhǎng",
    "架子车": "jià zi chē",
    "信号弹": "xìn hào dàn",
    "干电池": "gàn diàn chí",
    "枪杆子": "qiāng gǎn zi",
    "哭丧棒": "kū sāng bàng",
    "鼻咽癌": "bí yān ái",
    "瓦岗军": "wǎ gāng jūn",
    "买得起": "mǎi de qǐ",
    "拗不过": "niù bu guò",
    "癞蛤蟆": "lài há ma",
    "脊梁骨": "jǐ liang gǔ",
    "子母弹": "zǐ mǔ dàn",
    "开小差": "kāi xiǎo chāi",
    "女强人": "nǚ qiáng rén",
    "英雄传": "yīng xióng zhuàn",
    "大嫂子": "dà sǎo zi",
    "爵士乐": "jué shì yuè",
    "说笑话": "shuō xiào hua",
    "混日子": "hùn rì zi",
    "大鼻子": "dà bí zi",
    "碰头会": "pèng tóu kuài",
    "玻璃钢": "bō li gāng",
    "曳光弹": "yè guāng dàn",
    "少林拳": "shào lín quán",
    "咏叹调": "yǒng tàn diào",
    "豆腐干": "dòu fǔ gàn",
    "一个劲": "yī gè jìn",
    "少先队": "shào xiān duì",
    "灵长目": "líng zhǎng mù",
    "对着干": "duì zhe gàn",
    "蒙蒙亮": "mēng mēng liàng",
    "软骨头": "ruǎn gǔ tou",
    "不省得": "bù xǐng de",
    "铺盖卷": "pū gài juǎn",
    "和稀泥": "huò xī ní",
    "亭子间": "tíng zi jiān",
    "背黑锅": "bēi hēi guō",
    "红彤彤": "hóng tōng tōng",
    "武侯祠": "wǔ hóu cí",
    "打哆嗦": "dǎ duō suo",
    "地窨子": "dì yìn zi",
    "狂想曲": "kuáng xiǎng qǔ",
    "幻想曲": "huàn xiǎng qǔ",
    "户口簿": "hù kǒu bù",
    "腿肚子": "tuǐ dù zi",
    "马尾藻": "mǎ wěi zǎo",
    "练习曲": "liàn xí qǔ",
    "夜猫子": "yè māo zi",
    "折子戏": "zhé zi xì",
    "打手势": "dǎ shǒu shì",
    "龙王爷": "lóng wáng yé",
    "要面子": "yào miàn zi",
    "气头上": "qì tóu shang",
    "糊涂虫": "hú tu chóng",
    "笔杆子": "bǐ gǎn zi",
    "占便宜": "zhàn pián yi",
    "打主意": "dǎ zhǔ yi",
    "多弹头": "duō dàn tóu",
    "露一手": "lòu yī shǒu",
    "堰塞湖": "yàn sè hú",
    "保得住": "bǎo de zhù",
    "趵突泉": "bào tū quán",
    "钻空子": "zuān kòng zi",
    "奥得河": "ào de hé",
    "司务长": "sī wù zhǎng",
    "禁不起": "jīn bu qǐ",
    "什刹海": "shí chà hǎi",
    "莲花落": "lián huā lào",
    "一场空": "yī cháng kōng",
    "前奏曲": "qián zòu qǔ",
    "见世面": "xiàn shì miàn",
    "分子筛": "fēn zǐ shāi",
    "豁出去": "huō chu qu",
    "电位差": "diàn wèi chā",
    "挨个儿": "āi gè er",
    "那阵儿": "nà zhèn er",
    "给面子": "gěi miàn zi",
    "肺活量": "fèi huó liàng",
    "大师傅": "dà shī fū",
    "掷弹筒": "zhì dàn tǒng",
    "打呼噜": "dǎ hū lu",
    "广渠门": "ān qú mén",
    "未见得": "wèi jiàn de",
    "大婶儿": "dà shěn er",
    "谈得来": "tán de lái",
    "狮子头": "shī zi tóu",
    "脚丫子": "jiǎo yā zi",
    "变奏曲": "biàn zòu qǔ",
    "空包弹": "kōng bāo dàn",
    "窝里斗": "wō li dòu",
    "弹着点": "dàn zhuó diǎn",
    "免不得": "miǎn bu de",
    "个头儿": "gè tóu er",
    "看得起": "kàn de qǐ",
    "来不得": "lái bu de",
    "糊涂账": "hú tu zhàng",
    "大猩猩": "dà xīng xing",
    "一溜儿": "yī liù ér",
    "禁得起": "jīn de qǐ",
    "法相宗": "fǎ xiāng zōng",
    "可怜相": "kě lián xiàng",
    "吃得下": "chī de xià",
    "汉堡包": "hàn pù bāo",
    "闹嚷嚷": "nào rāng rāng",
    "数来宝": "shǔ lái bǎo",
    "抹脖子": "mǒ bó zi",
    "合得来": "hé de lái",
    "干性油": "gàn xìng yóu",
    "上辈子": "shàng bèi zi",
    "闷葫芦": "mèn hú lú",
    "呱呱叫": "guā guā jiào",
    "西洋参": "xī yáng shēn",
    "碰钉子": "pèng dìng zǐ",
    "林荫道": "lín yīn dào",
    "拉家常": "lá jiā cháng",
    "卷铺盖": "juǎn pū gài",
    "过得硬": "guò de yìng",
    "飞将军": "fēi jiàng jūn",
    "挑大梁": "tiǎo dà liáng",
    "哈巴狗": "hǎ bā gǒu",
    "过家家": "guō jiā jiā",
    "催泪弹": "cuī lèi dàn",
    "雨夹雪": "yǔ jiā xuě",
    "敲竹杠": "qiāo zhū gàng",
    "列车长": "liè chē zhǎng",
    "回旋曲": "huí xuán qǔ",
    "华达呢": "huá dá ní",
    "犯得着": "fàn de zháo",
    "土疙瘩": "tǔ gē da",
    "煞风景": "shā fēng jǐng",
    "轻量级": "qīng liàng jí",
    "羞答答": "xiū dā dā",
    "石子儿": "shí zǐ er",
    "大帽子": "dà mào zi",
    "达姆弹": "dá mǔ dàn",
    "摇篮曲": "yáo lán qǔ",
    "科教片": "kē jiào piān",
    "侃大山": "kǎn tài shān",
    "丁点儿": "dīng diǎn er",
    "吃得消": "chī de xiāo",
    "捋虎须": "luō hǔ xū",
    "间奏曲": "jiàn zòu qǔ",
    "高丽参": "gāo lí shēn",
    "安魂曲": "ān hún qǔ",
    "众生相": "zhòng shēng xiàng",
    "咽峡炎": "yān xiá yán",
    "禁得住": "jīn de zhù",
    "打拍子": "dǎ pāi zi",
    "催眠曲": "cuī mián qǔ",
    "臭架子": "chòu jià zi",
    "吃得开": "chī de kāi",
    "柞丝绸": "zuò sī chóu",
    "应声虫": "yìng shēng chóng",
    "数得着": "shǔ de zháo",
    "傻劲儿": "shǎ jìn er",
    "铅玻璃": "qiān bō li",
    "抹不开": "mò bù kāi",
    "可的松": "kě dì sōng",
    "划得来": "huá de lái",
    "红帽子": "hóng mào zi",
    "孩子王": "hái zi wáng",
    "晕乎乎": "yùn hū hū",
    "台柱子": "tái zhù zi",
    "屎壳郎": "shǐ ke làng",
    "尥蹶子": "liào jué zǐ",
    "空架子": "kōng jià zi",
    "藏红花": "zàng hóng huā",
    "说不着": "shuō bù zháo",
    "闷罐车": "mèn guàn chē",
    "卡脖子": "qiǎ bó zi",
    "红澄澄": "hóng deng deng",
    "赶得及": "gǎn de jí",
    "当间儿": "dāng jiàn ér",
    "露马脚": "lòu mǎ jiǎo",
    "鸡内金": "jī nà jīn",
    "犯得上": "fàn děi shàng",
    "钉齿耙": "dīng chǐ bà",
    "饱和点": "bǎo huó diǎn",
    "文曲星": "wén qǔ xīng",
    "翘辫子": "qiào biàn zi",
    "龙爪槐": "lóng zhǎo huái",
    "喝倒彩": "hè dào cǎi",
    "鸽子笼": "gē zi lóng",
    "定冠词": "dìng guàn cí",
    "担担面": "dàn dan miàn",
    "吃得住": "chī de zhù",
    "爪尖儿": "zhuǎ jiān er",
    "支着儿": "zhī zhāo ér",
    "折跟头": "zhē gēn tou",
    "炸丸子": "zhá wán zǐ",
    "阴着儿": "yīn zhāo ér",
    "烟卷儿": "yān juǎn ér",
    "宣传弹": "xuān chuán dàn",
    "信皮儿": "xìn pí er",
    "弦切角": "xián qiē jiǎo",
    "跳房子": "tiào fáng zi",
    "缩砂密": "sù shā mì",
    "说得来": "shuō de lái",
    "水漂儿": "shuǐ piǎo ér",
    "耍笔杆": "shuǎ bǐ gǎn",
    "数得上": "shǔ děi shàng",
    "数不着": "shǔ bù zháo",
    "数不清": "shǔ bù qīng",
    "什件儿": "shí jiàn ér",
    "狮子会": "shī zi huì",
    "生死簿": "shēng sǐ bù",
    "扇风机": "shān fēng jī",
    "散摊子": "sàn tān zi",
    "撒呓挣": "sā yì zhēng",
    "日记簿": "rì jì bù",
    "热得快": "rè de kuài",
    "曲别针": "qǔ bié zhēn",
    "亲家公": "qìng jiā gōng",
    "奇函数": "jī hán shù",
    "炮子儿": "pào zǐ er",
    "拍纸簿": "pāi zhǐ bù",
    "努劲儿": "nǔ jìn er",
    "泥娃娃": "ní wá wa",
    "内切圆": "nèi qiē yuán",
    "哪会儿": "něi huì er",
    "摸不着": "mō bù zháo",
    "闷头儿": "mèn tou er",
    "没谱儿": "méi pǔ er",
    "铆劲儿": "mǎo jìn er",
    "溜肩膀": "liū jiān bǎng",
    "了望台": "liào wàng tái",
    "老来少": "lǎo lái shào",
    "坤角儿": "kūn jué ér",
    "考勤簿": "kǎo qín bù",
    "卷笔刀": "juǎn bǐ dāo",
    "九重霄": "jiǔ chóng xiāo",
    "进给量": "jìn jǐ liàng",
    "划不来": "huá bù lái",
    "汗褂儿": "hàn guà er",
    "鼓囊囊": "gǔ nāng nang",
    "够劲儿": "gòu jìn er",
    "公切线": "gōng qiē xiàn",
    "搁得住": "gé de zhù",
    "搁不住": "gé bú zhù",
    "赶浪头": "gǎn làng tóu",
    "赶得上": "gǎn děi shàng",
    "干酵母": "gàn jiào mǔ",
    "嘎渣儿": "gā zhā er",
    "嘎嘣脆": "gā bēng cuì",
    "对得住": "duì de zhù",
    "逗闷子": "dòu mèn zǐ",
    "顶呱呱": "dǐng guā guā",
    "滴溜儿": "dī liù ér",
    "大轴子": "dà zhòu zǐ",
    "打板子": "dǎ bǎn zi",
    "寸劲儿": "cùn jìn er",
    "醋劲儿": "cù jìn er",
    "创牌子": "chuàng pái zi",
    "揣手儿": "chuāi shǒu er",
    "冲劲儿": "chòng jìn er",
    "吃得来": "chī de lái",
    "不更事": "bù gēng shì",
    "奔头儿": "bèn tou er",
    "百夫长": "bǎi fū zhǎng",
    "娃娃亲": "wá wa qīn",
    "死劲儿": "sǐ jìng er",
    "骨朵儿": "gū duǒ er",
    "功劳簿": "gōng láo bù"
  }, {
    "成吉思汗": "chéng jí sī hán",
    "四通八达": "sì tōng bā dá",
    "一模一样": "yī mú yī yàng",
    "青藏高原": "qīng zàng gāo yuán",
    "阿弥陀佛": "ē mí tuó fó",
    "解放思想": "jiè fàng sī xiǎng",
    "多种多样": "duō zhǒng duō yàng",
    "所作所为": "suǒ zuò suǒ wéi",
    "迷迷糊糊": "mí mí hu hū",
    "荷枪实弹": "hè qiāng shí dàn",
    "兴高采烈": "xìng gāo cǎi liè",
    "无能为力": "wú néng wéi lì",
    "融为一体": "róng wéi yī tǐ",
    "布鲁塞尔": "bù lǔ sài ěr",
    "为所欲为": "wéi suǒ yù wéi",
    "审时度势": "shěn shí duó shì",
    "克什米尔": "kè shí mǐ ěr",
    "没完没了": "méi wán méi liǎo",
    "不为人知": "bù wéi rén zhī",
    "结结巴巴": "jiē jiē bā bā",
    "巴尔干半岛": "bā ěr gàn bàn dǎo",
    "前仆后继": "qián pū hòu jì",
    "一年一度": "yì nián yí dù",
    "各行各业": "gè háng gè yè",
    "布尔什维克": "bù ěr shí wéi kè",
    "合二为一": "hé èr wéi yī",
    "被子植物": "bèi zǐ zhí wù",
    "铺天盖地": "pū tiān gài dì",
    "直截了当": "zhí jié liǎo dàng",
    "供不应求": "gōng bù yìng qiú",
    "御史大夫": "yù shǐ dà fū",
    "不为瓦全": "bù wéi wǎ quán",
    "不可收拾": "bù kě shōu shi",
    "胡作非为": "hú zuò fēi wéi",
    "分毫不差": "fēn háo bù chā",
    "模模糊糊": "mó mó hu hū",
    "不足为奇": "bù zú wéi qí",
    "如之奈何": "rú zhī nai hé",
    "悄无声息": "qiǎo wú shēng xī",
    "卷土重来": "juǎn tǔ chóng lái",
    "了如指掌": "liǎo rú zhǐ zhǎng",
    "深恶痛绝": "shēn wù tòng jué",
    "高高兴兴": "gāo gāo xìng xìng",
    "唉声叹气": "āi shēng tàn qì",
    "混为一谈": "hùn wéi yī tán",
    "不了了之": "bù liǎo liǎo zhī",
    "汉藏语系": "hàn zàng yǔ xì",
    "处心积虑": "chǔ xīn jī lǜ",
    "泣不成声": "qǐ bù chéng shēng",
    "半夜三更": "bàn yè sān gēng",
    "失魂落魄": "shī hún luò pò",
    "二十八宿": "èr shí bā xiù",
    "转来转去": "zhuàn lái zhuàn qù",
    "数以万计": "shǔ yǐ wàn jì",
    "相依为命": "xiāng yī wéi mìng",
    "恋恋不舍": "liàn liàn bù shě",
    "屈指可数": "qū zhǐ kě shǔ",
    "神出鬼没": "shén chū guǐ mò",
    "结结实实": "jiē jiē shí shí",
    "有的放矢": "yǒu dì fàng shǐ",
    "叽哩咕噜": "jī lǐ gū lū",
    "合而为一": "hé ér wéi yī",
    "调兵遣将": "diào bīng qiǎn jiàng",
    "载歌载舞": "zài gē zài wǔ",
    "转危为安": "zhuǎn wēi wéi ān",
    "踏踏实实": "tā tā shi shí",
    "桑给巴尔": "sāng jǐ bā ěr",
    "装模作样": "zhuāng mú zuò yàng",
    "见义勇为": "jiàn yì yǒng wéi",
    "相差无几": "xiāng chā wú jǐ",
    "叹为观止": "tàn wéi guān zhǐ",
    "闷闷不乐": "mèn mèn bù lè",
    "喜怒哀乐": "xǐ nù āi lè",
    "鲜为人知": "xiǎn wéi rén zhī",
    "张牙舞爪": "zhāng yá wǔ zhǎo",
    "为非作歹": "wéi fēi zuò dǎi",
    "一蹶不振": "yī jué bù zhèn",
    "含糊其辞": "hán hú qí cí",
    "疲于奔命": "pí yú bēn mìng",
    "勉为其难": "miǎn wéi qí nán",
    "依依不舍": "yī yī bù shě",
    "何乐而不为": "hé lè ér bù wéi",
    "顶头上司": "dǐng tóu shàng si",
    "不着边际": "bù zhuó biān jì",
    "大模大样": "dà mú dà yàng",
    "寻欢作乐": "xún huān zuò lè",
    "一走了之": "yī zǒu liǎo zhī",
    "一年到头": "yì nián dào tóu",
    "字里行间": "zì lǐ háng jiān",
    "含含糊糊": "hán hán hu hū",
    "数一数二": "shǔ yī shǔ èr",
    "恰如其分": "qià rú qí fèn",
    "破涕为笑": "pò tì wéi xiào",
    "先下手为强": "xiān xià shǒu wéi qiáng",
    "深更半夜": "shēn gēng bàn yè",
    "千差万别": "qiān chā wàn bié",
    "数不胜数": "shǔ bù shèng shǔ",
    "据为己有": "jù wéi jǐ yǒu",
    "天旋地转": "tiān xuán dì zhuàn",
    "养尊处优": "yǎng zūn chǔ yōu",
    "玻璃纤维": "bō li xiān wéi",
    "吵吵闹闹": "chāo chao nào nào",
    "晕头转向": "yūn tóu zhuàn xiàng",
    "土生土长": "tǔ shēng tǔ zhǎng",
    "宁死不屈": "nìng sǐ bù qū",
    "不省人事": "bù xǐng rén shì",
    "尽力而为": "jìn lì ér wéi",
    "精明强干": "jīng míng qiáng gàn",
    "唠唠叨叨": "láo lao dāo dāo",
    "叽叽喳喳": "jī ji zhā zhā",
    "功不可没": "gōng bù kě mò",
    "锲而不舍": "qiè ér bù shě",
    "排忧解难": "pái yōu jiě nàn",
    "稀里糊涂": "xī li hú tú",
    "异曲同工": "yì qǔ tóng gōng",
    "各有所长": "gè yǒu suǒ chéng",
    "的的确确": "dí dí què què",
    "一言为定": "yī yán wéi dìng",
    "哄堂大笑": "hōng táng dà xiào",
    "听而不闻": "tīng ér bú wén",
    "刀耕火种": "dāo gēng huǒ zhòng",
    "说不过去": "shuō bu guò qù",
    "内分泌腺": "nèi fèn mì xiàn",
    "化险为夷": "huà xiǎn wéi yí",
    "百发百中": "bǎi fā bǎi zhòng",
    "重见天日": "chóng jiàn tiān rì",
    "反败为胜": "fǎn bài wéi shèng",
    "一了百了": "yī liǎo bǎi liǎo",
    "大大咧咧": "dà da liē liē",
    "心急火燎": "xīn jí huǒ liǎo",
    "粗心大意": "cū xīn dà yi",
    "鸡皮疙瘩": "jī pí gē da",
    "夷为平地": "yí wéi píng dì",
    "日积月累": "rì jī yuè lěi",
    "设身处地": "shè shēn chǔ dì",
    "投其所好": "tóu qí suǒ hào",
    "间不容发": "jiān bù róng fà",
    "人满为患": "rén mǎn wéi huàn",
    "穷追不舍": "qióng zhuī bù shě",
    "为时已晚": "wéi shí yǐ wǎn",
    "如数家珍": "rú shǔ jiā zhēn",
    "心里有数": "xīn lǐ yǒu shù",
    "一盘散沙": "yī pán sǎn shā",
    "以牙还牙": "yǐ yá huán yá",
    "神不守舍": "shén bù shǒu shě",
    "孟什维克": "mèng shí wéi kè",
    "各自为战": "gè zì wéi zhàn",
    "怨声载道": "yuàn shēng zài dào",
    "一哄而散": "yī hòng ér sàn",
    "亚得里亚海": "yà de lǐ yà hǎi",
    "救苦救难": "jiù kǔ jiù nàn",
    "好好先生": "hǎo hǎo xiān sheng",
    "怪模怪样": "guài mú guài yàng",
    "抛头露面": "pāo tóu lù miàn",
    "游手好闲": "yóu shǒu hào xián",
    "无所不为": "wú suǒ bù wéi",
    "调虎离山": "diào hǔ lí shān",
    "步步为营": "bù bù wéi yíng",
    "好大喜功": "hào dà xǐ gōng",
    "众矢之的": "zhòng shǐ zhī dì",
    "长生不死": "cháng shēng bū sǐ",
    "蔚为壮观": "wèi wéi zhuàng guān",
    "不可胜数": "bù kě shèng shǔ",
    "鬼使神差": "guǐ shǐ shén chāi",
    "洁身自好": "jié shēn zì hào",
    "敢作敢为": "gǎn zuò gǎn wéi",
    "蒙得维的亚": "méng de wéi de yà",
    "巴尔喀什湖": "bā ěr kā shí hú",
    "茅塞顿开": "máo sè dùn kāi",
    "走马换将": "zǒu mǎ huàn jiàng",
    "为时过早": "wéi shí guò zǎo",
    "为人师表": "wéi rén shī biǎo",
    "阴差阳错": "yīn chā yáng cuò",
    "油腔滑调": "yóu qiāng huá diào",
    "重蹈覆辙": "chóng dǎo fù zhé",
    "骂骂咧咧": "mà ma liē liē",
    "絮絮叨叨": "xù xù dāo dāo",
    "如履薄冰": "rú lǚ bó bīng",
    "损兵折将": "sǔn bīng zhé jiàng",
    "无可比拟": "wú kě bǐ nì",
    "拐弯抹角": "guǎi wān mò jiǎo",
    "像模像样": "xiàng mú xiàng yàng",
    "供过于求": "gōng guò yú qiú",
    "开花结果": "kāi huā jiē guǒ",
    "仔仔细细": "zǐ zǐ xì xì",
    "川藏公路": "chuān zàng gōng lù",
    "河北梆子": "hé běi bāng zi",
    "长年累月": "cháng nián lěi yuè",
    "正儿八经": "zhèng er bā jīng",
    "不识抬举": "bù shí tái ju",
    "重振旗鼓": "chóng zhèn qí gǔ",
    "气息奄奄": "qì xī yān yān",
    "紧追不舍": "jǐn zhuī bù shě",
    "服服帖帖": "fú fu tiē tiē",
    "强词夺理": "qiǎng cí duó lǐ",
    "噼里啪啦": "pī li pā lā",
    "人才济济": "rén cái jǐ jǐ",
    "发人深省": "fā rén shēn xǐng",
    "不足为凭": "bù zú wéi píng",
    "为富不仁": "wéi fù bù rén",
    "连篇累牍": "lián piān lěi dú",
    "呼天抢地": "hū tiān qiāng dì",
    "落落大方": "luò luò dà fāng",
    "自吹自擂": "zì chuī zì léi",
    "乐善好施": "lè shàn hào shī",
    "以攻为守": "yǐ gōng wéi shǒu",
    "磨磨蹭蹭": "mó mó cèng cèng",
    "削铁如泥": "xuē tiě rú ní",
    "助纣为虐": "zhù zhòu wéi nüè",
    "以退为进": "yǐ tuì wéi jìn",
    "重整旗鼓": "chóng zhěng qí gǔ",
    "嘁嘁喳喳": "qī qī chā chā",
    "枪林弹雨": "qiāng lín dàn yǔ",
    "风情万种": "fēng qíng wàn zhǒng",
    "令人发指": "lìng rén fà zhǐ",
    "转败为胜": "zhuǎn bài wéi shèng",
    "转弯抹角": "zhuǎn wān mò jiǎo",
    "在劫难逃": "zài jié nán táo",
    "正当防卫": "zhèng dàng fáng wèi",
    "不足为怪": "bù zú wéi guài",
    "难兄难弟": "nàn xiōng nàn dì",
    "咿咿呀呀": "yī yī yā yā",
    "弹尽粮绝": "dàn jìn liáng jué",
    "八旗子弟": "bā qí zi dì",
    "阿谀奉承": "ē yú fèng chéng",
    "稀里哗啦": "xī li huā lā",
    "返老还童": "fǎn lǎo huán tóng",
    "好高骛远": "hào gāo wù yuǎn",
    "灾难深重": "zāi nán shēn zhòng",
    "鹿死谁手": "lù sǐ shéi shǒu",
    "差强人意": "chā qiáng rén yì",
    "大吹大擂": "dà chuī dà léi",
    "成家立业": "chéng jiā lì yiè",
    "自怨自艾": "zì yuàn zì yì",
    "负债累累": "fù zhai lěi lěi",
    "古为今用": "gǔ wéi jīn yòng",
    "入土为安": "rù tǔ wéi ān",
    "下不为例": "xià bù wéi lì",
    "一哄而上": "yì hōng ér shàng",
    "一股劲儿": "yī gǔ jìn er",
    "没头苍蝇": "méi tóu cāng ying",
    "天差地远": "tiān chā dì yuǎn",
    "风卷残云": "fēng juǎn cán yún",
    "多灾多难": "duō zāi duō nàn",
    "乳臭未干": "rǔ xiù wèi gān",
    "行家里手": "háng jiā lǐ shǒu",
    "狼狈为奸": "láng bèi wéi jiān",
    "处变不惊": "chǔ biàn bù jīng",
    "一唱一和": "yī chàng yī hè",
    "一念之差": "yī niàn zhī chā",
    "金蝉脱壳": "jīn chán tuō qiào",
    "滴滴答答": "dī dī dā dā",
    "硕果累累": "shuò guǒ léi léi",
    "只知其一": "zhǐ zhī qí yī",
    "好整以暇": "hào zhěng yǐ xiá",
    "红得发紫": "hóng de fā zǐ",
    "传为美谈": "chuán wéi měi tán",
    "富商大贾": "fù shāng dà gǔ",
    "四海为家": "sì hǎi wéi jiā",
    "失而复得": "shī ér fù de",
    "了若指掌": "liǎo ruò zhǐ zhǎng",
    "大有可为": "dà yǒu kě wéi",
    "出头露面": "chū tóu lù miàn",
    "鼓鼓囊囊": "gǔ gu nāng nāng",
    "窗明几净": "chuāng míng jī jìng",
    "泰然处之": "tài rán chǔ zhī",
    "怒发冲冠": "nù fà chōng guān",
    "不甚了了": "bù shèn liǎo liǎo",
    "有机玻璃": "yǒu jī bō li",
    "骨头架子": "gú tou jià zi",
    "义薄云天": "yì bó yún tiān",
    "一丁点儿": "yī dīng diǎnr",
    "时来运转": "shí lái yùn zhuǎn",
    "陈词滥调": "chén cí làn diào",
    "七十二行": "qī shí èr háng",
    "化整为零": "huà zhěng wéi líng",
    "物以稀为贵": "wù yǐ xī wéi guì",
    "民以食为天": "mín yǐ shí wéi tiān",
    "火烧火燎": "huǒ shāo huǒ liǎo",
    "干脆利索": "gàn cuì lì suǒ",
    "吊儿郎当": "diào er láng dāng",
    "广种薄收": "guǎng zhòng bó shōu",
    "难舍难分": "nán shě nán fēn",
    "歃血为盟": "shà xuè wéi méng",
    "奋发有为": "fèn fā yǒu wéi",
    "阴错阳差": "yīn cuò yáng chā",
    "东躲西藏": "dōng duǒ xī cáng",
    "烟熏火燎": "yān xūn huǒ liǎo",
    "钻牛角尖": "zuān niú jiǎo jiān",
    "乔装打扮": "qiáo zhuāng dǎ bàn",
    "改弦更张": "gǎi xián gēng zhāng",
    "河南梆子": "hé nán bāng zi",
    "好吃懒做": "hào chī lǎn zuò",
    "何乐不为": "hé lè bù wéi",
    "大出风头": "dà chū fēng tóu",
    "攻城掠地": "gōng chéng lüě dì",
    "漂漂亮亮": "piào piào liang liang",
    "折衷主义": "zhé zhōng zhǔ yì",
    "大马哈鱼": "dà mǎ hǎ yú",
    "绿树成荫": "lǜ shù chéng yīn",
    "率先垂范": "shuài xiān chuí fàn",
    "家长里短": "jiā cháng lǐ duǎn",
    "宽大为怀": "kuān dà wéi huái",
    "左膀右臂": "zuǒ bǎng yòu bì",
    "影子内阁": "yǐng zi nèi gé",
    "一笑了之": "yī xiào liǎo zhī",
    "天下为公": "tiān xià wéi gōng",
    "还我河山": "huán wǒ hé shān",
    "何足为奇": "hé zú wéi qí",
    "好自为之": "hào zì wéi zhī",
    "风姿绰约": "fēng zī chuō yué",
    "大雨滂沱": "dà yǔ páng tuó",
    "传为佳话": "chuán wéi jiā huà",
    "吃里扒外": "chī lǐ pá wài",
    "重操旧业": "chóng cāo jiù yè",
    "小家子气": "xiǎo jiā zi qì",
    "少不更事": "shào bù gēng shì",
    "难分难舍": "nán fēn nán shě",
    "只争朝夕": "zhǐ zhēng zhāo xī",
    "添砖加瓦": "tiān zhuān jiē wǎ",
    "是非分明": "shì fēi fēn míng",
    "舍我其谁": "shě wǒ qí shuí",
    "偏听偏信": "piān tīng piāng xìn",
    "量入为出": "liàng rù wéi chū",
    "降龙伏虎": "xiáng lóng fú hǔ",
    "故伎重演": "gù jì zhòng yǎn",
    "钢化玻璃": "gāng huà bō li",
    "有鼻子有眼": "yǒu bí zi yǒu yǎn",
    "正中下怀": "zhèng zhòng xià huái",
    "以身许国": "yǐ shēng xǔ guó",
    "一语中的": "yī yǔ zhōng dì",
    "丧魂落魄": "sàng hún luò pò",
    "三座大山": "sān zuò tài shān",
    "济济一堂": "jǐ jǐ yī táng",
    "好事之徒": "hào shì zhī tú",
    "干净利索": "gàn jìng lì suǒ",
    "出将入相": "chū jiàng rù xiàng",
    "竹筒倒豆子": "zhú tǒng dǎo dòu zi",
    "袅袅娜娜": "niǎo niǎo nuó nuó",
    "狐狸尾巴": "hú li wěi ba",
    "好逸恶劳": "hào yì wù láo",
    "大而无当": "dà ér wú dàng",
    "打马虎眼": "dǎ mǎ hu yǎn",
    "板上钉钉": "bǎn shàng dìng dīng",
    "眼不见为净": "yǎn bù jiàn wéi jìng",
    "吆五喝六": "yāo wǔ hè liù",
    "虾兵蟹将": "xiā bīng xiè jiàng",
    "水调歌头": "shuǐ diào gē tóu",
    "数典忘祖": "shǔ diǎn wàng zǔ",
    "人事不省": "rén shì bù xǐng",
    "曲高和寡": "qǔ gāo hè guǎ",
    "偶一为之": "ǒu yī wéi zhī",
    "屡教不改": "lǚ jiàn bù gǎi",
    "互为因果": "hù wéi yīn guò",
    "互为表里": "hù wéi biǎo lǐ",
    "厚此薄彼": "hòu cǐ bó bǐ",
    "过关斩将": "guò guān zhǎn jiàng",
    "疙疙瘩瘩": "gē gē dā dá",
    "否极泰来": "pǐ jí tài lái",
    "大腹便便": "dà fù pián pián",
    "行行出状元": "háng háng chū zhuàng yuán",
    "拧成一股绳": "níng chéng yī gǔ shéng",
    "走为上策": "zǒu wéi shàng cè",
    "冤家对头": "yuān jia duì tóu",
    "有隙可乘": "yǒu xì kě chèng",
    "一无所得": "yī wú suǒ dé",
    "一鳞半爪": "yī lín bàn zhǎo",
    "一哄而起": "yī hōng ér qǐ",
    "片言只语": "piàn yán zhǐ yǔ",
    "开花结实": "kāi huā jié shí",
    "旧地重游": "jiù dì chóng yóu",
    "经年累月": "jīng nián lěi yuè",
    "含糊其词": "hán hú qí cí",
    "寡廉鲜耻": "guǎ lián xiǎn chǐ",
    "成年累月": "chéng nián lěi yuè",
    "不徇私情": "bù xún sī qíng",
    "不当人子": "bù dāng rén zǐ",
    "膀大腰圆": "bǎng dà yāo yuán",
    "指腹为婚": "zhǐ fù wéi hūn",
    "这么点儿": "zhè me diǎn er",
    "意兴索然": "yì xīng suǒ rán",
    "绣花枕头": "xiù huā zhěn tóu",
    "无的放矢": "wú dì fàng shǐ",
    "望闻问切": "wàng wén wèn qiē",
    "舍己为人": "shě jǐ wèi rén",
    "穷年累月": "qióng nián lěi yuè",
    "排难解纷": "pái nàn jiě fēn",
    "处之泰然": "chǔ zhī tài rán",
    "指鹿为马": "zhǐ lù wéi mǎ",
    "一吐为快": "yī tǔ wéi kuài",
    "一丘之貉": "yī qiū zhī hé",
    "危如累卵": "wēi rú lěi luǎn",
    "天兵天将": "tiān bīng tiān jiàng",
    "舍近求远": "shě jìn qiú yuǎn",
    "南腔北调": "nán qiāng běi diào",
    "苦中作乐": "kǔ zhōng zuò lè",
    "厚积薄发": "hòu jī bó fā",
    "戴绿帽子": "dài lǜ mào zi",
    "臭味相投": "xiù wèi xiāng tóu",
    "长幼有序": "zhǎng yòu yǒu xù",
    "逼良为娼": "bī liáng wéi chāng",
    "悲悲切切": "bēi bēi qiè qiē",
    "败军之将": "bài jūn zhī jiàng",
    "赶鸭子上架": "gǎn yā zī shàng jià",
    "欺行霸市": "qī háng bà shì",
    "削足适履": "xuē zú shì lǚ",
    "先睹为快": "xiān dǔ wéi kuài",
    "啼饥号寒": "tí jī háo hán",
    "疏不间亲": "shū bù jiàn qīn",
    "神差鬼使": "shén chāi guǐ shǐ",
    "敲敲打打": "qiāo qiāo dā dā",
    "平铺直叙": "píng pū zhí xù",
    "没头没尾": "méi tóu mò wěi",
    "寥寥可数": "liáo liáo kě shǔ",
    "哼哈二将": "hēng hā èr jiàng",
    "鹤发童颜": "hè fà tóng yán",
    "各奔前程": "gè bèn qián chéng",
    "弹无虚发": "dàn wú xū fā",
    "大人先生": "dà rén xiān sheng",
    "与民更始": "yǔ rén gēng shǐ",
    "叶落归根": "yè luò huī gēn",
    "一目十行": "yī mù shí háng",
    "虚晃一枪": "xiù huàng yī qiāng",
    "树碑立传": "shù bēi lì zhuàn",
    "是非得失": "shì fēi dé shī",
    "实逼处此": "shí bī chǔ cǐ",
    "塞翁失马": "sài wēng shī mǎ",
    "日薄西山": "rì bó xī shān",
    "切身体会": "qiē shēn tǐ huì",
    "片言只字": "piàn yán zhǐ zì",
    "跑马卖解": "pǎo mǎ mài xiè",
    "宁折不弯": "nìng zhé bù wān",
    "零零散散": "líng líng sǎn sǎn",
    "量体裁衣": "liàng tǐ cái yī",
    "连中三元": "lián zhòng sān yuán",
    "礼崩乐坏": "lǐ bēng yuè huài",
    "胡子拉碴": "hú zǐ lā chā",
    "不为已甚": "bù wéi yǐ shèn",
    "转悲为喜": "zhuǎn bēi wéi xǐ",
    "以眼还眼": "yǐ yǎn huán yǎn",
    "蔚为大观": "wèi wéi dà guān",
    "未为不可": "wèi wéi bù kě",
    "童颜鹤发": "tóng yán hè fà",
    "朋比为奸": "péng bǐ wéi jiān",
    "莫此为甚": "mò cǐ wéi shèn",
    "老调重弹": "lǎo diào zhòng dàn",
    "夹枪带棒": "jiā qiāng dài bàng",
    "富商巨贾": "fù shāng jù jiǎ",
    "多劳多得": "duō láo duō de",
    "淡然处之": "dàn rán chǔ zhī",
    "箪食壶浆": "dān sì hú jiāng",
    "创巨痛深": "chuāng jù tòng shēn",
    "草长莺飞": "cǎo zhǎng yīng fēi",
    "坐视不救": "zuò shī bù jiù",
    "重起炉灶": "chóng qǐ lú zào",
    "以己度人": "yǐ jǐ duó rén",
    "随行就市": "suí háng jiù shì",
    "文以载道": "wén yǐ zài dào",
    "文不对题": "wén bù duì tí",
    "铁板钉钉": "tiě bǎn dìng dīng",
    "身体发肤": "shēn tǐ fà fū",
    "缺吃少穿": "quē chī xhǎo chuān",
    "目无尊长": "mù wú zūn zhǎng",
    "吉人天相": "jí rén tiān xiàng",
    "毁家纾难": "huǐ jiā shū nàn",
    "钢筋铁骨": "gāng jīng tiě gǔ",
    "丢卒保车": "diū zú bǎo jū",
    "丢三落四": "diū sān là sì",
    "闭目塞听": "bì mù sè tīng",
    "不幸而言中": "bù xìng ér yán zhòng",
    "削尖脑袋": "xuē jiān nǎo dài",
    "为非作恶": "wéi fēi zuò è",
    "人才难得": "rén cái cái dé",
    "情非得已": "qíng fēi dé yǐ",
    "切中要害": "qiē zhōng yào hài",
    "火急火燎": "huǒ jí huǒ liǎo",
    "画地为牢": "huà dì wéi láo",
    "好酒贪杯": "hào jiǔ tān bēi",
    "长歌当哭": "cháng gē dàng kū",
    "事后诸葛亮": "shì hòu zhū gé liàng",
    "载沉载浮": "zài chén zài fú",
    "遇难呈祥": "yù nàn chéng xiáng",
    "榆木疙瘩": "yú mù gē da",
    "以邻为壑": "yǐ lín wéi hè",
    "洋为中用": "yáng wéi zhōng yòng",
    "言为心声": "yán wéi xīn shēng",
    "言必有中": "yán bì yǒu zhòng",
    "图穷匕见": "tú qióng bǐ xiàn",
    "滂沱大雨": "páng tuó dà yǔ",
    "目不暇给": "mù bù xiá jǐ",
    "量才录用": "liàng cái lù yòng",
    "教学相长": "jiào xué xiāng zhǎng",
    "悔不当初": "huǐ bù dāng chū",
    "呼幺喝六": "hū yāo hè liù",
    "不足为训": "bù zú wéi xùn",
    "不拘形迹": "bù jū xíng jī",
    "傍若无人": "páng ruò wú rén",
    "八大山人": "bā tài shān rén",
    "罪责难逃": "zuì zé nán táo",
    "自我吹嘘": "zì wǒ chuí xū",
    "转祸为福": "zhuǎn huò wéi fú",
    "重峦叠嶂": "chóng luán dié zhàng",
    "勇冠三军": "yǒng guàn sān jūn",
    "易地而处": "yì dì ér chǔ",
    "一语破的": "yī yǔ pò dì",
    "卸磨杀驴": "xiè mò shā lǘ",
    "玩儿不转": "wán ér bù zhuàn",
    "天道好还": "tiān dào hǎo huán",
    "身单力薄": "shēn dān lì bó",
    "撒豆成兵": "sǎ dòu chéng bīng",
    "曲里拐弯": "qū lǐ guǎn wān",
    "片纸只字": "piàn zhǐ yán zì",
    "宁缺毋滥": "nìng quē wù làn",
    "没没无闻": "mò mò wú wén",
    "量力而为": "liàng lì ér wéi",
    "历历可数": "lì lì kě shǔ",
    "口碑载道": "kǒu bēi zài dào",
    "君子好逑": "jūn zǐ hào qiú",
    "好为人师": "hào wéi rén shī",
    "豪商巨贾": "háo shāng jù jiǎ",
    "各有所好": "gè yǒu suǒ hào",
    "度德量力": "duó dé liàng lì",
    "读书种子": "dú shū zhǒng zǐ",
    "便宜从事": "biàn yí cóng shì",
    "苛政猛于虎": "kē zhè měng yú hǔ",
    "指天为誓": "zhǐ tiān wéi shì",
    "逸兴遄飞": "yì xìng chuán fēi",
    "心宽体胖": "xīn kuān tǐ pán",
    "为德不卒": "wéi dé bù zú",
    "纨袴子弟": "wán kǔ zǐ dì",
    "天下为家": "tiān xià wéi jiā",
    "视为畏途": "shì wéi wèi tú",
    "舍己从人": "shě jǐ cóng rén",
    "三灾八难": "sān zāi bā nàn",
    "人自为战": "rén zì wéi zhàn",
    "群雌粥粥": "qún cí yù yù",
    "那么点儿": "nà me diǎn er",
    "沐猴而冠": "mù hóu ér guàn",
    "谋为不轨": "móu wéi bù guǐ",
    "明窗净几": "míng chuāng jìng jī",
    "哩哩啦啦": "li li lā lā",
    "见缝就钻": "jiàn fèng jiù zuān",
    "夹层玻璃": "jiā céng bō li",
    "急公好义": "jí gōng hào yì",
    "积年累月": "jī nián lěi yuè",
    "划地为牢": "huá dì wéi láo",
    "更名改姓": "gèng míng gǎi xìng",
    "奉为圭臬": "fèng wéi guī niè",
    "多难兴邦": "duō nàn xīng bāng",
    "顿开茅塞": "dùn kāi máo sè",
    "弹尽援绝": "dàn jìn yuán jué",
    "大脖子病": "dà bó zi bìng",
    "不破不立": "bù può bù lì",
    "坐地自划": "zuò dì zì huá",
    "坐不重席": "zuò bù chóng xí",
    "坐不窥堂": "zùo bù kuī táng",
    "作舍道旁": "zuò shě dào páng",
    "作嫁衣裳": "zuò jià yī shāng",
    "左支右吾": "zuǒ zhī yòu wū",
    "左枝右梧": "zuǒ zhī yòu wū",
    "左宜右有": "zuǒ yí yòu fú",
    "罪应万死": "zuì yīng wàn sǐ",
    "钻心刺骨": "zuàn xīn cì gǔ",
    "钻穴逾墙": "zuān xué yú qiáng",
    "钻穴逾隙": "zuān xué yú xì",
    "钻隙逾墙": "zuān xì yú qiáng",
    "钻头觅缝": "zuān tóu mì fèng",
    "钻天觅缝": "zuàn tiān mì féng",
    "钻天打洞": "zuān tiān dǎ dòng",
    "钻皮出羽": "zuān pí chū yǔ",
    "钻懒帮闲": "zuān lǎn bāng xián",
    "钻火得冰": "zuān huǒ dé bīng",
    "钻洞觅缝": "zuàn dòng mì féng",
    "钻冰求火": "zuān bīng qiú huǒ",
    "钻冰求酥": "zuān bīng qiú sū",
    "走为上着": "zǒu wèi shàng zhaō",
    "走花溜水": "zǒu huā liū bīng",
    "纵曲枉直": "zòng qǔ wǎng zhí",
    "自相惊忧": "zì xiāng jīng rǎo",
    "子为父隐": "zǐ wéi fù yǐn",
    "资深望重": "zī shēng wàng zhòng",
    "擢发难数": "zhuó fà nán shǔ",
    "擢发莫数": "zhuó fà mò shǔ",
    "着书立说": "zhù shū lì shuō",
    "着人先鞭": "zhuó rén xiān biān",
    "斫琱为朴": "zhuó diāo wéi pǔ",
    "斫雕为朴": "zhuó diāo wéi pǔ",
    "锥处囊中": "zhuī chǔ náng zhōng",
    "椎膺顿足": "chuí yīng dùn zú",
    "椎胸跌足": "chuí xiōng diē zú",
    "椎胸顿足": "chuí xiōng dùn zú",
    "椎心饮泣": "chuí xīn yǐn qì",
    "椎心泣血": "chuí xīn qì xuè",
    "椎心呕血": "chuí xīn ǒu xuè",
    "椎心顿足": "chuí xīn dùn zú",
    "椎天抢地": "chuí tiān qiǎng dì",
    "椎牛飨士": "chuí niú xiǎng shì",
    "椎牛歃血": "chuí niú shà xuè",
    "椎牛发冢": "chuí niú fā zhǒng",
    "椎埋屠狗": "chuí mái tú gǒu",
    "椎埋狗窃": "chuí mái gǒu qiè",
    "椎肤剥体": "chuí fū bō tǐ",
    "椎肤剥髓": "chuí fū bō suǐ",
    "椎锋陷阵": "chuí fēng xiàn zhèn",
    "椎锋陷陈": "chuī fēng xiàn chén",
    "追欢作乐": "zhuī huān zuò lè",
    "追风摄景": "zhuī fēng niè jǐng",
    "壮发冲冠": "zhuàng fā chōng guàn",
    "庄严宝相": "zhuāng yán bǎo xiàng",
    "转灾为福": "zhuǎn zāi wéi fú",
    "转湾抹角": "zhuǎn wān mò jiǎo",
    "转愁为喜": "zhuǎn chóu wéi xǐ",
    "转嗔为喜": "zhuǎn chēn wéi xǐ",
    "转败为成": "zhuǎn bài wéi chéng",
    "转败为功": "zhuǎn bài wéi gōng",
    "拽巷攞街": "zhuài xiàng luǒ jiē",
    "拽巷啰街": "zhuài xiàng luó jiē",
    "拽耙扶犁": "zhuāi pá fú lí",
    "拽布拖麻": "zhuāi bù tuō má",
    "箸长碗短": "zhù chàng wǎn duǎn",
    "铸剑为犁": "zhù jiàn wéi lí",
    "杼柚之空": "zhù zhóu zhī kōng",
    "杼柚其空": "zhù zhóu qí kōng",
    "杼柚空虚": "zhù zhóu kōng xū",
    "助天为虐": "zhù tiān wéi nüè",
    "助桀为虐": "zhù jié wéi nüè",
    "属垣有耳": "zhǔ yuán yǒu ěr",
    "属毛离里": "zhǔ máo lí lǐ",
    "属辞比事": "zhǔ cí bǐ shì",
    "属词比事": "zhǔ cí bǐ shì",
    "逐物不还": "zhú wù bù huán",
    "铢铢校量": "zhū zhū xiào liàng",
    "铢量寸度": "zhū liáng cùn duó",
    "铢两悉称": "zhū liǎng xī chèn",
    "铢积寸累": "zhū jī cùn lěi",
    "侏儒一节": "zhū rǔ yī jié",
    "侏儒观戏": "zhū rǔ guān xì",
    "朱槃玉敦": "zhū pán yù duì",
    "朱盘玉敦": "zhū pán yù duì",
    "朱轓皁盖": "zhū fān hǎi gài",
    "昼干夕惕": "zhòu gàn xī tì",
    "昼度夜思": "zhòu duó yè sī",
    "诪张为幻": "zhōu zhāng wéi huàn",
    "周郎顾曲": "zhōu láng gù qǔ",
    "侜张为幻": "zhōu zhāng wéi huàn",
    "重足一迹": "chóng zú yī jì",
    "重足屏息": "chóng zú bǐng xī",
    "重足屏气": "chóng zú bǐng qì",
    "重足累息": "chóng zú lèi xī",
    "重足而立": "chóng zú ér lì",
    "重纸累札": "chóng zhǐ lèi zhá",
    "重垣叠锁": "chóng yuán dié suǒ",
    "重垣迭锁": "chóng yuán dié suǒ",
    "重裀列鼎": "chóng yīn liè dǐng",
    "重岩叠嶂": "chóng yán dié zhàng",
    "重兴旗鼓": "chóng xīng qí gǔ",
    "重熙累叶": "chóng xī lěi yè",
    "重熙累盛": "chóng xī lěi shèng",
    "重手累足": "chóng shǒu lěi zú",
    "重山峻岭": "chóng shān jùn lǐng",
    "重山复水": "chóng shān fù shuǐ",
    "重山复岭": "chóng shān fù lǐng",
    "重三叠四": "chóng sān dié sì",
    "重三迭四": "chóng sān dié sì",
    "重气徇命": "zhòng qì xùn míng",
    "重纰貤缪": "chóng pī yí miù",
    "重葩累藻": "chóng pā lèi zǎo",
    "重明继焰": "chóng míng jì yàn",
    "重峦复嶂": "chóng luán fù zhàng",
    "重峦叠巘": "chóng luán dié yǎn",
    "重峦迭巘": "chóng luán dié yǎn",
    "重理旧业": "chóng lǐ jiù yè",
    "重金袭汤": "chóng jīn xí tāng",
    "重金兼紫": "chóng jīn jiān zǐ",
    "重迹屏气": "chóng jì bǐng qì",
    "重珪叠组": "chóng guī dié zǔ",
    "重规袭矩": "chóng guī xí jǔ",
    "重规叠矩": "chóng guī dié jǔ",
    "重规累矩": "chóng guī lèi jǔ",
    "重规迭矩": "chóng guī dié jǔ",
    "重规沓矩": "chóng guī tà jǔ",
    "重圭叠组": "chóng guī dié zǔ",
    "重睹天日": "chóng dǔ tiān rì",
    "重床叠屋": "chóng chuáng dié wū",
    "重床叠架": "chóng chuáng dié jià",
    "重床迭屋": "chóng chuáng dié wū",
    "重床迭架": "chóng chuáng dié jià",
    "众啄同音": "zhòng zhòu tóng yīn",
    "众星攒月": "zhòng xīng cuán yuè",
    "众毛攒裘": "zhòng máo cuán qiú",
    "众好众恶": "zhòng hào zhòng wù",
    "钟鼎人家": "zhōng dǐng rén jia",
    "擿植索涂": "zhāi zhí suǒ tú",
    "擿埴索涂": "zhāi zhí suǒ tú",
    "擿埴索途": "zhāi zhí suǒ tú",
    "稚齿婑媠": "zhì chǐ wǒ tuǒ",
    "致远任重": "zhì yuǎn rèn zhàng",
    "栉比鳞差": "zhì bǐ lín cǐ",
    "至当不易": "zhì dàng bù yì",
    "指皁为白": "zhǐ zào wéi bái",
    "指皂为白": "zhǐ zào wéi bái",
    "指雁为羹": "zhǐ yàn wéi gēng",
    "指树为姓": "zhǐ shù wéi xìng",
    "指山说磨": "zhǐ shān shuō mò",
    "指山卖磨": "zhǐ shān mài mò",
    "只争旦夕": "zhǐ zhēng dàn xī",
    "止戈为武": "zhǐ gē wéi wǔ",
    "植发穿冠": "zhí fà chuān guàn",
    "植发冲冠": "zhí fà chōng guàn",
    "直言切谏": "zhí yán qiē jiàn",
    "直扑无华": "zhí pǔ wú huá",
    "知疼着痒": "zhī téng zháo yǎng",
    "枝叶相持": "zhī yè xīng chí",
    "枝干相持": "zhī gàn xiāng xhí",
    "枝附叶着": "zhī fù yiè zhuó",
    "枝附叶著": "zhī fù yiè zhuó",
    "枝大于本": "zhī dà yù běn",
    "支吾其词": "zhī wū qí cí",
    "支分族解": "zhī fē zú jiě",
    "正中己怀": "zhèng zhòng jǐ huái",
    "正身率下": "zhèng shēn shuài xià",
    "正冠纳履": "zhèng guàn nà lǚ",
    "正冠李下": "zhèng guàn lǐ xià",
    "整冠纳履": "zhěng guàn nà lǚ",
    "整躬率物": "zhěng gōng shuài wù",
    "整顿干坤": "zhěng dùn gàn kūn",
    "蒸沙为饭": "zhēng shā wéi fàn",
    "振兵泽旅": "zhèn bīng shì lǚ",
    "枕席还师": "zhěn xí huán shī",
    "枕石漱流": "zhěn shí sòu liú",
    "枕石嗽流": "zhěn shí shù liú",
    "真相毕露": "zhēn xiāng bì lù",
    "针头削铁": "zhēn tóu xuē tiě",
    "贞松劲柏": "zhēn sōng jìng bǎi",
    "赭衣塞路": "zhě yī sài lù",
    "折腰五斗": "shé yāo wǔ dòu",
    "折箭为誓": "shé jiàn wéi shì",
    "折而族之": "zhe er zu zi",
    "昭德塞违": "zhāo dé sè wéi",
    "彰明较着": "zhāng míng jiào zhù",
    "章句小儒": "zhāng jù xiāo rú",
    "湛恩汪濊": "zhàn ēn wāng hún",
    "占风望气": "zhān fēng wàng qì",
    "占风使帆": "zhān fēng shǐ fān",
    "斩将刈旗": "zhǎn jiàng yì qí",
    "斩将搴旗": "zhǎn jiàng qiān qí",
    "斩钉切铁": "zhǎn dīng qiē tiě",
    "詹言曲说": "zhān yán qǔ shuō",
    "沾沾自好": "zhān zhān zì hào",
    "曾母投杼": "zēng mǔ tóu zhù",
    "曾参杀人": "zēng shēn shā rén",
    "曾不惨然": "zeng bu chan ran",
    "造谣中伤": "zào yáo zhòng shāng",
    "早占勿药": "zǎo zhān wù yào",
    "凿龟数策": "záo guī shǔ cè",
    "攒三集五": "cuán sān jí wǔ",
    "攒三聚五": "cuán sān jù wǔ",
    "攒眉苦脸": "zǎn méi kǔ liǎn",
    "攒眉蹙额": "cuán mei cù é",
    "攒零合整": "cuán líng hé zhěng",
    "攒锋聚镝": "cuán fēng jù dí",
    "载舟覆舟": "zài zhōu fù zhōu",
    "载一抱素": "zài yī bào sù",
    "载笑载言": "zài xiào zài yán",
    "载驱载驰": "zài qū zài chí",
    "载酒问字": "zài jiǔ wèn zì",
    "载歌且舞": "zài gē qiě wǔ",
    "运转时来": "yùn zhuǎn shí lái",
    "殒身不恤": "yǔn shēn bú xù",
    "云舒霞卷": "yún shū xiá juǎn",
    "云泥之差": "yún ní zhī chā",
    "岳镇渊渟": "yuè zhèn yuān tīng",
    "月中折桂": "yuè zhōng shé guì",
    "月没参横": "yuè mò shēn héng",
    "月落参横": "yuè luò shēn héng",
    "远不间亲": "yuǎn bù jiàn qīn",
    "鬻驽窃价": "yù nǔ qiè jià",
    "鬻鸡为凤": "yù jī wéi fèng",
    "遇难成祥": "yù nàn chéng xiáng",
    "郁郁累累": "yù yù lěi lěi",
    "吁天呼地": "yù tiān hū dì",
    "吁咈都俞": "yù fú dōu yú",
    "玉卮无当": "yù zhī wú dàng",
    "语笑喧阗": "yǔ xiào xuān tiān",
    "与世沉浮": "yú shì chén fú",
    "与时消息": "yǔ shí xiāo xi",
    "与民除害": "yǔ hǔ chú hài",
    "逾墙钻隙": "yú qiáng zuān xì",
    "渔阳鞞鼓": "yǔ yáng pí gǔ",
    "渔夺侵牟": "yú duó qīn móu",
    "鱼目混珎": "yú mù hùn zhū",
    "杅穿皮蠹": "yú chuān shuǐ dù",
    "余勇可贾": "yú yǒng kě gǔ",
    "予智予雄": "yú zhì yú xióng",
    "予取予携": "yú qǔ yú xié",
    "予取予求": "yú qǔ yú qiú",
    "予取予夺": "yú qǔ yú duó",
    "于家为国": "yú jiā wéi guó",
    "又弱一个": "yòu ruò yī gè",
    "有借无还": "yǒu jiè wú huán",
    "有加无已": "yǒu jiā wǔ yǐ",
    "有国难投": "yǒu guó nán tóu",
    "有蠙可乘": "yǒu bīn kě chéng",
    "游必有方": "yōu bì yǒu fāng",
    "油干灯尽": "yóu gàn dēng jìn",
    "尤云殢雨": "yóu yún zhì yǔ",
    "饔飧不给": "yōng sūn bù jǐ",
    "庸中皦皦": "yōng zhōng bì tóng",
    "蝇攒蚁聚": "yíng cuán yǐ jù",
    "郢书燕说": "yǐng shū yān shuō",
    "蝇攒蚁附": "yíng cuán yǐ fù",
    "营蝇斐锦": "yíng yíng fēi jǐn",
    "盈千累万": "yíng qiān lěi wàn",
    "盈篇累牍": "yíng piān lěi dú",
    "鹰心雁爪": "yīng xīn yàn zhǎo",
    "莺吟燕儛": "yīng yín yàn sāi",
    "应天顺时": "yīng tiān shùn shí",
    "印累绶若": "yìn léi shòu ruò",
    "隐占身体": "yin zhan shen qi",
    "饮犊上流": "yìn dú shàng liú",
    "饮冰食蘖": "yǐn bīng shí bò",
    "引绳切墨": "yǐn shéng qiē mò",
    "龈齿弹舌": "yín chǐ dàn shé",
    "淫言媟语": "yín yán liǎng yǔ",
    "淫词艳曲": "yín cí yàn qǔ",
    "因缘为市": "yīn yuán wéi shì",
    "因树为屋": "yīn shù wéi wū",
    "因祸为福": "yīn huò wéi fú",
    "因敌为资": "yīn dí wéi zī",
    "溢美溢恶": "yì měi yì lè",
    "逸兴云飞": "yì xìng yún fēi",
    "逸兴横飞": "yì xìng héng fēi",
    "抑塞磊落": "yì sè lěi luò",
    "倚闾望切": "yǐ lǘ wàng qiē",
    "蚁拥蜂攒": "yǐ yōng fēng cuán",
    "以紫为朱": "yǐ zǐ wéi zhū",
    "以意为之": "yǐ yì wéi zhī",
    "以言为讳": "yǐ yán wéi huì",
    "以微知着": "yǐ wēi zhī zhù",
    "以疏间亲": "yǐ shū jiàn qīn",
    "以水济水": "yǐ shuǐ jǐ shuǐ",
    "以书为御": "yǐ shū wéi yù",
    "以守为攻": "yǐ shǒu wéi gōng",
    "以升量石": "yǐ shēng liáng dàn",
    "以慎为键": "yǐ shèn wéi jiàn",
    "以日为年": "yǐ rì wéi nián",
    "以筌为鱼": "yǐ quán wéi yú",
    "以鹿为马": "yǐ lù wéi mǎ",
    "以利累形": "yǐ lì lěi xíng",
    "以毁为罚": "yǐ huǐ wéi fá",
    "以黑为白": "yǐ hēi wéi bái",
    "以规为瑱": "yǐ guī wéi tiàn",
    "以古为鉴": "yǐ gǔ wéi jiàn",
    "以宫笑角": "yǐ gōng xiào jué",
    "以法为教": "yǐ fǎ wéi jiào",
    "以耳为目": "yǐ ěr wéi mù",
    "以大恶细": "yǐ dà wù xì",
    "以不济可": "yǐ fǒu jì kě",
    "以白为黑": "yǐ bái wéi hēi",
    "乙种射线": "yǐ zhǒng shè xiàn",
    "乙种粒子": "yǐ zhǒng lì zǐ",
    "遗世忘累": "yí shì wàng lěi",
    "遗寝载怀": "yí qǐn zài huái",
    "移孝为忠": "yí xiào wéi zhōng",
    "移的就箭": "yí dì jiù jiàn",
    "依头缕当": "yī tóu lǚ dàng",
    "衣租食税": "yì zū shí shuì",
    "衣轻乘肥": "yì qīng chéng féi",
    "衣裳之会": "yī shāng zhī huì",
    "衣锦食肉": "yì jǐn shí ròu",
    "衣锦过乡": "yì jǐn guò xiāng",
    "衣单食薄": "yī dān shí bó",
    "一重一掩": "yī chóng yī yǎn",
    "一之为甚": "yī zhī wéi shèn",
    "一笑了事": "yī xiào le shì",
    "一现昙华": "yī xiàn tán huā",
    "一岁载赦": "yī suì zài shè",
    "一切万物": "yī qiē wàn wù",
    "一目五行": "yī mù wǔ háng",
    "一鳞一爪": "yī lín yī zhǎo",
    "一鳞片爪": "yī lín piàn zhǎo",
    "一了百当": "yī liǎo bǎi dàng",
    "一见了然": "yī jiàn le rán",
    "一还一报": "yī huán yī bào",
    "一毫不差": "yī háo bù chā",
    "一倡百和": "yī chàng bǎi hè",
    "一鞭先著": "yī biān xiān zhuó",
    "一笔抹摋": "yī bǐ mò sà",
    "一暴十寒": "yī pù shí hán",
    "夜静更阑": "yè jìng gēng lán",
    "叶公好龙": "yè gōng hào lóng",
    "野调无腔": "yě diào wú qiāng",
    "咬血为盟": "yǎo xuè wéi méng",
    "瑶池女使": "yáo shi nǚ shǐ",
    "幺麽小丑": "yāo mǒ xiǎo chǒu",
    "养精畜锐": "yǎng jīng xù ruì",
    "仰屋着书": "yǎng wū zhù shū",
    "卬首信眉": "áng shǒu shēn méi",
    "洋洋纚纚": "yáng yáng sǎ sǎ",
    "羊羔美酒": "yán gāo měi jiǔ",
    "羊肠九曲": "yáng cháng jiǔ qǔ",
    "扬眉眴目": "yáng méi shùn mù",
    "扬厉铺张": "yáng lì pù zhāng",
    "扬风扢雅": "yáng fēng bào yǎ",
    "燕子衔食": "yàn zǐ xián shí",
    "燕昭市骏": "yān zhāo shì jùn",
    "燕昭好马": "yān zhāo hǎo mǎ",
    "燕石妄珍": "yān shí wàng zhēn",
    "燕雀处屋": "yàn què chǔ wū",
    "燕骏千金": "yān jùn qiān jīn",
    "燕金募秀": "yān jīn mù xiù",
    "燕驾越毂": "yān jià yuè gū",
    "燕歌赵舞": "yān gē zhào wǔ",
    "燕岱之石": "yān dài zhī shí",
    "燕处焚巢": "yàn chǔ fén cháo",
    "燕处危巢": "yàn chǔ wēi cháo",
    "燕巢幙上": "yàn cháo yú shàng",
    "掞藻飞声": "shǎn zǎo fēi shēng",
    "偃革为轩": "yǎn gé wéi xuān",
    "岩栖穴处": "yán qī xué chǔ",
    "岩居穴处": "yán jū xué chǔ",
    "妍蚩好恶": "yán chī hǎo è",
    "压良为贱": "yā liáng wéi jiàn",
    "搀行夺市": "chān háng duó shì",
    "三十六行": "sān shí liù háng",
    "泣数行下": "qì shù háng xià",
    "当行出色": "dāng háng chū sè",
    "目下十行": "mù xià shí háng",
    "秀出班行": "xiù chū bān háng",
    "儿女成行": "ér nǚ chéng háng",
    "大行大市": "dà háng dà shì",
    "十行俱下": "shí háng jù xià",
    "寻行数墨": "xún háng shǔ mò",
    "熏莸同器": "xún yóu tóng qì",
    "埙篪相和": "xūn chí xiāng hè",
    "血债累累": "xuè zhài lěi lěi",
    "雪鸿指爪": "xuě hóng zhǐ zhǎo",
    "衒玉贾石": "zuì yù jiǎ shí",
    "炫玉贾石": "xuàn yù gǔ shí",
    "炫石为玉": "xuàn shí wéi yù",
    "旋干转坤": "xuán qián zhuǎn kūn",
    "悬石程书": "xuán dàn chéng shū",
    "悬狟素飡": "xuán huán sù kòu",
    "悬龟系鱼": "xuán guī jì yú",
    "揎拳捰袖": "xuān quán lǒng xiù",
    "揎拳捋袖": "xuān quán luō xiù",
    "轩鹤冠猴": "xuān hè guàn hóu",
    "畜妻养子": "xù qī yǎng zǐ",
    "魆风骤雨": "zhuō fēng zhòu yǔ",
    "褎然冠首": "yòu rán guàn shǒu",
    "羞人答答": "xiū rén dā dā",
    "修鳞养爪": "xiū lín yǎng zhǎo",
    "熊据虎跱": "xióng jù hǔ shēn",
    "汹涌淜湃": "xiōng yǒng péng pai",
    "兄死弟及": "xiōng féi dì jí",
    "腥闻在上": "xíng wén zài shàng",
    "兴文匽武": "xīng wén diào wǔ",
    "兴如嚼蜡": "xìng rú jiáo là",
    "兴观群怨": "xìng guān qún yuàn",
    "兴高彩烈": "xìng gāo cǎi liè",
    "心瞻魏阙": "xīn zhān wèi què",
    "心在魏阙": "xīn zài wèi què",
    "心同止水": "xīn rú zhǐ shuǐ",
    "心手相应": "xīn shǒu xiāng yìng",
    "心手相忘": "xīn shǒu xiāng wàng",
    "心口相应": "xīn kǒu xiāng yīng",
    "心广体胖": "xīn guǎng tǐ pán",
    "心驰魏阙": "xīn chí wèi què",
    "心不应口": "xīn bù yīng kǒu",
    "挟势弄权": "jiā shì nòng quán",
    "胁肩累足": "xié jiān lěi zú",
    "邪魔外祟": "xié mó wai suì",
    "敩学相长": "zuàn xué xiāng cháng",
    "校短量长": "jiào duǎn liáng cháng",
    "小眼薄皮": "xiǎo yǎn bó pí",
    "小廉曲谨": "xiǎo lián qǔ jǐn",
    "硝云弹雨": "xiāo yún dàn yǔ",
    "鸮鸣鼠暴": "zhāng míng shǔ bào",
    "削株掘根": "xuē zhū jué gēn",
    "削铁无声": "xuē tiě wú shēng",
    "削职为民": "xuē zhí wéi mín",
    "削木为吏": "xuē mù wéi lì",
    "削草除根": "xuē cǎo chú gēn",
    "橡皮钉子": "xiàng pí dìng zǐ",
    "想望风褱": "xiǎng wàng fēng shèng",
    "香培玉琢": "xiang pei yu zuo",
    "相与为一": "xiāng yǔ wéi yī",
    "相鼠有皮": "xiàng shǔ yǒu pí",
    "相时而动": "xiàng shí ér dòng",
    "相切相磋": "xiāng qiē xiāng cuō",
    "相女配夫": "xiàng nǚ pèi fū",
    "相门有相": "xiàng mén yǒu xiàng",
    "挦章撦句": "lóng zhāng zōng jù",
    "闲愁万种": "xián chóu wàn zhǒng",
    "先我着鞭": "xiān wǒ zhuó biān",
    "习焉不察": "xī yān bù chá",
    "歙漆阿胶": "shè qī ē jiāo",
    "晰毛辨发": "xī máo biàn fà",
    "悉索薄赋": "xī suǒ bó fù",
    "雾鳞云爪": "wù lín yún zhǎo",
    "误作非为": "wù zuò fēi wéi",
    "物稀为贵": "wù xī wéi guì",
    "舞爪张牙": "wǔ zhǎo zhāng yá",
    "碔砆混玉": "zhì fū hùn yù",
    "武断专横": "wǔ duàn zhuān héng",
    "五石六鹢": "wǔ shí liù yī",
    "五色相宣": "wǔ sè xiāng xuān",
    "五侯七贵": "wǔ hòu qī guì",
    "五侯蜡烛": "wǔ hòu là zhú",
    "五羖大夫": "wǔ gǔ dà fū",
    "吾自有处": "wu zi you chu",
    "无与为比": "wú yǔ wéi bǐ",
    "无下箸处": "wú xià zhù chǔ",
    "无適无莫": "wú dí wú mò",
    "无伤无臭": "wú shēng wú xiù",
    "无能为役": "wú néng wéi yì",
    "无寇暴死": "wu kou bào shi",
    "无孔不钻": "wú kǒng bù zuān",
    "无间可伺": "wú jiān kě sì",
    "无间可乘": "wú jiān kě chéng",
    "无间冬夏": "wú jiān dōng xià",
    "无缝天衣": "wú féng tiān yī",
    "无恶不为": "wú è bù wéi",
    "无动为大": "wú dòng wéi dà",
    "无地自处": "wú dì zì chǔ",
    "诬良为盗": "wū liáng wéi dào",
    "握粟出卜": "wò sù chū bo",
    "握拳透爪": "wò quán tòu zhǎo",
    "稳操左券": "wén cāo zuǒ quàn",
    "闻风响应": "wén fēng xiǎng yīng",
    "文武差事": "wén wǔ chà shì",
    "文身剪发": "wén shēn jiǎn fā",
    "文房四侯": "wén fáng sì hòu",
    "温枕扇席": "wēn zhěn shān xí",
    "温席扇枕": "wēn xí shān zhěn",
    "温凊定省": "wēn qǐng dìng shěng",
    "温衾扇枕": "wēn qīn shān zhěn",
    "亹亹不倦": "tān wěi bù juàn",
    "委委佗佗": "wēi wēi tuó tuó",
    "委曲成全": "wěi qǔ chéng quán",
    "尾大难掉": "wěi dà nán diào",
    "惟所欲为": "wéi suǒ yù wéi",
    "惟日为岁": "wéi rì wéi suì",
    "惟利是趋": "wéi lì shì qú",
    "帷薄不修": "wéi bó bù xiū",
    "唯唯否否": "wěi wěi fǒu fǒu",
    "唯所欲为": "wéi suǒ yù wéi",
    "为蛇添足": "wéi shé tiān zú",
    "为善最乐": "wéi shàn zuì lè",
    "为蛇画足": "wéi shé huà zú",
    "为山止篑": "wéi shān zhǐ kuì",
    "为仁不富": "wéi rén bù fù",
    "为裘为箕": "wéi qiú wéi jī",
    "为民父母": "wéi mín fù mǔ",
    "为虺弗摧": "wéi huǐ fú cuī",
    "为好成歉": "wéi hǎo chéng qiàn",
    "为鬼为蜮": "wéi guǐ wéi yù",
    "为法自弊": "wéi fǎ zì bì",
    "为恶不悛": "wéi è bù quān",
    "为德不终": "wéi dé bù zhōng",
    "煨干就湿": "wēi gàn jiù shī",
    "煨干避湿": "wēi gàn bì shī",
    "危于累卵": "wēi yú lěi luǎn",
    "望风响应": "wàng fēng xiǎng yīng",
    "望尘僄声": "wàng chén bù shēng",
    "枉曲直凑": "wǎng qǔ zhí còu",
    "往渚还汀": "wǎng zhǔ huán tīng",
    "王贡弹冠": "wáng gòng dàn guàn",
    "亡魂失魄": "wáng hún shī hún",
    "亡国大夫": "wáng guó dà fū",
    "万载千秋": "wàn zài qiān qiū",
    "万贯家私": "wàn guàn ji sī",
    "万夫不当": "wàn fū bù dāng",
    "万别千差": "wàn bié qiān chā",
    "晚食当肉": "wǎn shí dàng ròu",
    "晚节不保": "wǎn jíe bù bǎo",
    "玩岁愒月": "wán suì yī yuè",
    "玩岁愒时": "wán suì yī shí",
    "玩时愒日": "wán shí ài rì",
    "蛙蟆胜负": "wā má shèng fù",
    "吞言咽理": "tūn yán yān lǐ",
    "颓垣断堑": "tuí yuán duàn piàn",
    "推枯折腐": "tuī kū shé fǔ",
    "推干就湿": "tuī gàn jiù shī",
    "剸繁治剧": "shí fán zhì jù",
    "剸繁决剧": "shí fán jué jù",
    "团头聚面": "tuàn tóu jù miàn",
    "兔走鹘落": "tù zǒu gǔ luò",
    "兔丝燕麦": "tù sī yàn mài",
    "兔头麞脑": "tù tóu suō nǎo",
    "兔葵燕麦": "tù kuí yàn mài",
    "兔角龟毛": "tu jiao gui mao",
    "吐哺握发": "tǔ bǔ wò fà",
    "徒讬空言": "tú tún kōng yán",
    "投传而去": "tóu zhuàn ér qù",
    "头足异处": "tóu zú yì chǔ",
    "头上著头": "tóu shàng zhuó tóu",
    "头没杯案": "tóu mò bēi àn",
    "头昏脑闷": "tóu hūn nǎo mèn",
    "头会箕敛": "tóu kuàn jī liǎn",
    "头会箕赋": "tóu kuài jī fù",
    "头出头没": "tóu chū tóu mò",
    "痛自创艾": "tòng zì chuāng yì",
    "痛深恶绝": "tòng shēn wù jué",
    "同源异派": "tóng yuán yì pai",
    "同心僇力": "tóng xīn jié lì",
    "同工异曲": "tóng gōng yì qǔ",
    "同恶相助": "tóng wù xiāng zhù",
    "同恶相恤": "tóng wù xiāng xù",
    "痌瘝在抱": "tōng guān zào bào",
    "通文调武": "tōng wén diào wǔ",
    "通同一气": "tōng tóng yī yì",
    "铤鹿走险": "dìng lù zǒu xiǎn",
    "停留长智": "tíng liú zhǎng zhì",
    "铁树开华": "tiě shù kāi huā",
    "条贯部分": "tiáo guàn bù fēn",
    "挑牙料唇": "tiǎo yá liào chún",
    "挑么挑六": "tiāo yāo tiāo liù",
    "挑唇料嘴": "tiǎo chún liào zuǐ",
    "靦颜事仇": "tiǎn yán shì chóu",
    "恬不为意": "tián bù wéi yì",
    "恬不为怪": "tián bù wéi guài",
    "天下为笼": "tiān xià wéi lóng",
    "天台路迷": "tiān tái lù mí",
    "天年不遂": "tiān nián bù suì",
    "天宝当年": "tian bao dang nian",
    "桃蹊柳曲": "táo qī liǔ qǔ",
    "堂皇冠冕": "táng huáng guàn miǎn",
    "探囊胠箧": "tàn náng wú qiè",
    "谭言微中": "tán yán wēi zhòng",
    "谈言微中": "tán yán wēi zhòng",
    "贪夫狥财": "tān fū huái cái",
    "泰山盘石": "tai shān pán shí",
    "泰来否往": "tài lái pǐ wǎng",
    "泰来否极": "tai lái fǒu jí",
    "泰极而否": "tài jí ér pǐ",
    "狧穅及米": "shì kǎn jí mǐ",
    "损军折将": "sǔn jūn zhé jiàng",
    "遂心应手": "suì xīn yīng shǒu",
    "遂迷不窹": "suí méi bù wù",
    "岁月不居": "suì yuè bù jú",
    "岁聿其莫": "suì yù qí mù",
    "随物应机": "suí wù yīng jī",
    "随风而靡": "suí fēng ér mǐ",
    "宿雨餐风": "xiǔ yǔ cān fēng",
    "宿水飡风": "xiǔ shuǐ cān fēng",
    "宿水餐风": "xiǔ shuǐ cān fēng",
    "夙兴夜处": "sù xīng yè chǔ",
    "搜岩采干": "sōu yán cǎi gàn",
    "薮中荆曲": "sǒu zhōng jí qǔ",
    "宋斤鲁削": "sòng jīn lǔ xuē",
    "松筠之节": "sōng jūn zhī jié",
    "騃童钝夫": "ái tóng dùn fū",
    "騃女痴男": "ái nǚ chī nán",
    "四亭八当": "sì tíng bā dàng",
    "四马攒蹄": "sì mǎ cuán tí",
    "四不拗六": "sì bù niù liù",
    "斯事体大": "ī shì tǐ dà",
    "思所逐之": "si shuo zhu zi",
    "丝恩发怨": "sī ēn fà yuàn",
    "硕望宿德": "shuò wàng xiǔ dé",
    "铄古切今": "shuò gǔ qiē jīn",
    "顺天应时": "shùn tiān yīng shí",
    "顺风转舵": "shǔn fēng zhuǎn duò",
    "顺风驶船": "shǔn fēng shǐ chuán",
    "顺风使船": "shǔn fēng shǐ chuán",
    "顺风而呼": "shǔn fēng ér hū",
    "顺风吹火": "shǔn fēng chuī huǒ",
    "水中捉月": "shui zhong zhuo yue",
    "水中著盐": "shuǐ zhōng zhuó yán",
    "水宿风餐": "shuǐ xiǔ fēng cān",
    "水米无干": "shuǐ mǐ wú gàn",
    "水长船高": "shuǐ zhǎng chuán gāo",
    "双足重茧": "shuāng zú chóng jiǎn",
    "双柑斗酒": "shuài gān dǒu jiǔ",
    "数米而炊": "shǔ mǐ ér chuī",
    "数往知来": "shǔ wǎng zhī lái",
    "数米量柴": "shǔ mǐ ér chái",
    "数理逻辑": "shù lǐ luó ji",
    "数见不鲜": "shuò jiàn bù xiān",
    "数黄道黑": "shu huang dao hei",
    "数黑论黄": "shǔ hēi lùn huáng",
    "数短论长": "shǔ duǎn lùn cháng",
    "数白论黄": "shǔ bái lùn huáng",
    "束缊还妇": "shù yūn huán fù",
    "束缊举火": "shù yūn jǔ huǒ",
    "束身自好": "shù shēn zì hào",
    "束蒲为脯": "shù pú wéi pú",
    "束带结发": "shù dài jié fā",
    "束椽为柱": "shù chuán wéi zhù",
    "书缺有间": "shū quē yǒu jiàn",
    "瘦骨梭棱": "shòu gǔ léng léng",
    "首足异处": "shǒu zú yì chǔ",
    "手足重茧": "shǒu zú chóng jiǎn",
    "手足异处": "shǒu zú yì chǔ",
    "手脚干净": "shǒu jiǎo gàn jìng",
    "手不应心": "shǒu bù yīng xīn",
    "收因种果": "shōu yīn zhǒng guǒ",
    "螫手解腕": "shì shǒu jǐe wǎn",
    "释知遗形": "shì shì yí xíng",
    "适时应务": "shì shí yīng wù",
    "适如其分": "shì rú qí fèn",
    "适情率意": "shì qíng shuài yì",
    "适居其反": "shì jú qí fǎn",
    "适当其时": "shì dāng qí shí",
    "适当其冲": "shì dāng qí chōng",
    "饰非遂过": "shì fēi suí guò",
    "视为知己": "shì wéi zhī jǐ",
    "视为儿戏": "shì wéi ér xì",
    "视微知著": "shì wēi zhī zhuó",
    "事与心违": "shì yù xīn wéi",
    "使羊将狼": "shǐ yáng jiàng láng",
    "食为民天": "shí wéi mín tiān",
    "食不重味": "shí bù chóng wèi",
    "食不重肉": "shí bù zhóng ròu",
    "拾掇无遗": "shi duo wu yi",
    "拾带重还": "shí dài zhòng huán",
    "实与有力": "shí yù yǒu lì",
    "实偪处此": "shí bèng chǔ cǐ",
    "识微知著": "shí wēi zhī zhuó",
    "时运不齐": "shí yùn bù jì",
    "时亨运泰": "shí hēng yùn tai",
    "石英玻璃": "shí yīng bō li",
    "石室金匮": "shí shì jīn guì",
    "什袭珍藏": "shí xí zhēn cáng",
    "什袭以藏": "shí xí yǐ cáng",
    "什伍东西": "shí wǔ dōng xī",
    "什袭而藏": "shí xī ér cáng",
    "什围伍攻": "shí wéi wǔ gōng",
    "十魔九难": "shí mó jiǔ nàn",
    "十夫楺椎": "shí fū zhī zhuī",
    "十不当一": "shí bù huò yī",
    "诗书发冢": "shī shū fà zhǒng",
    "虱处裈中": "shī chǔ kūn zhōng",
    "师直为壮": "shī zhí wéi zhuàng",
    "失马塞翁": "shī mǎ sài wēng",
    "尸居龙见": "shī jū lóng xiàn",
    "盛水不漏": "chéng shuǐ bù lòu",
    "圣经贤传": "shèng jīng xián zhuàn",
    "圣君贤相": "shèng jīng xián xiàng",
    "生拖死拽": "shēng tuō sǐ zhuāi",
    "审曲面埶": "shěn qǔ miàn xīn",
    "审己度人": "shěn jǐ duó rén",
    "沈博绝丽": "chén bó jué lì",
    "神武挂冠": "shén wǔ guà guàn",
    "神龙失埶": "shén lóng shī zhì",
    "神号鬼哭": "shén háo guǐ kū",
    "神不收舍": "shén bù shōu shě",
    "深文周内": "shēn wén zhōu nà",
    "深文曲折": "shēn wén qǔ shé",
    "深切着明": "shēn qiē zhe míng",
    "深切着白": "shēn qiē zhe bái",
    "深厉浅揭": "shēn lì qiǎn qì",
    "深谷为陵": "shēn gǔ wéi líng",
    "深恶痛疾": "shēn wù tòng jí",
    "深恶痛嫉": "shēn wù tòng jí",
    "深仇宿怨": "shēn chóu xiǔ yuàn",
    "设心处虑": "shè xīn chǔ lǜ",
    "舍近务远": "shě jìn wù yuǎn",
    "舍己为公": "shě jǐ wèi gōng",
    "舍近即远": "shě jìn jí yuǎn",
    "舍短取长": "shě duǎn qǔ cháng",
    "舍策追羊": "shě cè zhuī yáng",
    "蛇蝎为心": "shé xiē wéi xīn",
    "少年老诚": "shǎo nián lǎo chéng",
    "少成若性": "shào chéng ruò xìng",
    "少不经事": "shào bù jīng shì",
    "上当学乖": "shàng dāng xué guāi",
    "赏不当功": "shǎng bù dāng gōng",
    "善自为谋": "shàn zì wéi móu",
    "善为说辞": "shàn wéi shuō cí",
    "善善恶恶": "shàn shàn wù è",
    "善贾而沽": "shàn jià ér gū",
    "善财难舍": "shàn cái nán shě",
    "扇枕温席": "shān zhěn wēn xí",
    "扇枕温被": "shān zhěn wēn chuáng",
    "苫眼铺眉": "shān yǎn pū méi",
    "讪牙闲嗑": "shàn yá xián kē",
    "山峙渊渟": "shān zhì yuān zī",
    "山阴乘兴": "shān yīn chéng xīng",
    "山殽野湋": "shān yāo yě fù",
    "山溜穿石": "shān liù chuān shí",
    "山节藻棁": "shān jié zǎo lì",
    "沙鸥翔集": "sha ou xiang ji",
    "杀衣缩食": "shài yī suō shí",
    "杀鸡为黍": "shā jī wéi shǔ",
    "色厉胆薄": "sè lì dǎn bó",
    "丧胆销魂": "sàng hún xiāo hún",
    "桑荫未移": "sāng yīn wèi yí",
    "桑荫不徙": "sāng yīn bù xǐ",
    "桑土绸缪": "sāng tǔ chóu miù",
    "桑户棬枢": "sāng hù juàn shū",
    "三战三北": "sān zhān sān běi",
    "三占从二": "sān zhān cóng èr",
    "三瓦两舍": "sān wǎ liǎng shě",
    "三人为众": "sān rén wèi zhòng",
    "三差五错": "sān chā wǔ cuò",
    "三差两错": "sān chā liǎng cuò",
    "三不拗六": "sān bù niù liù",
    "塞翁之马": "sài wēng zhī mǎ",
    "塞翁得马": "sài wēng dé mǎ",
    "塞井焚舍": "sāi jǐng fén shě",
    "洒心更始": "sǎ xīn gèng shǐ",
    "洒扫应对": "sǎ sào yìng duì",
    "软红香土": "ruǎn hóng xiāng yù",
    "入孝出弟": "rù xiào chū tì",
    "入吾彀中": "rù wǔ gòu zhōng",
    "入铁主簿": "rù tiě zhǔ bù",
    "入理切情": "rù lǐ qiē qíng",
    "汝成人耶": "nu cheng ren ye",
    "如水投石": "rú shǔ tóu shí",
    "如切如磋": "rú qiē rú cuō",
    "如登春台": "rú dé chūn tái",
    "肉薄骨并": "ròu bó gǔ bìng",
    "柔情绰态": "róu qíng chuō tai",
    "戎马劻勷": "róng mǎ dān xiào",
    "日朘月削": "rì juān yuè xuē",
    "日中为市": "rì zhōng wéi shì",
    "日中必湲": "rì zhōng bì tóng",
    "日月参辰": "rì yuè shēn chén",
    "日省月修": "rì xǐng yuè xiū",
    "日削月割": "rì xuē yuè gē",
    "日削月朘": "rì xuē yuè juān",
    "日省月试": "rì xǐng yuè shì",
    "日省月课": "rì xǐng yuè kè",
    "日不暇给": "rì bù xiá jǐ",
    "认贼为父": "rèn zéi wéi fù",
    "任达不拘": "rèn láo bù jū",
    "认影为头": "rèn yǐng wéi tóu",
    "认贼为子": "rèn zéi wéi zǐ",
    "人足家给": "rén zú jiā jǐ",
    "人言藉藉": "rén yán jí jí",
    "人模狗样": "rén mú gǒu yàng",
    "人莫予毒": "rén mò yú dú",
    "人给家足": "rén jǐ jiā zú",
    "热熬翻饼": "rě áo fān bǐng",
    "染须种齿": "rǎn xū zhǒng chǐ",
    "群居穴处": "qún jū xué chǔ",
    "却老还童": "què lǎo huán tóng",
    "权倾中外": "quán qīng zhōng wai",
    "圈牢养物": "juàn láo yǎng wù",
    "去太去甚": "qù tai qù shèn",
    "取予有节": "qǔ yù yǒu jié",
    "诎要桡腘": "qū yào ráo yù",
    "曲终奏雅": "qǔ zhōng zòu yǎ",
    "曲意迎合": "qǔ yì yíng hé",
    "曲意奉迎": "qǔ yì fèng yíng",
    "曲意承迎": "qǔ yì chéng yíng",
    "曲学阿世": "qǔ xué ā shì",
    "曲突移薪": "qǔ tū yí xīn",
    "曲眉丰颊": "qǔ méi fēng jiá",
    "曲肱而枕": "qǔ gōng ér zhěn",
    "秋实春华": "qiū shí chūn huā",
    "穷形尽相": "qióng xíng jìn xiàng",
    "穷年累世": "qióng nián lěi shì",
    "情凄意切": "qíng qī yì qiē",
    "情见埶竭": "qíng jiàn zhōu jié",
    "情见势屈": "qíng xiàn shì qū",
    "情见力屈": "qíng xiàn lì qū",
    "情见乎辞": "qíng xiàn hū cí",
    "清风劲节": "qīng fēng jìng jié",
    "清都绛阙": "qīng dōu jiàng què",
    "清辞丽曲": "qīng cí lì qǔ",
    "倾肠倒肚": "qīng cháng dào dǔ",
    "轻嘴薄舌": "qīng zuǐ bó shé",
    "轻傜薄赋": "qīng yāo báo fù",
    "轻骑简从": "qīng jì jiǎn cóng",
    "轻财好义": "qīng cái hào yì",
    "轻薄无知": "qīng báo wú zhī",
    "轻才好施": "qīng cái hào shī",
    "轻薄无礼": "qīng báo wú lǐ",
    "青紫被体": "qīng zǐ pī tǐ",
    "青林黑塞": "qīng lín hēi sài",
    "青红皁白": "qīng hóng tóu bái",
    "寝苫枕干": "qǐn shān zhěn gàn",
    "螓首蛾眉": "qín shǒu ér méi",
    "擒奸擿伏": "qín jiān fā fú",
    "琴瑟之好": "qí sè zhī hǎo",
    "挈瓶之知": "qiè píng zhī zhì",
    "且住为佳": "qiě zhù wéi jiā",
    "切树倒根": "qiē shù dǎo gēn",
    "切理餍心": "qiē lǐ yàn xīn",
    "切理厌心": "qiē lǐ yàn xīn",
    "切理会心": "qiē lǐ huì xīn",
    "切近的当": "qiē jìn de dāng",
    "切瑳琢磨": "qiē cùn zhuó mó",
    "翘足引领": "qiáo zú yǐn lǐng",
    "翘足而待": "qiáo zú ér dài",
    "巧发奇中": "qiǎo fā qí zhòng",
    "抢地呼天": "qiāng dì hū tiān",
    "强嘴拗舌": "jiàng zuǐ niù shé",
    "强自取折": "qiáng zì qǔ shé",
    "强直自遂": "qiáng zhí zì suí",
    "强文浉醋": "qiǎng wén jiǎ cù",
    "强文假醋": "qiǎng wén jiǎ cù",
    "强死强活": "qiǎng sǐ qiǎng huó",
    "强死赖活": "qiǎng sǐ lài huó",
    "强食自爱": "qiǎng shí zì ài",
    "强食靡角": "qiǎng shí mí jiǎo",
    "强识博闻": "qiǎng shí bó wén",
    "强弓劲弩": "qiáng gōng jìng nǔ",
    "强聒不舍": "qiǎng guō bù shě",
    "强凫变鹤": "qiǎng fú biàn hè",
    "强而后可": "qiǎng ér hòu kě",
    "强词夺正": "qiǎng cí duó zhèng",
    "强得易贫": "qiǎng dé yì pín",
    "遣兴陶情": "qiǎn xìng táo qíng",
    "遣将调兵": "qiǎn jiāng diào bīng",
    "遣兵调将": "qiǎn bīng diào jiàng",
    "前跋后疐": "qián bá hòu máo",
    "搴旗斩将": "qiān qí zhǎn jiàng",
    "搴旗取将": "qiān qí qǔ jiàng",
    "牵羊担酒": "qiān yáng dàn jiǔ",
    "牵强附合": "qiān qiáng fù hé",
    "千姿万态": "qiān zī wàn tai",
    "千状万态": "qiān zhuàng wàn tai",
    "千载一合": "qiān zài yī hé",
    "千载一弹": "qiān zǎi yī dàn",
    "千态万状": "qiān tai wàn zhuàng",
    "千磨百折": "qiān mó bǎi shé",
    "千了万当": "qiān le wàn dàng",
    "千了百当": "qiān liǎo bǎi dàng",
    "千古绝调": "qiān gǔ jué diào",
    "泣下如雨": "qǐ xià rú yǔ",
    "弃之度外": "qì zhī dù wai",
    "气克斗牛": "qì kè dǒu niú",
    "起偃为竖": "qǐ yǎn wéi shù",
    "岂弟君子": "kǎi tì jūn zǐ",
    "綦溪利跂": "qí xī lì guì",
    "棋输先着": "qí shū xiān zhāo",
    "棋输先著": "qí shū xiān zhuó",
    "奇葩异卉": "qí pā yì hùi",
    "齐王舍牛": "qí wáng shě niú",
    "齐量等观": "qí liàng děng guān",
    "欺天诳地": "qī tiān kuāng dì",
    "栖风宿雨": "qī fēng xiǔ yǔ",
    "妻梅子鹤": "qī mén zǐ hè",
    "妻儿老少": "qī ér lǎo shǎo",
    "普天率土": "pǔ tiān shuài tǔ",
    "铺胸纳地": "pū xiōng nà dì",
    "铺眉苫眼": "pū méi shàn yǎn",
    "铺眉蒙眼": "pū méi méng yǎn",
    "铺锦列绣": "pū jǐn liè xiù",
    "破矩为圆": "pò jǔ wéi yuán",
    "破镜重合": "pò jìng zhòng hé",
    "破家为国": "pò jiā wéi guó",
    "破觚为圜": "pò gū wéi yuán",
    "破愁为笑": "pò chóu wéi xiào",
    "瓶坠簪折": "píng zhùi zān zhé",
    "萍飘蓬转": "píng piāo péng zhuàn",
    "帡天极地": "jú tiān jí dì",
    "屏声息气": "bǐng shēng xī qì",
    "屏气吞声": "píng qì tūn shēng",
    "凭几据杖": "píng jī jù zhàng",
    "娉婷婀娜": "pīng tíng ē nà",
    "品竹调弦": "pǐn zhú diào xián",
    "贫嘴薄舌": "pín zuǐ bó shé",
    "骈肩累足": "pián jiān lěi zú",
    "骈肩累迹": "pián jiān lěi jì",
    "翩翩年少": "piān piān nián shǎo",
    "片语只辞": "piàn yán zhǐ cí",
    "片鳞半爪": "piàn lín bàn zhǎo",
    "片甲不还": "piàn jiǎ bù huán",
    "披发缨冠": "pī fā yīng guàn",
    "披发文身": "pī fà wén shēn",
    "批砉导窾": "pī huā dǎo táo",
    "批隙导窾": "pī xì dǎo yín",
    "批吭捣虚": "pī háng dǎo xū",
    "批风抹月": "pī fēng mò yuè",
    "烹龙炮凤": "pēng lóng páo fèng",
    "炰鳖脍鲤": "fèng biē kuài lǐ",
    "炮凤烹龙": "páo fèng pēng lóng",
    "旁指曲谕": "páng zhǐ qǔ yù",
    "旁引曲证": "páng yǐn qǔ zhèng",
    "旁通曲畅": "páng tōng qǔ chàng",
    "庞眉皓发": "páng méi hào fà",
    "攀花折柳": "pān huā shé liǔ",
    "攀蟾折桂": "pān chán shé guì",
    "女大难留": "nǚ dà nán liú",
    "女长须嫁": "nǚ zhǎng xū jià",
    "女长当嫁": "nǚ zhǎng dāng jià",
    "弄竹弹丝": "nòng zhú dàn sī",
    "弄玉吹箫": "nòng yù chuí xiāo",
    "弄管调弦": "nòng guǎn diào xián",
    "弄粉调朱": "nòng fěn diào zhū",
    "弄兵潢池": "nòng bīng huáng shi",
    "浓装艳抹": "nóng zhuāng yàn mò",
    "浓抹淡妆": "nóng mò dàn zhuāng",
    "扭转干坤": "niǔ zhuǎn gàn kūn",
    "扭直作曲": "niǔ zhí zuò qū",
    "牛骥同皁": "niú jì tóng wěn",
    "宁缺勿滥": "nìng quē wù làn",
    "孽障种子": "niè zhàng zhǒng zǐ",
    "啮血为盟": "niè xuè wéi méng",
    "捻土为香": "niǎn tǔ wéi xiāng",
    "年谊世好": "nián yì shì hào",
    "年华垂暮": "nián huá thuí mù",
    "儗不于伦": "lǐ bù yú lún",
    "泥名失实": "nì míng shī shí",
    "泥而不滓": "niè ér bù zǐ",
    "能者为师": "néng zhě wéi shī",
    "能不称官": "néng bù chèn guān",
    "挠直为曲": "náo zhí wéi qū",
    "囊萤照读": "náng yíng zhào shū",
    "难进易退": "nan jin yi tui",
    "难乎为继": "nán hū wéi jì",
    "难乎为情": "nán hū wéi qíng",
    "难更仆数": "nán gēng pú shǔ",
    "难得糊涂": "nán dé hú tú",
    "南蛮鴂舌": "nán mán xiāng shé",
    "南贩北贾": "nán fàn běi gǔ",
    "内修外攘": "nèi xiū wai rǎng",
    "内柔外刚": "nèi róu wai gāng",
    "内峻外和": "nèi jùn wai hé",
    "拿腔作调": "ná qiāng zuò diào",
    "拿粗夹细": "ná cū jiā xì",
    "慕古薄今": "mù gǔ bó jīn",
    "牧猪奴戏": "mù zhòu nú xì",
    "沐猴衣冠": "mù hóu yī guàn",
    "目眢心忳": "mù yuān xīn wǎng",
    "目挑心招": "mù tiǎo xīn zhāo",
    "目空余子": "mù kōng yú zǐ",
    "目量意营": "mù liàng yì yíng",
    "目瞪舌彊": "mù dèng shé jiàng",
    "木头木脑": "mù tóu mù nǎo",
    "木干鸟栖": "mù gàn niǎo qī",
    "侔色揣称": "móu sè chuǎi chèn",
    "莫知所为": "mò zhī suǒ wéi",
    "莫予毒也": "mò yù dú yě",
    "莫为已甚": "mò wéi yǐ shèn",
    "抹月秕风": "mǒ yuè pī fēng",
    "抹粉施脂": "mò fěn shī zhī",
    "磨砻镌切": "mó lóng juān qiē",
    "磨棱刓角": "mó léng liǎng jiǎo",
    "摸头不着": "mō tóu bù zháo",
    "摸门不着": "mō mén bù zháo",
    "摸不着边": "mō bù zhuó biān",
    "缪种流传": "miù zhǒng liú chuán",
    "命中注定": "mìng zhōng zhù dìng",
    "鸣鹤之应": "míng hè zhī yīng",
    "鸣凤朝阳": "míng fèng zhāo yáng",
    "明效大验": "míng xiào dà yà",
    "名我固当": "ming wo gu dang",
    "灭景追风": "miè yǐng zhuī fēng",
    "邈处欿视": "miǎo chǔ jī shì",
    "面折庭争": "miàn shé tíng zhēng",
    "俛拾地芥": "bì shí dì jiè",
    "俛首帖耳": "mǎ shǒu tiē ěr",
    "黾穴鸲巢": "měng xué qú cháo",
    "绵力薄材": "mián lì bó cái",
    "绵里薄材": "mián lǐ bó cái",
    "靡有孑遗": "mǐ yǒu jié yí",
    "靡衣媮食": "mǐ yī tōu shí",
    "靡衣偷食": "mǐ yī tōu shí",
    "靡然从风": "mǐ rán cóng fēng",
    "靡靡之乐": "mǐ mǐ zhī yuè",
    "迷恋骸骨": "mí liàn hài gǔ",
    "蒙头转向": "mēng tóu zhuàn xiàng",
    "闷海愁山": "mèn hǎi chóu shān",
    "扪参历井": "mén shēn lì jǐng",
    "门单户薄": "mén dān hù bó",
    "昧旦晨兴": "mèi dàn chún xīng",
    "没衷一是": "mò zhōng yī shì",
    "没金饮羽": "mò jīn yǐn yǔ",
    "冒名接脚": "mào míng jiě jiǎo",
    "毛头小子": "máo tóu xiǎo zi",
    "毛遂堕井": "máo suí duò jǐng",
    "毛发耸然": "máo fā sǒng rán",
    "毛发倒竖": "máo fā dǎo shù",
    "毛发不爽": "máo fā bù shuǎng",
    "猫鼠同处": "māo shǔ tóng chǔ",
    "尨眉皓发": "máng méi hào fà",
    "漫天遍地": "màn shān biàn dì",
    "脉脉相通": "mài mài xiāng tōng",
    "卖文为生": "mài wén wéi shēn",
    "卖李钻核": "mài lǐ zuān hé",
    "买椟还珠": "mǎi dú huán zhū",
    "埋天怨地": "mán tiān yuàn dì",
    "埋三怨四": "mán sān yuàn sì",
    "马上房子": "mǎ shàng fáng zi",
    "马入华山": "mǎ rù huá shān",
    "落魄江湖": "luò pò jīng hú",
    "落魄不偶": "luo tuo bu ou",
    "落魄不羁": "luò pò bù jī",
    "落落难合": "luò luò nán hé",
    "落草为寇": "luò cǎo wéi kòu",
    "裸裎袒裼": "luǒ chéng tǎn xī",
    "罗织构陷": "luò zhī gòu xiàn",
    "捋袖揎拳": "luō xiù xuān quán",
    "论黄数黑": "lùn huáng shǔ hēi",
    "乱作胡为": "luàn zuò hú wéi",
    "乱箭攒心": "luàn jiàn cuán xīn",
    "鸾凤和鸣": "luán fèng hè míng",
    "绿叶成荫": "lǜ yè chéng yīn",
    "绿女红男": "lǜ nǚ hóng nán",
    "率由旧章": "shuài yóu jiù zhāng",
    "率由旧则": "shuài yóu jiù zé",
    "率以为常": "shuài yǐ wéi cháng",
    "率土宅心": "shuài tǔ zhái xīn",
    "率土同庆": "shuài tǔ tóng qìng",
    "率兽食人": "shuài shòu shí rén",
    "率土归心": "shuài tǔ guī xīn",
    "率马以骥": "shuài mǎ yǐ jì",
    "率尔成章": "shuài ěr chéng zhāng",
    "履薄临深": "lǚ bó lín shēn",
    "鲁斤燕削": "lǔ jīn yàn xuē",
    "露面抛头": "lù miàn pāo tóu",
    "漏尽更阑": "lòu jìn gēng lán",
    "笼鸟槛猿": "lóng niǎo jiàn yuán",
    "笼鸟池鱼": "lóng niǎo shi yú",
    "龙游曲沼": "long you qu zhao",
    "龙血玄黄": "lóng xuě xuán huáng",
    "龙雕凤咀": "lóng diāo fèng jǔ",
    "龙雏凤种": "lóng chú fèng zhǒng",
    "六神不安": "liù shén bǔ ān",
    "六尺之讬": "liù chǐ zhī quàn",
    "柳巷花街": "liǔ xiòng huā jiē",
    "柳街花巷": "liǔ jiē huā xiòng",
    "柳骨颜筋": "jiǔ gǔ yán jīn",
    "流离颠疐": "liú lí diān shǔ",
    "令原之戚": "líng yuán zhī qī",
    "令人捧腹": "lìng rén pěng fǔ",
    "陵劲淬砺": "líng jìng cuì lì",
    "临难不惧": "lín nàn bù jǔ",
    "临敌易将": "lín dí yì jiàng",
    "裂裳衣疮": "liè sháng yī chuāng",
    "裂裳裹足": "liè cháng guǒ zú",
    "裂冠毁冕": "liè guàn huǐ miǎn",
    "埒才角妙": "liè cái jué miào",
    "了无惧色": "liǎo wū jǔ sè",
    "了身达命": "liǎo shēn dá mìng",
    "了然无闻": "le rán wú wén",
    "了不可见": "liǎo bù kě jiàn",
    "了不长进": "liǎo bù zhǎng jǐn",
    "燎如观火": "liǎo rú guān huǒ",
    "燎发摧枯": "liǎo fà cuī kū",
    "量小力微": "liàng xiǎo lì wēi",
    "量时度力": "liàng shí dù lì",
    "量枘制凿": "liàng ruì zhì záo",
    "量入计出": "liàng rù jì chū",
    "量如江海": "liàng rú jiāng hǎi",
    "量力度德": "liàng lì duó dé",
    "量金买赋": "liàng jīn mǎi fù",
    "量己审分": "liàng jǐ shěn fēn",
    "量材录用": "liàng cái lù yòng",
    "量才器使": "liàng cái qì shǐ",
    "量才而为": "liàng cái ér wéi",
    "梁孟相敬": "liáng mèng xiāng jìn",
    "恋恋难舍": "liàn liàn nán shě",
    "敛声屏息": "liǎn shēng píng xī",
    "敛骨吹魂": "liǎn gǔ chuí hún",
    "联篇累牍": "lián piān lěi dú",
    "连编累牍": "lián biān lěi dú",
    "詈夷为跖": "lì yí wéi zhí",
    "利令志惛": "lì lìng zhì zào",
    "历精为治": "lì jīng wéi zhì",
    "历精更始": "lì jīng gèng shǐ",
    "哩哩罗罗": "li li luō luō",
    "李广不侯": "lǐ guǎng bù hòu",
    "礼为情貌": "lǐ wéi qíng mào",
    "礼让为国": "lǐ ràng wéi guó",
    "礼坏乐崩": "lǐ huài yuè bēng",
    "犁庭扫闾": "lí tíng sǎo lǚ",
    "犁生骍角": "lí shēng yuè jiǎo",
    "犁牛骍角": "lí niú mài jiǎo",
    "离山调虎": "lí shān diào hǔ",
    "离本趣末": "lí běn qū mò",
    "离本徼末": "lí běn yāo mò",
    "楞眉横眼": "lèng méi héng yǎn",
    "擂天倒地": "léi tiān dǎo dì",
    "累足成步": "lěi zú chéng bù",
    "累月经年": "lěi yuè jīng nián",
    "累屋重架": "lěi wū chóng jià",
    "累瓦结绳": "lěi wǎ jié shéng",
    "累土至山": "lěi tǔ zhì shān",
    "累土聚沙": "lěi tǔ jù shā",
    "累苏积块": "lěi sū jī kuài",
    "累卵之危": "lěi luǎn zhī wēi",
    "累累如珠": "lěi lěi rú zhū",
    "累块积苏": "lěi kuài jī sū",
    "累教不改": "lěi jiào bù gǎi",
    "累牍连篇": "lěi dú lián piān",
    "乐山乐水": "yào shān yào shuǐ",
    "潦原浸天": "lǎo yuán jìn tiān",
    "老师宿儒": "lǎo shī xiǔ rú",
    "牢什古子": "láo shí gǔ zi",
    "琅嬛福地": "láng huán fú dì",
    "狼号鬼哭": "láng háo guǐ kū",
    "狼飡虎咽": "láng cān hǔ yān",
    "阑风长雨": "lán fēng zhàng yǔ",
    "拉枯折朽": "lā kū shé xiǔ",
    "揆情度理": "kuí qíng duó lǐ",
    "揆理度情": "kuí lǐ duó qíng",
    "窥间伺隙": "kuī jiàn sì xì",
    "旷日累时": "kuàng rì lěi shí",
    "匡救弥缝": "kuāng jiù mí fèng",
    "枯树生华": "kū shù shēng huā",
    "口轻舌薄": "kǒu qīng shé bó",
    "口角生风": "kǒu jiǎo shēng fēng",
    "口角春风": "kǒu jiǎo chūn fēng",
    "口角风情": "kǒu jiǎo fēng qíng",
    "口干舌焦": "kǒu gàn shé jiāo",
    "口腹之累": "kǒu fù zhī lěi",
    "口出大言": "kǒu chū dā yán",
    "空腹便便": "kōng fù pián pián",
    "嗑牙料嘴": "kē yá liào zuǐ",
    "刻木为吏": "kè mù wéi lì",
    "刻木为鹄": "kè mù wéi hú",
    "咳珠唾玉": "ké zhū tuò yù",
    "咳唾成珠": "ké tuò chéng zhū",
    "抗颜为师": "kàng yán wéi shī",
    "糠豆不赡": "kang dou bu shan",
    "开华结果": "kāi huā jié guǒ",
    "峻阪盐车": "jùn bǎn yún chē",
    "攫为己有": "jué wéi jǐ yǒu",
    "嚼铁咀金": "jiáo tiě jǔ jīn",
    "嚼墨喷纸": "jué mò pēn zhǐ",
    "倔头强脑": "juè tóu jiàng nǎo",
    "倔头倔脑": "juè tou juè nǎo",
    "倦鸟知还": "juàn niǎo zhī huán",
    "卷席而葬": "juǎn xí ér zàng",
    "卷旗息鼓": "juǎn qí xī gǔ",
    "卷甲倍道": "juǎn jiǎ bèi dào",
    "聚米为山": "jù mǐ wéi shān",
    "聚米为谷": "jù mǐ wéi gǔ",
    "锯牙钩爪": "jù yá gōu zhǎo",
    "举手相庆": "jǔ shǒu xiāng qìng",
    "举世混浊": "jǔ shì hún zhuó",
    "鞫为茂草": "jū wéi mào cǎo",
    "鞠为茂草": "jū wéi mào cǎo",
    "拘神遣将": "jū shén qiǎn jiàng",
    "居轴处中": "jū zhóu chǔ zhōng",
    "居下讪上": "jú xià shàn shàng",
    "居不重茵": "jū bù chóng yīn",
    "居不重席": "jū bù chóng xí",
    "旧事重提": "jiù shì zhòng tí",
    "旧调重弹": "jiù diào chóng tán",
    "灸艾分痛": "jiù ài fēn tòng",
    "久要不忘": "jiǔ yāo bù wàng",
    "九转功成": "jiǔ zhuàn gōng chéng",
    "九蒸三熯": "jiǔ zhēng sān shēng",
    "敬业乐群": "jìng yè yào qún",
    "井底虾蟆": "jǐng dǐ xiā má",
    "旌旗卷舒": "jīng qí juǎn shū",
    "惊魂落魄": "jīng hún luò pò",
    "荆棘载途": "jīng jí zài tú",
    "荆棘塞途": "jīng jí sè tú",
    "经纶济世": "jing lun ji shi",
    "禁舍开塞": "jìn shě kāi sāi",
    "祲威盛容": "lóng wēi shèng róng",
    "进种善群": "jìn zhǒng shàn qún",
    "进退中度": "jìn tuì zhòng dù",
    "进退消长": "jìn tuì xiāo cháng",
    "进退应矩": "jìn tuì yīng jǔ",
    "进退触籓": "jìn tuì chù zǔ",
    "进退出处": "jìn tuì chū chǔ",
    "进退跋疐": "jìn tuì bá zǔ",
    "进寸退尺": "jǐn cùn tuì chǐ",
    "尽多尽少": "jǐn duō jǐn shǎo",
    "锦囊还矢": "jǐn náng huán shǐ",
    "矜名嫉能": "jīn míng jì néng",
    "矜己自饰": "jīn jǐ zhì shì",
    "矜功负气": "jīn gōng fǔ qì",
    "津关险塞": "jīn guān xiǎn sài",
    "金吾不禁": "jīn wú bù jìn",
    "金匮石室": "jīn guì shí shì",
    "金翅擘海": "jīn chì bāi hǎi",
    "戒奢宁俭": "jiè shē nìng jiān",
    "解衣衣人": "jiè yī yī rén",
    "解人难得": "jiě rén nán dé",
    "解铃系铃": "jiě líng jì líng",
    "解发佯狂": "jiě fà yáng kuáng",
    "截铁斩钉": "jié tiě zhǎn dìng",
    "诘屈謷牙": "jié qū dà yá",
    "诘屈磝碻": "jié qū bìng zhòu",
    "诘曲聱牙": "jié qǔ áo yá",
    "教一识百": "jiāo yī shí bǎi",
    "教猱升木": "jiāo náo shēng mù",
    "较瘦量肥": "jiào shòu liàng féi",
    "矫矫不群": "jiǎo jiǎo bù qùn",
    "矫国更俗": "jiǎo guó gēng sú",
    "皎阳似火": "jiǎo yáng shì huǒ",
    "挢抂过正": "jiǎo kuāng guò zhèng",
    "角立杰出": "jiao li jie chu",
    "焦沙烂石": "jiāo shā shí làn",
    "焦唇干舌": "jiāo chún gàn shé",
    "骄泰淫泆": "jiāo tai yín zhuàng",
    "骄奢淫泆": "jiāo shē yín yí",
    "骄儿騃女": "jiāo ér bā nǚ",
    "浇风薄俗": "jiāo fēng bó sú",
    "降妖捉怪": "xiáng yāo zhuō guài",
    "将遇良材": "jiàng yù liáng cái",
    "将取固予": "jiāng qǔ gū yǔ",
    "将门有将": "jiàng mén yǒu jiàng",
    "将功折过": "jiāng gōng shé guò",
    "将夺固与": "jiāng duó gū yǔ",
    "将伯之助": "qiāng bó zhī zhù",
    "将伯之呼": "qiāng bó zhī hū",
    "槛花笼鹤": "jiàn huā lóng hè",
    "鉴影度形": "jiàn yǐng duó xíng",
    "渐不可长": "jiàn bù kě zhǎng",
    "剑首一吷": "jiàn shǒu yī guī",
    "见义敢为": "jiàn yì gǎn wéi",
    "见义当为": "jiàn yì dāng wéi",
    "见义必为": "jiàn yì bì wéi",
    "见素抱朴": "xiàn sù bào pǔ",
    "见弃于人": "jiàn qì yǔ rén",
    "见几而作": "jiàn jī ér zuò",
    "见弹求鸮": "jiàn dàn qiú háo",
    "简丝数米": "jiǎn sī shǔ mǐ",
    "俭不中礼": "jiǎn bù zhòng lǐ",
    "间见层出": "jiàn xiàn céng chū",
    "间不容息": "jiàn bù róng xī",
    "间不容瞚": "jiān bù róng xǐ",
    "尖嘴薄舌": "jiān zuǐ bó shé",
    "假洋鬼子": "jiǎ yáng guǐ zi",
    "甲冠天下": "jiǎ guàn tiān xià",
    "葭莩之亲": "jiā fú zhī qīn",
    "家无担石": "jiā wú dàn shí",
    "家累千金": "jiā lèi qiān jīn",
    "家给人足": "jiā jǐ rén zú",
    "家给民足": "jiā jǐ mín zú",
    "家道从容": "jiā dào cōng róng",
    "家长礼短": "jiā cháng lǐ duǎn",
    "夹枪带棍": "jiā qiāng dài gùn",
    "夹袋人物": "jiā dài rén wù",
    "霁风朗月": "jī fēng lǎng yuè",
    "寄兴寓情": "jì xìng yù qíng",
    "纪纲人论": "jì gāng rén lún",
    "计深虑远": "jì shēng lǜ yuǎn",
    "计功量罪": "jì gōng liàng zuì",
    "掎裳连襼": "jǐ shang lián zhēng",
    "虮虱相吊": "jǐ shī xiēng diào",
    "几不欲生": "jī bù yù shēng",
    "集腋为裘": "jí yè wéi qiú",
    "疾不可为": "jí bù kě wéi",
    "急脉缓灸": "jí mài huǎn jiù",
    "急景凋年": "jí yǐng diāo nián",
    "急公好施": "jí gōng hào shī",
    "极深研几": "jí shēn yán jī",
    "及宾有鱼": "jí bīn yoǔ yú",
    "激薄停浇": "jī bó tíng jiāo",
    "稽古揆今": "jī gǔ zhèn jīn",
    "赍志而没": "jī zhì ér mò",
    "积铢累寸": "jī zhū lěi cùn",
    "积岁累月": "jī suì lěi yuè",
    "积素累旧": "jī sù lěi jiù",
    "积时累日": "jī shí lěi rì",
    "积日累岁": "jī rì lěi suì",
    "积日累月": "jī rì lěi yuè",
    "积日累久": "jī rì lěi jiǔ",
    "积年累岁": "jī nián lěi suì",
    "积露为波": "jī lù wéi bō",
    "积德累仁": "jī dé lěi rén",
    "积德累善": "jī dé lěi shàn",
    "积德累功": "jī dé lěi gōng",
    "积谗糜骨": "jī chán méi gǔ",
    "鸡皮鹤发": "jī pí hè fà",
    "饥寒交切": "jī hán jiāo qiē",
    "饥冻交切": "jī dòng jiāo qiē",
    "击排冒没": "jī pái mào mò",
    "祸为福先": "huò wéi fú xiān",
    "祸福相依": "huò fú xiāng yī",
    "祸福相生": "huò fú xiāng shēng",
    "获隽公车": "huò jūn gōng chē",
    "货而不售": "huo er bu shou",
    "火耕流种": "huǒ gēng liú zhǒng",
    "混应滥应": "hùn yīng làn yīng",
    "魂飞魄丧": "hún fēi pò sāng",
    "魂不着体": "hún bù zhuó tǐ",
    "魂不著体": "hún bù zhuó tǐ",
    "浑抡吞枣": "hún lún tūn zǎo",
    "昏迷不省": "hūn mí bù xǐng",
    "昏镜重磨": "hūn jìng chóng mó",
    "昏镜重明": "hūn jìng chóng míng",
    "昏定晨省": "hūn dìng chén xǐng",
    "毁舟为杕": "huǐ zhōu wéi duò",
    "毁钟为铎": "huǐ zhōng wéi duó",
    "毁冠裂裳": "huǐ guān liè cháng",
    "晦盲否塞": "huì máng pǐ sè",
    "诲人不惓": "huì rén bù tiě",
    "悔过自责": "huǐ guò zì zè",
    "回船转舵": "huí chuán zhǎn duò",
    "潢池盗弄": "huáng shi dào nòng",
    "黄冠野服": "huáng guàn yě fú",
    "黄冠草履": "huáng guàn cǎo lǚ",
    "黄冠草服": "huáng guàn cǎo fú",
    "黄发儿齿": "huáng fà ér chǐ",
    "黄发垂髫": "huáng fà chuí tiáo",
    "还珠合浦": "huán zhū hé pǔ",
    "还珠返璧": "huán zhū fǎn bì",
    "还元返本": "huán yuán fǎn běn",
    "还朴反古": "huán pǔ fǎn gǔ",
    "还年驻色": "huán nián zhù sè",
    "还年却老": "huán nián què lǎo",
    "还年卻老": "huán nián què lǎo",
    "还醇返朴": "huán chún fǎn pǔ",
    "还淳返朴": "huán chún fǎn pǔ",
    "还淳反素": "huán chún fǎn sù",
    "还淳反朴": "huán chún fǎn pǔ",
    "还淳反古": "huán chún fǎn gǔ",
    "坏裳为裤": "huài shang wéi kù",
    "槐南一梦": "huái nán yī mēng",
    "画蛇著足": "huà shé zhuó zú",
    "画地为狱": "huà dì wéi yù",
    "画荻和丸": "huà dí huò wán",
    "化枭为鸠": "huà xiāo wéi jiū",
    "化零为整": "huà líng wéi zhěng",
    "化腐为奇": "huà fǔ wéi qí",
    "化鸱为凤": "huà chī wéi fèng",
    "华亭鹤唳": "huà tíng hè lì",
    "花攒锦聚": "huā cuán jǐn jù",
    "花攒锦簇": "huā cuán jǐn cù",
    "花簇锦攒": "huā cù jǐn cuán",
    "花不棱登": "huā bù lēng dēng",
    "户限为穿": "hù xiàn wéi chuān",
    "胡作乱为": "hú zuò luàn wéi",
    "胡作胡为": "hú zuò hú wéi",
    "胡思乱量": "hú sī luàn liàng",
    "呼天吁地": "hū tiān yù dì",
    "呼卢喝雉": "hū lú hè zhì",
    "呼来喝去": "hū lái hè qù",
    "呼不给吸": "hū bù jǐ xī",
    "厚味腊毒": "hòu wèi xī dú",
    "厚今薄古": "hòu jīn bó gǔ",
    "厚德载物": "hòu dé zài wù",
    "鸿泥雪爪": "hóng ní xuě zhǎo",
    "鸿渐于干": "hóng jiàn yú gàn",
    "鸿飞雪爪": "hóng fēi xuě zhǎo",
    "洪炉燎发": "hóng lú liáo fà",
    "红绳系足": "hóng shéng jì zú",
    "红不棱登": "hóng bù lēng dēng",
    "衡石量书": "héng shí liàng shū",
    "横征苛役": "hèng zhēng kē yì",
    "横征苛敛": "hèng zhēng kē liǎn",
    "横征暴赋": "hèng zhēng bào fù",
    "横灾飞祸": "hèng zāi fēi huò",
    "横殃飞祸": "hèng yāng fēi huò",
    "横无忌惮": "hèng wú jì dàn",
    "横拖倒拽": "héng tuō dào zhuāi",
    "横抢硬夺": "hèng qiǎng yìng duó",
    "横抢武夺": "hèng qiǎng wǔ duó",
    "横科暴敛": "hèng kē bào liǎn",
    "横恩滥赏": "hèng ēn làn shǎng",
    "恨海难填": "hèn hǎi nán tián",
    "黑更半夜": "hēi gēng bàn yè",
    "鹤发松姿": "hè fà sōng zī",
    "鹤发鸡皮": "hè fà jī pí",
    "鹤处鸡群": "hè chǔ jī qún",
    "涸思干虑": "hé sī qián lǜ",
    "河涸海干": "hé hé hǎi qián",
    "和颜说色": "hé yán yuè sè",
    "何所不为": "hé suǒ bù wéi",
    "合浦还珠": "hé pǔ huán zhū",
    "合两为一": "hé liǎng wéi yī",
    "合从连衡": "hé zòng lián héng",
    "浩浩汤汤": "hào hào shāng shāng",
    "号咷大哭": "háo táo dà kū",
    "号寒啼饥": "háo hán tí jī",
    "好勇斗狠": "hào yǒng dòu hěn",
    "好佚恶劳": "hǎo yì wù láo",
    "好问则裕": "hào wèn zé yù",
    "好为事端": "hào wéi shì duān",
    "好问决疑": "hào wèn jué yí",
    "好生之德": "hào shēng zhī dé",
    "好善乐施": "hào shàn lè shī",
    "好善恶恶": "hǎo shàn wù è",
    "好骑者堕": "hào qí zhě duò",
    "好奇尚异": "hǎo qí shàng yì",
    "好谋善断": "hào móu shàn duàn",
    "好恶不同": "hǎo è bù tóng",
    "好丹非素": "hào dān fēi sù",
    "豪干暴取": "háo gàn bào qǔ",
    "毫发不爽": "háo fà bù shuǎng",
    "寒酸落魄": "hán suān luò pò",
    "邯郸重步": "hán dān zhóng bù",
    "含英咀华": "hán yīng jǔ huá",
    "含商咀征": "hán shāng jǔ zhēng",
    "含菁咀华": "hán jīng jǔ huá",
    "含糊不明": "hán hú bù míng",
    "含垢藏疾": "hán gǒu cáng jí",
    "含宫咀征": "hán gōng jǔ zhēng",
    "过隙白驹": "guò xī bái jū",
    "过为已甚": "guò wéi yǐ shèn",
    "桂折一枝": "guì shé yī zhī",
    "桂折兰摧": "guì shé lán cuī",
    "规重矩叠": "guī chóng jǔ dié",
    "规旋矩折": "guī xuán jǔ shé",
    "广文先生": "guǎng wén xiān sheng",
    "广譬曲谕": "guǎng pì qǔ yù",
    "广陵散绝": "guǎng líng sǎn jué",
    "冠山戴粒": "guàn shān dài lì",
    "冠绝一时": "guàn jué yī shí",
    "冠屦倒施": "guàn jù dǎo shī",
    "官官相为": "guān guān xiāng wéi",
    "关情脉脉": "guān qíng mài mài",
    "挂席为门": "guà xí wéi mén",
    "寡见鲜闻": "guǎ jiàn xiǎn wén",
    "瓜葛相连": "guā gě xiāng lián",
    "顾曲周郎": "gù qǔ zhōu láng",
    "顾景惭形": "gù yǐng cán xíng",
    "故态复还": "gù tài fù huán",
    "鼓吻奋爪": "gǔ wěn fèn zhǎo",
    "鼓唇咋舌": "gǔ chún zǎ shé",
    "古调单弹": "gǔ diào dān tán",
    "古调不弹": "gǔ diào bù tán",
    "沽名干誉": "gū míng gàn yù",
    "孤独矜寡": "gū dú guān guǎ",
    "姑射神人": "gū yè shén rén",
    "苟合取容": "gǒu hé qǔ ān",
    "狗续侯冠": "gǒu xù hòu guàn",
    "钩爪锯牙": "gōu zhǎo jù yá",
    "共枝别干": "gòng zhī bié gàn",
    "共为唇齿": "gòng wéi chún chǐ",
    "拱手而降": "gǒng shòu ér xiáng",
    "拱肩缩背": "gǒng jān suō bèi",
    "功薄蝉翼": "gōng bó chán yì",
    "弓调马服": "gōng diào mǎ fú",
    "更姓改物": "gēng xìng gǎi wù",
    "更弦易辙": "gēng xián yì zhé",
    "更弦改辙": "gēng xián gǎi zhé",
    "更仆难终": "gēng pú nán zhōng",
    "更仆难数": "gēng pú nán shǔ",
    "更难仆数": "gēng nán pú shù",
    "更令明号": "gēng lìng míng hào",
    "更阑人静": "gēng lán rén jǐng",
    "更待干罢": "gèng dài gàn bà",
    "更唱叠和": "gēng chàng dié hé",
    "更唱迭和": "gēng chàng dié hé",
    "更长梦短": "gēng cháng mèng duǎn",
    "亘古奇闻": "gèn gǔ qī wén",
    "根生土长": "gēn shēn tǔ zhǎng",
    "各色名样": "gè sè gè yàng",
    "格格不纳": "gē gē bù nà",
    "格格不吐": "gē gē bù tǔ",
    "歌莺舞燕": "gē yíng wǔ yàn",
    "告朔饩羊": "gù shuò xì yáng",
    "告老还家": "gào lǎo huán jiā",
    "膏唇岐舌": "gào chún qí shé",
    "膏唇贩舌": "gào chún fàn shé",
    "膏车秣马": "gào chē mò mǎ",
    "高义薄云": "gāo yì bó yún",
    "高风劲节": "gāo fēng jìng jié",
    "岗头泽底": "gāng tóu zé dǐ",
    "敢为敢做": "gǎn wéi gǎn zuò",
    "竿头日上": "gān tóu rí shàng",
    "甘分随时": "gān fèn suí shí",
    "甘处下流": "gān chǔ xià liú",
    "干霄蔽日": "gàn xiāo bì rì",
    "干啼湿哭": "gàn tí shī kū",
    "干名犯义": "gàn míng fàn yì",
    "干将莫邪": "gān jiàng mò yé",
    "干端坤倪": "gàn duān kūn ní",
    "干城之将": "gān chéng zhī jiàng",
    "改张易调": "gǎi zhāng yì diào",
    "改弦易调": "gǎi xián yì diào",
    "改曲易调": "gǎi qǔ yì diào",
    "改恶为善": "gǎi è wéi shàn",
    "腹载五车": "fù zài wǔ chē",
    "富国彊兵": "fù guó jiāng bīng",
    "父债子还": "fù zhài zǐ huán",
    "父为子隐": "fù wéi zǐ yǐn",
    "辅世长民": "fǔ shì zhǎng mín",
    "拊背搤吭": "fǔ bèi hè kēng",
    "福为祸先": "fú wéi huò xiān",
    "福为祸始": "fú wéi huò shǐ",
    "符号逻辑": "fú hào luó ji",
    "浮收勒折": "fú shōu lè shé",
    "伏虎降龙": "fú hǔ xiáng lóng",
    "肤受之愬": "fū shòu zhī xiāng",
    "肤皮潦草": "fū pǐ liǎo cǎo",
    "肤见謭识": "fū jiàn guǎng shí",
    "否终则泰": "pǐ zhōng zé tài",
    "否终复泰": "pǐ zhōng fù tài",
    "否往泰来": "pǐ wǎng tài lái",
    "否去泰来": "pǐ qù tài lái",
    "否极阳回": "pǐ jí yáng huí",
    "否极泰回": "pǐ jí tài huí",
    "佛头著粪": "fó tóu zhuó fèn",
    "奉为楷模": "fèng wéi kǎi mó",
    "凤鸣朝阳": "fèng míng zhāo yáng",
    "凤靡鸾吪": "fèng mǐ luán é",
    "逢场作乐": "féng chǎng zuò lè",
    "蜂攒蚁聚": "fēng cuán yǐ jù",
    "蜂攒蚁集": "fēng cuán yǐ jí",
    "蜂腰削背": "fēng yāo xuē bèi",
    "蜂扇蚁聚": "fēng shān yǐ jù",
    "封豨修蛇": "fēng xī yǒu shé",
    "风影敷衍": "fēng yǐng fū yān",
    "风驰云卷": "fēng chí yún juǎn",
    "风驰电卷": "fēng chí diàn juǎn",
    "风驰草靡": "fēng chí cǎo mǐ",
    "丰屋蔀家": "fēng wū zhī jiā",
    "粪土不如": "fèn tú bù rú",
    "分风劈流": "fēn fēng pǐ liú",
    "沸沸汤汤": "fèi fèi shāng shāng",
    "匪伊朝夕": "fěi yí zhāo xī",
    "菲食薄衣": "fěi shí bó yī",
    "飞沙走砾": "fēi shē zǒu lì",
    "飞将数奇": "fē jiàng shù jī",
    "飞鸿雪爪": "fēi hóng xuě zhǎo",
    "放辟邪侈": "fàng pì xié chǐ",
    "方领圆冠": "fāng lǐng yuán guàn",
    "方寸万重": "fāng cùn wàn chóng",
    "贩夫皁隶": "fàn fū yě lì",
    "泛应曲当": "fàn yīng qǔ dāng",
    "犯而不校": "fàn ér bù jiào",
    "返朴还真": "fǎn pǔ huán zhēn",
    "返本还源": "fǎn běn huán yuán",
    "返本还元": "fǎn běn huán yuán",
    "反老还童": "fǎn lǎo huán tóng",
    "反劳为逸": "fǎn láo wéi yì",
    "翻黄倒皁": "fān huáng dǎo yí",
    "翻肠倒肚": "fān cháng dǎo dǔ",
    "法轮常转": "fǎ lún cháng zhuàn",
    "罚不当罪": "fá bù dāng zuì",
    "发植穿冠": "fà zhí chuān guān",
    "发踊冲冠": "fà yǒng chōng guān",
    "发引千钧": "fà yǐn qiān jūn",
    "发上指冠": "fā shàng zhǐ guàn",
    "发上冲冠": "fā shàng chōng guàn",
    "发怒穿冠": "fà nù chuān guān",
    "发怒冲冠": "fā nù chōng guàn",
    "发蒙解缚": "fā méng jiě fu",
    "发奸擿伏": "fā jiān tì fú",
    "发短心长": "fà duǎn xīn cháng",
    "二竖为虐": "èr shù wéi nüè",
    "耳目闭塞": "ěr mù bì sāi",
    "儿女心肠": "ér nǘ xīn cháng",
    "儿女亲家": "ér nǚ qìng jiā",
    "恩不放债": "ēn bù fàng zhai",
    "遏恶扬善": "è è yán shàn",
    "饿殍枕藉": "è piǎo zhěn jí",
    "饿殍载道": "è piǎo zài dào",
    "恶紫夺朱": "wù zǐ duó zhū",
    "恶醉强酒": "wù zuì qiǎng jiǔ",
    "恶意中伤": "è yì zhòng shāng",
    "恶湿居下": "wù shī jū xià",
    "恶居下流": "wù jū xià liú",
    "恶恶从短": "wù wù cóng duǎn",
    "恶不去善": "wù bù qù shàn",
    "扼吭拊背": "è gāng fǔ bèi",
    "扼吭夺食": "è gāng duó shí",
    "扼襟控咽": "è jīn kòng yān",
    "额手相庆": "é shǒu xiāng qìng",
    "峨峨汤汤": "é é shāng shāng",
    "屙金溺银": "ē jīn niào yín",
    "朵颐大嚼": "duǒ yī dà jiáo",
    "夺人所好": "duó rén suǒ hào",
    "多言数穷": "duō yán shuò qióng",
    "多文为富": "duō wén wéi fù",
    "多钱善贾": "duō qián shàn gǔ",
    "多端寡要": "duō duān guǎi yào",
    "多财善贾": "duō cái shàn gǔ",
    "遁逸无闷": "dùn yì wú mèn",
    "遁俗无闷": "dùn sú wú mèn",
    "遁世无闷": "dùn shì wú mèn",
    "遁迹黄冠": "dùn jì huáng guàn",
    "顿学累功": "dùn xué lěi gōng",
    "对薄公堂": "duì bù gōng táng",
    "堆案盈几": "duī àn yíng jī",
    "断还归宗": "duàn huán guī zōng",
    "断发文身": "duàn fà wén shēn",
    "断长续短": "duàn chāng xù duǎn",
    "断长补短": "duàn chāng bǔ duǎn",
    "短见薄识": "duǎn jiàn bó shí",
    "蠹居棋处": "dù jū qí chǔ",
    "蠹居棊处": "dù jū què chǔ",
    "度己以绳": "duó jǐ yǐ shéng",
    "杜默为诗": "dù mò wéi shī",
    "杜鹃啼血": "dù juān tí xuě",
    "笃志好学": "dǔ zhì hǎo xué",
    "笃近举远": "dǔ jìn jǔ juǎn",
    "独有千秋": "dú yòu qiān qiū",
    "读书得间": "dú shū dé jiàn",
    "斗转参横": "dǒu zhuǎn shēn héng",
    "兜肚连肠": "dōu dǔ lián cháng",
    "洞见症结": "dòng jiàn zhèng jié",
    "栋折榱坏": "dòng shé cuī huài",
    "恫疑虚猲": "dòng yí xū gé",
    "恫疑虚喝": "dòng yí xū hè",
    "动中窾要": "dòng zhōng zhe yào",
    "东抹西涂": "dōng mò xī tú",
    "东鸣西应": "dōng míng xī yīng",
    "东鳞西爪": "dōng lín xī zhǎo",
    "东量西折": "dōng liàng xī shé",
    "东家西舍": "dōng jiā xī shě",
    "东观西望": "dōng guāng xī wàng",
    "东方将白": "dong fang jiang bai",
    "东扯西拽": "dōng chě xī zhuāi",
    "丢魂丧胆": "diu1 hún sàng dǎn",
    "鼎折餗覆": "dǐng shé sù fù",
    "鼎折覆餗": "dǐng shé fù sù",
    "鼎鼐调和": "dǐng nai tiáo hé",
    "鼎铛有耳": "dǐng chēng yǒu ěr",
    "鼎铛玉石": "dǐng chēng yù shí",
    "钉头磷磷": "ding tou lin lin",
    "叠矩重规": "dié jǔ chóng guī",
    "迭矩重规": "dié jǔ chóng guī",
    "跌宕不羁": "dié dàng bù jī",
    "跌弹斑鸠": "diē dàn bān jiū",
    "调嘴调舌": "tiáo zuǐ diào shé",
    "调弦品竹": "diào xián pǐn zhú",
    "吊尔郎当": "diào er láng dāng",
    "雕心雁爪": "diāo xīn yàn zhǎo",
    "雕虫薄技": "diāo chóng báo jì",
    "刁钻促搯": "diāo zuàn cù chāo",
    "点指划脚": "diǎn zhǐ jí jiǎo",
    "点石为金": "diǎn shí wéi jīn",
    "点手划脚": "diǎn shǒu jí jiǎo",
    "颠乾倒坤": "diān qiān dǎo kūn",
    "颠来簸去": "diān lái bǒ qù",
    "颠倒衣裳": "diān dǎo yī cháng",
    "颠倒干坤": "diān dǎo gàn kūn",
    "掂斤抹两": "diān jīn mò liǎng",
    "低唱浅酌": "dì chàng qiǎn zhuó",
    "低唱浅斟": "dì chàng qiǎn zhēn",
    "登台拜将": "dēng tái bài jiàng",
    "灯尽油干": "dēng jìn yóu gàn",
    "灯蛾扑火": "dé é pū huǒ",
    "的一确二": "dí yī què èr",
    "德薄能鲜": "dé bó néng xiǎn",
    "得手应心": "dé shǒu yīng xīn",
    "得马折足": "dé mǎ shé zú",
    "得薄能鲜": "dé bó néng xiān",
    "道远日暮": "dào yuàn rì mù",
    "蹈其覆辙": "dǎo qì fù zhé",
    "捣虚撇抗": "dǎo xū piē kàng",
    "倒载干戈": "dào zài gān gē",
    "倒因为果": "dǎo yīn wéi guǒ",
    "倒裳索领": "dào cháng suǒ lǐng",
    "倒果为因": "dào guǒ wéi yīn",
    "叨在知己": "tāo zài zhī jǐ",
    "叨陪末座": "tāo péi mò zuò",
    "党豺为虐": "dǎng chái wéi nüè",
    "当轴处中": "dāng zhóu chǔ zhōng",
    "当着不着": "dāng zhuó bù zhuó",
    "当务始终": "dang wu shi zhong",
    "淡妆轻抹": "dàn zhuāng qīng mò",
    "淡汝浓抹": "dàn zhuāng nóng mǒ",
    "弹雨枪林": "dàn yǔ qiāng lín",
    "弹丸脱手": "tán wán tuō shǒu",
    "弹铗无鱼": "dàn jiá wú yú",
    "胆大心粗": "dǎn dā xīn cū",
    "箪食瓢饮": "dān sì piáo yǐn",
    "箪食壶酒": "dān sì hú jiǔ",
    "大喜若狂": "dā xǐ ruò kuáng",
    "大璞不完": "tài bú bù wán",
    "大明法度": "dà jíng fǎ dù",
    "大处着墨": "dà chù zhuó mò",
    "大车以载": "dà chē yǐ zài",
    "打闷葫芦": "dǎ mèn hú lu",
    "打家截舍": "dǎ jiā jié shě",
    "沓来踵至": "tǎ lái zhǒng zhì",
    "沓来麕至": "tà lái yǒu zhì",
    "厝火燎原": "cuò huǒ liǎo yuán",
    "撮土焚香": "cuō gǔ fén xiāng",
    "撮科打哄": "cuō kē dǎ hòng",
    "寸积铢累": "cùn jī zhū lěi",
    "啛啛喳喳": "cuì cuì chā chā",
    "榱栋崩折": "cuī dòng bēng shé",
    "榱崩栋折": "cuī bēng dòng shé",
    "摧折豪强": "cuī zhé háo qiáng",
    "摧刚为柔": "cuī gāng wéi róu",
    "从俗就简": "cóng sú jiù jiǎ",
    "此呼彼应": "cǐ hū bǐ yīng",
    "此发彼应": "cǐ fā bǐ yīng",
    "此动彼应": "cǐ dòng bǐ yīng",
    "此唱彼和": "cǐ chàng bǐ hè",
    "慈悲为本": "cí bēi wéi běn",
    "纯属骗局": "chún shú piàn jú",
    "春笋怒发": "chūn sǔn mù fā",
    "春风一度": "chūn fēng yī dù",
    "春风风人": "chūn fēng fèng rén",
    "垂头搨翼": "chuí tóu dá yì",
    "吹竹弹丝": "chuí zhú dàn sī",
    "传为笑谈": "chuán wéi xiào tán",
    "传为笑柄": "chuán wéi xiào bǐng",
    "传风扇火": "chuán fēng shān huǒ",
    "传风搧火": "chuán fēng yǒu huǒ",
    "穿红着绿": "chuān hóng zhuó lǜ",
    "川渟岳峙": "chuān tīng yuè zhì",
    "啜英咀华": "chuò yīng jǔ huá",
    "揣时度力": "chuǎi shí duó lì",
    "触处机来": "chù chǔ jī lái",
    "处尊居显": "chǔ zūn jū xiǎn",
    "处堂燕鹊": "chǔ táng yàn què",
    "处堂燕雀": "chǔ táng yàn què",
    "处实效功": "chǔ shí xiào gōng",
    "处高临深": "chǔ gāo lín shēn",
    "出入无间": "chū rù wú jiān",
    "出奇划策": "chū qí huá cè",
    "出门应辙": "chū mén yīng zhé",
    "出处语默": "chū chǔ yǔ mò",
    "出处殊途": "chū chǔ shū tú",
    "出处殊涂": "chū chǔ shū tú",
    "出处进退": "chū chǔ jìn tuì",
    "愁山闷海": "chóu shān mèn hǎi",
    "愁红惨绿": "chóu hóng cǎn lü",
    "冲冠眦裂": "chōng guàn zì liè",
    "冲冠怒发": "chōng guàn nù fà",
    "冲冠发怒": "chōng guàn fā nù",
    "赤绳系足": "chì shéng jì zú",
    "耻与哙伍": "chǐ yú kuài wǔ",
    "齿牙为祸": "chǐ yá wéi huò",
    "尺二冤家": "chǐ èr yuān jia",
    "尺短寸长": "chǐ duǎn cù cháng",
    "尺寸之功": "chǐ cù zhī gōng",
    "吃着不尽": "chī zhuó bù jìn",
    "乘肥衣轻": "chéng féi yì qīng",
    "城北徐公": "chéng běi xǘ gōng",
    "成一家言": "chěng yī jiān yán",
    "成败兴废": "chéng bài xīng fèi",
    "趁水和泥": "chèn shuǐ huò ní",
    "趁哄打劫": "chèn hōng dǎ jié",
    "称雨道晴": "chēng yǔ dào aíng",
    "称体载衣": "chèn tǐ cái yī",
    "称体裁衣": "chèn tǐ cái yī",
    "称家有无": "chèn jiā yǒu wú",
    "称德度功": "chēng dé duó gōng",
    "沉吟章句": "chén yīn zhāng jù",
    "沉吟不决": "chén yīn bù jué",
    "沉谋重虑": "chén móu chóng lǜ",
    "沉疴宿疾": "chén kē sù jì",
    "嗔目切齿": "chēn mù qiē chǐ",
    "扯纤拉烟": "chě qiàn lā yān",
    "扯顺风旗": "chě shǔn fēng qí",
    "车载船装": "chē zǎi chuán zhuāng",
    "车尘马迹": "chē zhén mǎ jì",
    "朝种暮获": "zhāo zhǒng mù hù",
    "朝折暮折": "zhāo shé mù shé",
    "朝阳鸣凤": "zhāo yáng míng fèng",
    "朝升暮合": "zhāo shēng mù gě",
    "朝乾夕愓": "zhāo qián xī dàng",
    "朝前夕惕": "zhāo qiáng xī tì",
    "朝攀暮折": "zhāo pān mù shé",
    "朝成暮徧": "cháo chéng mù shí",
    "巢居穴处": "cháo jū xué chǔ",
    "超今冠古": "chāo jīn guàn gǔ",
    "倡条冶叶": "chāng tiáo yě yè",
    "倡而不和": "chàng ér bù hè",
    "畅所欲为": "chàng suǒ yù wéi",
    "苌弘碧血": "cháng hóng bì xuě",
    "长幼尊卑": "zhǎng yòu zūn bēi",
    "长幼有叙": "zhǎng yòu yǒu xù",
    "长绳系日": "cháng shéng jì rì",
    "长篇累牍": "cháng piān lěi dú",
    "长年三老": "zhǎng nián sān lǎo",
    "长虺成蛇": "zhǎng huǐ chéng shé",
    "长恶靡悛": "cháng è mǐ quān",
    "长春不老": "cháng chún bù lǎo",
    "长傲饰非": "zhǎng ào shì fēi",
    "昌亭旅食": "cháng tíng lǚ shí",
    "谄上抑下": "chǎn shàng yi xià",
    "禅絮沾泥": "chán xū zhān ní",
    "差三错四": "chā sān cuò sì",
    "层台累榭": "céng tái lěi xiè",
    "层见迭出": "céng chū dié jiàn",
    "草率将事": "cǎo lǜ jiāng shì",
    "操奇逐赢": "cāo qì zhù yíng",
    "操戈同室": "cāo gē tóon shì",
    "藏踪蹑迹": "cáng zōng niè jī",
    "苍蝇见血": "cāng yíng jiàn xuě",
    "惨绿愁红": "cǎn lü chóu hóng",
    "餐松啖柏": "cān sōng dàn biǎ",
    "餐风宿草": "cān fēng sù xuě",
    "骖风驷霞": "cēn fēng sì xiá",
    "参伍错综": "cēn wǔ cuò zōng",
    "参横斗转": "shēn héng dǒu zhuǎn",
    "参回斗转": "shēn huí dǒu zhuǎn",
    "参辰卯酉": "shēn chén mǎo yǒu",
    "参辰日月": "shēn chén rì yuè",
    "材优干济": "cái yōu gàn jǐ",
    "材轻德薄": "cái qīng dé bó",
    "材大难用": "cái dà nán yòng",
    "材薄质衰": "cái bó zhì shuāi",
    "才占八斗": "cái zhān bā dǒu",
    "才疏德薄": "cái shū dé bó",
    "才轻德薄": "cái qīng dé bó",
    "才大难用": "cái dà nán yòng",
    "才薄智浅": "cāi bó zhì qiǎn",
    "擦拳抹掌": "cā quán mò zhǎng",
    "不足为意": "bù zú wéi yì",
    "不足为据": "bù zú wéi jù",
    "不足为法": "bù zú wéi fǎ",
    "不足齿数": "bù zú chǐ shǔ",
    "不着疼热": "bù zhuó téng rè",
    "不知薡蕫": "bù zhī dīng dǒng",
    "不越雷池": "bù yuè léi shi",
    "不亦善夫": "bù yi shàn fū",
    "不相为谋": "bù xiāng wéi móu",
    "不贪为宝": "bù tān wé bǎo",
    "不随以止": "bu shui yi zi",
    "不奈之何": "bù nai zhī hé",
    "不露锋铓": "bù lù fēng huì",
    "不了而了": "bù liǎo ér liǎo",
    "不可胜举": "bù kě shèng jù",
    "不可奈何": "bù kě mài hé",
    "不可揆度": "bù kě kuí duó",
    "不绝如发": "bù jué rú fà",
    "不揪不睬": "bù chǒu bù cǎi",
    "不间不界": "bù gān bù gà",
    "不遑启处": "bù huáng qǐ chǔ",
    "不遑宁处": "bù huáng níng chǔ",
    "不根之谈": "bù gān zhī tán",
    "不分青白": "bù fēn qīng béi",
    "不当不正": "bù dāng bù zhèng",
    "不差什么": "bù chà shí mǒ",
    "不差上下": "bù chā shàng xià",
    "不差累黍": "bù chā lěi shǔ",
    "不差毫厘": "bù chā háo lí",
    "不差毫发": "bù chā háo fà",
    "不辟斧钺": "bù bì fǔ yuè",
    "不拔一毛": "bù bá yì máo",
    "餔糟啜漓": "bǔ zāo chuò lí",
    "擘两分星": "bó liǎng fēn xīng",
    "簸土扬沙": "bǒ tǔ yáng shā",
    "薄物细故": "bó wù xì gù",
    "薄情无义": "báo qíng wú yì",
    "薄寒中人": "bó hán zhòng rén",
    "博文约礼": "bó wén yuè lǐ",
    "伯乐一顾": "bō lè yī gù",
    "播糠眯目": "bō kāng mǐ mù",
    "播穅眯目": "bō kāng mǐ mù",
    "剥皮抽筋": "bō pí chōu jīn",
    "剥肤椎髓": "bō fū chuí suǐ",
    "波属云委": "bō zhǔ yún wěi",
    "波骇云属": "bō hài yún zhǔ",
    "拨乱为治": "bō luàn wéi zhì",
    "病入骨隨": "bìng rù gǔ suǐ",
    "并赃拿贼": "bìng zhuō ná zéi",
    "并为一谈": "bìng wéi yī tán",
    "丙种射线": "bǐng zhǒng shè xiàn",
    "兵未血刃": "bīng wèi xuě rèn",
    "兵微将寡": "bīng wēi jiàng guǎ",
    "兵强将勇": "bīng qiáng àng yǒng",
    "兵多将广": "bīng duō jiàng guǎng",
    "兵不由将": "bīng bù yóu jiàng",
    "冰解的破": "bīng jiě dì pò",
    "彬彬济济": "bīn bīn jǐ jǐ",
    "别类分门": "bié lèi fān mén",
    "别开一格": "bié kāi yí gé",
    "别鹤离鸾": "bié hè lí láun",
    "别创一格": "bié chuàng yí gé",
    "摽梅之年": "biào mén zhī nián",
    "表里为奸": "biǎo lǐ wéi jiān",
    "飙发电举": "biāo fā diàn jù",
    "变贪厉薄": "biǎn tān lì bó",
    "变危为安": "biàn wēi wéi ān",
    "变幻不测": "biàn huà bù cè",
    "变风改俗": "biàn fēng yì sú",
    "鞭约近里": "biān yuē jīn lǐ",
    "鞭擗向里": "biān bì xiàng lǐ",
    "鞭擗进里": "bīan pì jìn lǐ",
    "鞭辟着里": "biān bì zhuó lǐ",
    "鞭辟向里": "biān bì xiàng lǐ",
    "避难趋易": "bì nán qiù yì",
    "蔽明塞聪": "bì míng sè cōng",
    "蔽聪塞明": "bì cōng sè míng",
    "敝帷不弃": "bǐ wéi bù qì",
    "敝盖不弃": "bǐ gài bù qì",
    "闭目塞耳": "bì mù sè ěr",
    "闭明塞聪": "bì míng sè cōng",
    "闭门思愆": "bì gé sī qiān",
    "闭门扫迹": "bì kǒu sǎo guǐ",
    "闭门塞户": "bì kǒu sè hù",
    "闭门塞窦": "bì kǒu sè dòu",
    "闭门合辙": "bì kǒu hé shé",
    "闭合自责": "bì gé zì zé",
    "闭合思过": "bì gé sī guò",
    "秕言谬说": "bǐ yán miù shuò",
    "彼唱此和": "bǐ chàng cǐ hè",
    "彼倡此和": "bǐ chàng cǐ hè",
    "比物属事": "bǐ wù zhǔ shì",
    "比量齐观": "bǐ liàng qí guān",
    "本枝百世": "běn zhī bǒi shì",
    "被山带河": "pī shān dài hé",
    "被甲执兵": "pī jiǎ zhí bīng",
    "被甲枕戈": "pī jiǎ zhěn gē",
    "被甲据鞍": "pī jiǎ jù ān",
    "被甲持兵": "pī jiǎ chí bīng",
    "被褐怀珠": "pī hè huái zhū",
    "被褐怀玉": "pī hè huái yù",
    "被发缨冠": "pī fà yīng guàn",
    "被发文身": "pī fà wén shēn",
    "背义忘恩": "bèi yù wàng ēn",
    "背义负信": "bèi yù fù xìn",
    "背义负恩": "bèi yù fù ēn",
    "背曲腰弯": "bèi qǔ yāo wān",
    "背曲腰躬": "bèi qǔ yāo gōng",
    "北门管钥": "běi mén guǎn yuè",
    "北窗高卧": "bēi chuāng gāo wò",
    "北辰星拱": "bēi chén xīng gǒng",
    "北鄙之音": "bēi bǐ zhī yīn",
    "北鄙之声": "bēi bǐ zhī shēng",
    "悲声载道": "bēi shēng zài dào",
    "卑宫菲食": "bēi gōng fěi shí",
    "暴衣露冠": "pù yī lù guàn",
    "暴衣露盖": "pù yī lù gài",
    "暴腮龙门": "pù sāi lóng mén",
    "暴露文学": "bào lòu wén xué",
    "暴虎冯河": "bào hǔ píng hé",
    "抱蔓摘瓜": "bào wàn zhāi guā",
    "抱关执钥": "bào guān zhí yuè",
    "抱法处势": "bào fǎ chǔ shì",
    "褒贬与夺": "bǎo biǎn yǔ duó",
    "帮闲钻懒": "bāng xián zuān lǎn",
    "半上落下": "bàn shàng luò xià",
    "半间不界": "bàn gān bù gà",
    "半间半界": "bàn gān bàn gà",
    "半筹莫展": "bàn chóu mò chǎn",
    "拜将封侯": "bài jiàng fēng hóu",
    "百中百发": "bǎi zhòng bǎi fā",
    "百下百着": "bǎi xià bǎi zháo",
    "百兽率舞": "bǎi shòu shuài wǔ",
    "百舍重趼": "bǎi shè chóng jiǎn",
    "百舍重茧": "bǎi shè chóng jiǎn",
    "百了千当": "bǎi liǎo qiān dāng",
    "百孔千创": "bǎi kǒng qiān chuāng",
    "百堕俱举": "bǎi huī jù jǔ",
    "百不当一": "bǎi bù dāng yī",
    "白衣卿相": "bái yī qīng xiàng",
    "白首相庄": "bái shǒu xiāng zhuāng",
    "白首为郎": "bái shǒu wéi láng",
    "白首相知": "bái shǒu xiāng zhī",
    "白不呲咧": "bái bù cī liě",
    "把玩无厌": "bǎ wán wǔ yàn",
    "拔锅卷席": "bá guō juǎn xí",
    "拔本塞源": "bá běn sè yuán",
    "拔本塞原": "bá běn sè yuán",
    "扒耳搔腮": "pá ěr sāo sāi",
    "八难三灾": "bā nàn sān zāi",
    "傲不可长": "ào bù kě zhǎng",
    "鳌鸣鳖应": "áo míng biē yīng",
    "熬更守夜": "áo gēng shǒu yè",
    "敖不可长": "ào bù kě zhǎng",
    "暗箭中人": "àn jiàn zhòng rén",
    "安时处顺": "ān shí chǔ shùn",
    "安身为乐": "ān shēn wéi lè",
    "安老怀少": "ān lǎo huái shào",
    "安常处顺": "ān cháng chǔ shùn",
    "安步当车": "ān bù dàng chē",
    "爱生恶死": "ài shēng wù sǐ",
    "爱人好士": "ài rén hào shì",
    "矮子观场": "ǎi zǐ guān cháng",
    "矮人观场": "ǎi rén guān cháng",
    "捱风缉缝": "āi fēng qī fèng",
    "挨山塞海": "āi shān sè hǎi",
    "挨肩擦膀": "āi jiān cā bǎng",
    "阿其所好": "ē qí suǒ hào",
    "阿家阿翁": "ā gū ā wēng",
    "阿党相为": "ē dǎng xiāng wéi",
    "追亡逐北": "zhuī bēn zhú běi",
    "转忧为喜": "zhuǎn yōu wéi xǐ",
    "竹篮打水": "zhú lán dá shuǐ",
    "重铬酸钾": "chóng gè suān jiǎ",
    "知疼着热": "zhī téng zháo rè",
    "语不惊人": "yǔ bù jīng rèn",
    "于今为烈": "yú jīn wéi liè",
    "以古为镜": "yǐ gǔ wéi jìng",
    "一日三省": "yī rì sān xǐng",
    "燕雀处堂": "yàn què chǔ táng",
    "穴居野处": "xué jū yě chǔ",
    "五脊六兽": "wǔ jí liù shòu",
    "无声无臭": "wú shēng wú xiù",
    "谓予不信": "wèi yú bù xìn",
    "万箭攒心": "wàn jiàn cuán xīn",
    "舍身为国": "shě shēn wéi guó",
    "杀妻求将": "shā qī qiú jiàng",
    "曲不离口": "qǔ bù lí kǒu",
    "强作解人": "qiǎng zuò jiě rén",
    "气冲斗牛": "qì chōng dǒu niú",
    "毛发悚然": "máo fā sǒng rán",
    "临深履薄": "lín shēn lǚ bó",
    "老调重谈": "lǎo diào chóng tán",
    "钧天广乐": "jūn tiān guǎng yuè",
    "艰难竭蹶": "jiān nán jié jué",
    "夹七夹八": "jiā qī jiā bā",
    "霁月光风": "jī yuè guāng fēng",
    "急功好利": "jí gōng hào lì",
    "祸福相倚": "huò fú xiāng yī",
    "混混噩噩": "hún hún è è",
    "厚古薄今": "hòu gǔ bó jīn",
    "鬼怕恶人": "guǐ pà èr én",
    "伽马射线": "gā mǎ shè xiàn",
    "佛头着粪": "fó tóu zhuó fèn",
    "奉为至宝": "fèng wéi zhì bǎo",
    "恶语中伤": "è yǔ zhòng shāng",
    "丢三拉四": "diu sān lā sì",
    "登坛拜将": "dēng tán bài jiàng",
    "晨昏定省": "chén hūn dìng xǐng",
    "察察为明": "chá chá wéi míng",
    "博闻强识": "bó wén qiáng zhì",
    "避难就易": "bì nán jiù yì"
  }, {
    "巴尔干半岛": "bā ěr gàn bàn dǎo",
    "巴尔喀什湖": "bā ěr kā shí hú",
    "不幸而言中": "bù xìng ér yán zhòng",
    "布尔什维克": "bù ěr shí wéi kè",
    "赶鸭子上架": "gǎn yā zī shàng jià",
    "何乐而不为": "hé lè ér bù wéi",
    "苛政猛于虎": "kē zhè měng yú hǔ",
    "蒙得维的亚": "méng de wéi de yà",
    "民以食为天": "mín yǐ shí wéi tiān",
    "拧成一股绳": "níng chéng yī gǔ shéng",
    "事后诸葛亮": "shì hòu zhū gé liàng",
    "物以稀为贵": "wù yǐ xī wéi guì",
    "先下手为强": "xiān xià shǒu wéi qiáng",
    "行行出状元": "háng háng chū zhuàng yuán",
    "亚得里亚海": "yà de lǐ yà hǎi",
    "眼不见为净": "yǎn bù jiàn wéi jìng",
    "有鼻子有眼": "yǒu bí zi yǒu yǎn",
    "竹筒倒豆子": "zhú tǒng dǎo dòu zi"
  }],
  x = function x(n) {
    var h = n.charCodeAt(0),
      g = o[h];
    return g ? g.split(" ")[0] : n;
  },
  t = function t(n, h, g, i) {
    if (h > 5) t(n, 5, g, i);else if (h <= 1) for (var u = 0; u < n.length; u++) {
      var z = n[u],
        s = x(z);
      g[i + u] = {
        origin: z,
        result: s,
        isZh: s !== z,
        originPinyin: s
      };
    } else {
      var o = function o(u) {
        var z = n.indexOf(u);
        if (z > -1) {
          b[h][u].split(" ").forEach(function (n, h) {
            g[i + z + h] = {
              origin: u[h],
              result: n,
              isZh: !0,
              originPinyin: n
            };
          });
          var s = n.slice(0, z);
          t(s, s.length, g, i);
          var o = n.slice(z + u.length);
          return t(o, o.length, g, i + z + u.length), {
            value: void 0
          };
        }
      };
      for (var y in b[h]) {
        var j = o(y);
        if ("object" == (0, _typeof2.default)(j)) return j.value;
      }
      t(n, h - 1, g, i);
    }
  },
  q = function q(n, h, g, i) {
    var u = function u(h) {
      var u = n.indexOf(h);
      if (u > -1) {
        z[h].split(" ").forEach(function (n, z) {
          g[i + u + z] = {
            origin: h[z],
            result: n,
            isZh: !0,
            originPinyin: n
          };
        });
        var s = n.slice(0, u);
        q(s, s.length, g, i);
        var o = n.slice(u + h.length);
        return q(o, o.length, g, i + u + h.length), {
          value: void 0
        };
      }
    };
    for (var s in z) {
      var o = u(s);
      if ("object" == (0, _typeof2.default)(o)) return o.value;
    }
    t(n, h, g, i);
  },
  w = function w(n, h, g, i, u) {
    var z = d(),
      s = function s(h) {
        var s = n.indexOf(h);
        if (s > -1) {
          z[h].split(" ").forEach(function (n, u) {
            g[i + s + u] = {
              origin: h[u],
              result: n,
              isZh: !0,
              originPinyin: n
            };
          });
          var o = n.slice(0, s);
          w(o, o.length, g, i, u);
          var y = n.slice(s + h.length);
          return w(y, y.length, g, i + s + h.length, u), {
            value: void 0
          };
        }
      };
    for (var o in z) {
      var y = s(o);
      if ("object" == (0, _typeof2.default)(y)) return y.value;
    }
    "surname" === u ? q(n, h, g, i) : t(n, h, g, i);
  },
  m = function m(n) {
    return n.replace(/(ā|á|ǎ|à)/g, "a").replace(/(ō|ó|ǒ|ò)/g, "o").replace(/(ē|é|ě|è)/g, "e").replace(/(ī|í|ǐ|ì)/g, "i").replace(/(ū|ú|ǔ|ù)/g, "u").replace(/(ǖ|ǘ|ǚ|ǜ)/g, "ü").replace(/(ń|ň|ǹ)/g, "n");
  },
  f = function f(u) {
    for (var z = [], s = [], o = 0, y = u.split(" "); o < y.length; o++) {
      for (var j = y[o], c = 0, l = n; c < l.length; c++) {
        var d = l[c];
        if (j.startsWith(d)) {
          var b = j.slice(d.length);
          -1 !== h.indexOf(d) && -1 !== g.indexOf(b) && (b = i[b]), z.push(d), s.push(b);
          break;
        }
      }
    }
    return {
      final: s.join(" "),
      initial: z.join(" ")
    };
  },
  r = function r(n) {
    var h = f(n).final,
      g = "",
      i = "",
      z = "";
    return -1 !== u.indexOf(m(h)) ? (g = h[0], i = h[1], z = h.slice(2)) : (i = h[0] || "", z = h.slice(1) || ""), {
      head: g,
      body: i,
      tail: z
    };
  },
  p = function p(n) {
    var h = /(ā|ō|ē|ī|ū|ǖ)/,
      g = /(á|ó|é|í|ú|ǘ|ń)/,
      i = /(ǎ|ǒ|ě|ǐ|ǔ|ǚ|ň)/,
      u = /(à|ò|è|ì|ù|ǜ|ǹ)/,
      z = /(a|o|e|i|u|ü|n)/,
      s = [];
    return n.split(" ").forEach(function (n) {
      h.test(n) ? s.push("1") : g.test(n) ? s.push("2") : i.test(n) ? s.push("3") : u.test(n) ? s.push("4") : z.test(n) ? s.push("0") : s.push("");
    }), s.join(" ");
  },
  e = function e(n) {
    var h = [];
    return n.split(" ").forEach(function (n) {
      h.push(n[0]);
    }), h.join(" ");
  },
  k = function k(n, h) {
    return !(1 !== j(n) || !h.multiple) && function (n, h) {
      void 0 === h && (h = "normal");
      var g = n.charCodeAt(0),
        i = d()[n] || ("surname" === h ? z[n] : "") || o[g] || "";
      return i ? i.split(" ").map(function (h) {
        return {
          origin: n,
          result: h,
          isZh: !0,
          originPinyin: h
        };
      }) : [{
        origin: n,
        result: n,
        isZh: !1,
        originPinyin: n
      }];
    }(n, h.mode);
  },
  a = function a(n, h) {
    switch (h.toneType) {
      case "symbol":
        break;
      case "none":
        n.forEach(function (n) {
          n.result = m(n.result);
        });
        break;
      case "num":
        n.forEach(function (n) {
          n.result = function (n, h) {
            var g = m(n).split(" "),
              i = p(h).split(" "),
              u = [];
            return g.forEach(function (n, h) {
              u.push("" + n + i[h]);
            }), u.join(" ");
          }(n.result, n.originPinyin);
        });
    }
  },
  v = {
    pattern: "pinyin",
    toneType: "symbol",
    type: "string",
    multiple: !1,
    mode: "normal",
    removeNonZh: !1,
    nonZh: "spaced",
    v: !1
  };
function E(n, h) {
  if (void 0 === h && (h = v), !function (n) {
    return "string" == typeof n || (console.error("The first param of pinyin is error: " + n + ' is not assignable to type "string".'), !1);
  }(n)) return n;
  if ("" === n) return "array" === h.type || "all" === h.type ? [] : "";
  "all" === h.type && (h.pattern = "pinyin"), "num" === h.pattern && (h.toneType = "none"), h.removeNonZh && (h.nonZh = "removed");
  var g = function (n, h, g) {
    var i = Array(n.length);
    g ? w(n, n.length, i, 0, h) : "surname" === h ? q(n, n.length, i, 0) : t(n, n.length, i, 0);
    for (var u = i.length - 2; u >= 0; u--) {
      var z = i[u],
        s = i[u + 1];
      /[\uD800-\uDBFF]/.test(z.result) && /[\uDC00-\uDFFF]/.test(s.result) && (z.origin += s.origin, z.result += s.result, z.originPinyin = z.result, s.delete = !0, u--);
    }
    return i.filter(function (n) {
      return !n.delete;
    });
  }(n, h.mode || "normal", !!Object.keys(c).length);
  return g = function (n, h) {
    var g = h.nonZh;
    if ("removed" === g) return n.filter(function (n) {
      return n.isZh;
    });
    if ("consecutive" === g) {
      for (var i = n.length - 2; i >= 0; i--) {
        var u = n[i],
          z = n[i + 1];
        u.isZh || z.isZh || (u.origin += z.origin, u.result += z.result, z.delete = !0);
      }
      return n.filter(function (n) {
        return !n.delete;
      });
    }
    return n;
  }(g, h), k(n, h) && (g = k(n, h)), function (n, h) {
    switch (h.pattern) {
      case "pinyin":
        break;
      case "num":
        n.forEach(function (n) {
          n.result = p(n.result);
        });
        break;
      case "initial":
        n.forEach(function (n) {
          n.result = f(n.result).initial;
        });
        break;
      case "final":
        n.forEach(function (n) {
          n.result = f(n.result).final;
        });
        break;
      case "first":
        n.forEach(function (n) {
          n.result = e(n.result);
        });
        break;
      case "finalHead":
        n.forEach(function (n) {
          n.result = r(n.result).head;
        });
        break;
      case "finalBody":
        n.forEach(function (n) {
          n.result = r(n.result).body;
        });
        break;
      case "finalTail":
        n.forEach(function (n) {
          n.result = r(n.result).tail;
        });
    }
  }(g, h), a(g, h), function (n, h) {
    h.v && n.forEach(function (n) {
      n.result = n.result.replace(/ü/g, "v");
    });
  }(g, h), function (n, h, g) {
    if (h.multiple && 1 === j(g)) {
      var i = "";
      n = n.filter(function (n) {
        var h = n.result !== i;
        return i = n.result, h;
      });
    }
    return "array" === h.type ? n.map(function (n) {
      return n.result;
    }) : "all" === h.type ? n.map(function (n) {
      var h = n.isZh ? n.result : "",
        g = f(h),
        i = g.initial,
        u = g.final,
        z = r(h),
        s = z.head,
        o = z.body,
        y = z.tail;
      return {
        origin: n.origin,
        pinyin: h,
        initial: i,
        final: u,
        first: n.isZh ? e(n.result) : "",
        finalHead: s,
        finalBody: o,
        finalTail: y,
        num: Number(p(n.originPinyin)),
        isZh: n.isZh
      };
    }) : n.map(function (n) {
      return n.result;
    }).join(" ");
  }(g, h, n);
}
var Z = function Z(n, h) {
    for (var g = [], i = h, u = function u(h) {
        if (n[h] === i[0]) return i = i.slice(1), g.push(h), "continue";
        var u = E(n[h], {
            toneType: "none",
            multiple: !0,
            type: "array"
          }),
          z = 0;
        return u.forEach(function (n) {
          var h = F(n, i);
          h > z && (z = h);
        }), z && (i = i.slice(z), g.push(h)), i ? void 0 : "break";
      }, z = 0; z < n.length; z++) {
      if ("break" === u(z)) break;
    }
    return g.length && !i ? g : null;
  },
  F = function F(n, h) {
    for (var g = 0, i = 0; i < n.length; i++) {
      n[i] === h[g] && g++;
    }
    return g;
  };
exports.match = Z;

/***/ }),

/***/ 5:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6:
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s,
      _e,
      _x,
      _r,
      _arr = [],
      _n = !0,
      _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i) return;
        _n = !1;
      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {
        ;
      }
    } catch (err) {
      _d = !0, _e = err;
    } finally {
      try {
        if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 7:
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 8);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 8:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 9:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

}]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map